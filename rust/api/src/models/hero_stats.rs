/*
 * Deadlock API
 *
 *  ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HeroStats {
    #[serde(rename = "account_id")]
    pub account_id: u32,
    #[serde(rename = "accuracy")]
    pub accuracy: f64,
    #[serde(rename = "assists")]
    pub assists: u64,
    #[serde(rename = "assists_per_min")]
    pub assists_per_min: f64,
    #[serde(rename = "creeps_per_min")]
    pub creeps_per_min: f64,
    #[serde(rename = "crit_shot_rate")]
    pub crit_shot_rate: f64,
    #[serde(rename = "damage_mitigated_per_min")]
    pub damage_mitigated_per_min: f64,
    #[serde(rename = "damage_per_min")]
    pub damage_per_min: f64,
    #[serde(rename = "damage_per_soul")]
    pub damage_per_soul: f64,
    #[serde(rename = "damage_taken_per_min")]
    pub damage_taken_per_min: f64,
    #[serde(rename = "damage_taken_per_soul")]
    pub damage_taken_per_soul: f64,
    #[serde(rename = "deaths")]
    pub deaths: u64,
    #[serde(rename = "deaths_per_min")]
    pub deaths_per_min: f64,
    #[serde(rename = "denies_per_match")]
    pub denies_per_match: f64,
    #[serde(rename = "denies_per_min")]
    pub denies_per_min: f64,
    #[serde(rename = "ending_level")]
    pub ending_level: f64,
    /// See more: <https://assets.deadlock-api.com/v2/heroes>
    #[serde(rename = "hero_id")]
    pub hero_id: u32,
    #[serde(rename = "kills")]
    pub kills: u64,
    #[serde(rename = "kills_per_min")]
    pub kills_per_min: f64,
    #[serde(rename = "last_hits_per_min")]
    pub last_hits_per_min: f64,
    #[serde(rename = "last_played")]
    pub last_played: u32,
    #[serde(rename = "matches")]
    pub matches: Vec<u64>,
    #[serde(rename = "matches_played")]
    pub matches_played: u64,
    #[serde(rename = "networth_per_min")]
    pub networth_per_min: f64,
    #[serde(rename = "obj_damage_per_min")]
    pub obj_damage_per_min: f64,
    #[serde(rename = "obj_damage_per_soul")]
    pub obj_damage_per_soul: f64,
    #[serde(rename = "time_played")]
    pub time_played: u64,
    #[serde(rename = "wins")]
    pub wins: u64,
}

impl HeroStats {
    pub fn new(account_id: u32, accuracy: f64, assists: u64, assists_per_min: f64, creeps_per_min: f64, crit_shot_rate: f64, damage_mitigated_per_min: f64, damage_per_min: f64, damage_per_soul: f64, damage_taken_per_min: f64, damage_taken_per_soul: f64, deaths: u64, deaths_per_min: f64, denies_per_match: f64, denies_per_min: f64, ending_level: f64, hero_id: u32, kills: u64, kills_per_min: f64, last_hits_per_min: f64, last_played: u32, matches: Vec<u64>, matches_played: u64, networth_per_min: f64, obj_damage_per_min: f64, obj_damage_per_soul: f64, time_played: u64, wins: u64) -> HeroStats {
        HeroStats {
            account_id,
            accuracy,
            assists,
            assists_per_min,
            creeps_per_min,
            crit_shot_rate,
            damage_mitigated_per_min,
            damage_per_min,
            damage_per_soul,
            damage_taken_per_min,
            damage_taken_per_soul,
            deaths,
            deaths_per_min,
            denies_per_match,
            denies_per_min,
            ending_level,
            hero_id,
            kills,
            kills_per_min,
            last_hits_per_min,
            last_played,
            matches,
            matches_played,
            networth_per_min,
            obj_damage_per_min,
            obj_damage_per_soul,
            time_played,
            wins,
        }
    }
}

