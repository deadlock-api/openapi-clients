/*
 * Deadlock API
 *
 *  ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HeroSynergyStats {
    /// The number of assists by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "assists1")]
    pub assists1: u64,
    /// The number of assists by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "assists2")]
    pub assists2: u64,
    /// The number of creeps killed by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "creeps1")]
    pub creeps1: u64,
    /// The number of creeps killed by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "creeps2")]
    pub creeps2: u64,
    /// The number of deaths by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "deaths1")]
    pub deaths1: u64,
    /// The number of deaths by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "deaths2")]
    pub deaths2: u64,
    /// The number of denies by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "denies1")]
    pub denies1: u64,
    /// The number of denies by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "denies2")]
    pub denies2: u64,
    /// The ID of the first hero in the pair.
    #[serde(rename = "hero_id1")]
    pub hero_id1: u32,
    /// The ID of the second hero in the pair.
    #[serde(rename = "hero_id2")]
    pub hero_id2: u32,
    /// The number of kills by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "kills1")]
    pub kills1: u64,
    /// The number of kills by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "kills2")]
    pub kills2: u64,
    /// The number of last hits by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "last_hits1")]
    pub last_hits1: u64,
    /// The number of last hits by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "last_hits2")]
    pub last_hits2: u64,
    /// The total number of matches played where `hero_id1` and `hero_id2` were on the same team, meeting the filter criteria.
    #[serde(rename = "matches_played")]
    pub matches_played: u64,
    /// The net worth of `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "networth1")]
    pub networth1: u64,
    /// The net worth of `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "networth2")]
    pub networth2: u64,
    /// The amount of objective damage dealt by `hero_id1` when playing with `hero_id2`.
    #[serde(rename = "obj_damage1")]
    pub obj_damage1: u64,
    /// The amount of objective damage dealt by `hero_id2` when playing with `hero_id1`.
    #[serde(rename = "obj_damage2")]
    pub obj_damage2: u64,
    /// The number of times the team won when both `hero_id1` and `hero_id2` were on the same team.
    #[serde(rename = "wins")]
    pub wins: u64,
}

impl HeroSynergyStats {
    pub fn new(assists1: u64, assists2: u64, creeps1: u64, creeps2: u64, deaths1: u64, deaths2: u64, denies1: u64, denies2: u64, hero_id1: u32, hero_id2: u32, kills1: u64, kills2: u64, last_hits1: u64, last_hits2: u64, matches_played: u64, networth1: u64, networth2: u64, obj_damage1: u64, obj_damage2: u64, wins: u64) -> HeroSynergyStats {
        HeroSynergyStats {
            assists1,
            assists2,
            creeps1,
            creeps2,
            deaths1,
            deaths2,
            denies1,
            denies2,
            hero_id1,
            hero_id2,
            kills1,
            kills2,
            last_hits1,
            last_hits2,
            matches_played,
            networth1,
            networth2,
            obj_damage1,
            obj_damage2,
            wins,
        }
    }
}

