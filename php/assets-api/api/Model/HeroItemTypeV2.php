<?php
/**
 * HeroItemTypeV2
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Assets - Deadlock API
 *
 * ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.15.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * HeroItemTypeV2 Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HeroItemTypeV2
{
    /**
     * Possible values of this enum
     */
    public const WEAPON_PRIMARY = 'weapon_primary';

    public const WEAPON_SECONDARY = 'weapon_secondary';

    public const WEAPON_MELEE = 'weapon_melee';

    public const ABILITY_MANTLE = 'ability_mantle';

    public const ABILITY_JUMP = 'ability_jump';

    public const ABILITY_SLIDE = 'ability_slide';

    public const ABILITY_ZIP_LINE = 'ability_zip_line';

    public const ABILITY_ZIP_LINE_BOOST = 'ability_zip_line_boost';

    public const ABILITY_CLIMB_ROPE = 'ability_climb_rope';

    public const ABILITY_INNATE1 = 'ability_innate1';

    public const ABILITY_INNATE2 = 'ability_innate2';

    public const ABILITY_INNATE3 = 'ability_innate3';

    public const SIGNATURE1 = 'signature1';

    public const SIGNATURE2 = 'signature2';

    public const SIGNATURE3 = 'signature3';

    public const SIGNATURE4 = 'signature4';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::WEAPON_PRIMARY,
            self::WEAPON_SECONDARY,
            self::WEAPON_MELEE,
            self::ABILITY_MANTLE,
            self::ABILITY_JUMP,
            self::ABILITY_SLIDE,
            self::ABILITY_ZIP_LINE,
            self::ABILITY_ZIP_LINE_BOOST,
            self::ABILITY_CLIMB_ROPE,
            self::ABILITY_INNATE1,
            self::ABILITY_INNATE2,
            self::ABILITY_INNATE3,
            self::SIGNATURE1,
            self::SIGNATURE2,
            self::SIGNATURE3,
            self::SIGNATURE4
        ];
    }
}


