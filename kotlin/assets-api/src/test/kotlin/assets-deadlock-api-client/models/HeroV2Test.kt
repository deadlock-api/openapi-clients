/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.HeroV2
import assets-deadlock-api-client.models.HeroColorsV2
import assets-deadlock-api-client.models.HeroDescriptionV2
import assets-deadlock-api-client.models.HeroImagesV2
import assets-deadlock-api-client.models.HeroLevelInfoV2Output
import assets-deadlock-api-client.models.HeroPhysicsV2
import assets-deadlock-api-client.models.HeroShopStatDisplayV2Output
import assets-deadlock-api-client.models.HeroStartingStatsV2
import assets-deadlock-api-client.models.HeroTypeV2
import assets-deadlock-api-client.models.RawHeroItemSlotInfoValueV2Output
import assets-deadlock-api-client.models.RawHeroMapModCostBonusesV2Output
import assets-deadlock-api-client.models.RawHeroPurchaseBonusV2Output
import assets-deadlock-api-client.models.RawHeroScalingStatV2Output
import assets-deadlock-api-client.models.RawHeroStatsDisplayV2Output
import assets-deadlock-api-client.models.RawHeroStatsUIV2Output

class HeroV2Test : ShouldSpec() {
    init {
        // uncomment below to create an instance of HeroV2
        //val modelInstance = HeroV2()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `className`
        should("test className") {
            // uncomment below to test the property
            //modelInstance.className shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `playerSelectable`
        should("test playerSelectable") {
            // uncomment below to test the property
            //modelInstance.playerSelectable shouldBe ("TODO")
        }

        // to test the property `disabled`
        should("test disabled") {
            // uncomment below to test the property
            //modelInstance.disabled shouldBe ("TODO")
        }

        // to test the property `inDevelopment`
        should("test inDevelopment") {
            // uncomment below to test the property
            //modelInstance.inDevelopment shouldBe ("TODO")
        }

        // to test the property `needsTesting`
        should("test needsTesting") {
            // uncomment below to test the property
            //modelInstance.needsTesting shouldBe ("TODO")
        }

        // to test the property `assignedPlayersOnly`
        should("test assignedPlayersOnly") {
            // uncomment below to test the property
            //modelInstance.assignedPlayersOnly shouldBe ("TODO")
        }

        // to test the property `limitedTesting`
        should("test limitedTesting") {
            // uncomment below to test the property
            //modelInstance.limitedTesting shouldBe ("TODO")
        }

        // to test the property `complexity`
        should("test complexity") {
            // uncomment below to test the property
            //modelInstance.complexity shouldBe ("TODO")
        }

        // to test the property `skin`
        should("test skin") {
            // uncomment below to test the property
            //modelInstance.skin shouldBe ("TODO")
        }

        // to test the property `images`
        should("test images") {
            // uncomment below to test the property
            //modelInstance.images shouldBe ("TODO")
        }

        // to test the property `items`
        should("test items") {
            // uncomment below to test the property
            //modelInstance.items shouldBe ("TODO")
        }

        // to test the property `startingStats`
        should("test startingStats") {
            // uncomment below to test the property
            //modelInstance.startingStats shouldBe ("TODO")
        }

        // to test the property `itemSlotInfo`
        should("test itemSlotInfo") {
            // uncomment below to test the property
            //modelInstance.itemSlotInfo shouldBe ("TODO")
        }

        // to test the property `physics`
        should("test physics") {
            // uncomment below to test the property
            //modelInstance.physics shouldBe ("TODO")
        }

        // to test the property `colors`
        should("test colors") {
            // uncomment below to test the property
            //modelInstance.colors shouldBe ("TODO")
        }

        // to test the property `shopStatDisplay`
        should("test shopStatDisplay") {
            // uncomment below to test the property
            //modelInstance.shopStatDisplay shouldBe ("TODO")
        }

        // to test the property `statsDisplay`
        should("test statsDisplay") {
            // uncomment below to test the property
            //modelInstance.statsDisplay shouldBe ("TODO")
        }

        // to test the property `heroStatsUi`
        should("test heroStatsUi") {
            // uncomment below to test the property
            //modelInstance.heroStatsUi shouldBe ("TODO")
        }

        // to test the property `levelInfo`
        should("test levelInfo") {
            // uncomment below to test the property
            //modelInstance.levelInfo shouldBe ("TODO")
        }

        // to test the property `scalingStats`
        should("test scalingStats") {
            // uncomment below to test the property
            //modelInstance.scalingStats shouldBe ("TODO")
        }

        // to test the property `purchaseBonuses`
        should("test purchaseBonuses") {
            // uncomment below to test the property
            //modelInstance.purchaseBonuses shouldBe ("TODO")
        }

        // to test the property `standardLevelUpUpgrades`
        should("test standardLevelUpUpgrades") {
            // uncomment below to test the property
            //modelInstance.standardLevelUpUpgrades shouldBe ("TODO")
        }

        // to test the property `recommendedUpgrades`
        should("test recommendedUpgrades") {
            // uncomment below to test the property
            //modelInstance.recommendedUpgrades shouldBe ("TODO")
        }

        // to test the property `recommendedAbilityOrder`
        should("test recommendedAbilityOrder") {
            // uncomment below to test the property
            //modelInstance.recommendedAbilityOrder shouldBe ("TODO")
        }

        // to test the property `tags`
        should("test tags") {
            // uncomment below to test the property
            //modelInstance.tags shouldBe ("TODO")
        }

        // to test the property `gunTag`
        should("test gunTag") {
            // uncomment below to test the property
            //modelInstance.gunTag shouldBe ("TODO")
        }

        // to test the property `hideoutRichPresence`
        should("test hideoutRichPresence") {
            // uncomment below to test the property
            //modelInstance.hideoutRichPresence shouldBe ("TODO")
        }

        // to test the property `heroType`
        should("test heroType") {
            // uncomment below to test the property
            //modelInstance.heroType shouldBe ("TODO")
        }

        // to test the property `prereleaseOnly`
        should("test prereleaseOnly") {
            // uncomment below to test the property
            //modelInstance.prereleaseOnly shouldBe ("TODO")
        }

        // to test the property `costBonuses`
        should("test costBonuses") {
            // uncomment below to test the property
            //modelInstance.costBonuses shouldBe ("TODO")
        }

    }
}
