/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.ItemPropertyV2
import assets-deadlock-api-client.models.RawItemPropertyScaleFunctionSubclassV2
import assets-deadlock-api-client.models.UsageFlags
import assets-deadlock-api-client.models.Value1

class ItemPropertyV2Test : ShouldSpec() {
    init {
        // uncomment below to create an instance of ItemPropertyV2
        //val modelInstance = ItemPropertyV2()

        // to test the property ``value``
        should("test `value`") {
            // uncomment below to test the property
            //modelInstance.`value` shouldBe ("TODO")
        }

        // to test the property `canSetTokenOverride`
        should("test canSetTokenOverride") {
            // uncomment below to test the property
            //modelInstance.canSetTokenOverride shouldBe ("TODO")
        }

        // to test the property `providedPropertyType`
        should("test providedPropertyType") {
            // uncomment below to test the property
            //modelInstance.providedPropertyType shouldBe ("TODO")
        }

        // to test the property `cssClass`
        should("test cssClass") {
            // uncomment below to test the property
            //modelInstance.cssClass shouldBe ("TODO")
        }

        // to test the property `usageFlags`
        should("test usageFlags") {
            // uncomment below to test the property
            //modelInstance.usageFlags shouldBe ("TODO")
        }

        // to test the property `negativeAttribute`
        should("test negativeAttribute") {
            // uncomment below to test the property
            //modelInstance.negativeAttribute shouldBe ("TODO")
        }

        // to test the property `disableValue`
        should("test disableValue") {
            // uncomment below to test the property
            //modelInstance.disableValue shouldBe ("TODO")
        }

        // to test the property `locTokenOverride`
        should("test locTokenOverride") {
            // uncomment below to test the property
            //modelInstance.locTokenOverride shouldBe ("TODO")
        }

        // to test the property `displayUnits`
        should("test displayUnits") {
            // uncomment below to test the property
            //modelInstance.displayUnits shouldBe ("TODO")
        }

        // to test the property `iconPath`
        should("test iconPath") {
            // uncomment below to test the property
            //modelInstance.iconPath shouldBe ("TODO")
        }

        // to test the property `scaleFunction`
        should("test scaleFunction") {
            // uncomment below to test the property
            //modelInstance.scaleFunction shouldBe ("TODO")
        }

        // to test the property `prefix`
        should("test prefix") {
            // uncomment below to test the property
            //modelInstance.prefix shouldBe ("TODO")
        }

        // to test the property `label`
        should("test label") {
            // uncomment below to test the property
            //modelInstance.label shouldBe ("TODO")
        }

        // to test the property `postfix`
        should("test postfix") {
            // uncomment below to test the property
            //modelInstance.postfix shouldBe ("TODO")
        }

        // to test the property `postvalueLabel`
        should("test postvalueLabel") {
            // uncomment below to test the property
            //modelInstance.postvalueLabel shouldBe ("TODO")
        }

        // to test the property `conditional`
        should("test conditional") {
            // uncomment below to test the property
            //modelInstance.conditional shouldBe ("TODO")
        }

        // to test the property `icon`
        should("test icon") {
            // uncomment below to test the property
            //modelInstance.icon shouldBe ("TODO")
        }

    }
}
