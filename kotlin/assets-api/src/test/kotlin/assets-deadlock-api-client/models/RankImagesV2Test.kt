/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.RankImagesV2

class RankImagesV2Test : ShouldSpec() {
    init {
        // uncomment below to create an instance of RankImagesV2
        //val modelInstance = RankImagesV2()

        // to test the property `large`
        should("test large") {
            // uncomment below to test the property
            //modelInstance.large shouldBe ("TODO")
        }

        // to test the property `largeWebp`
        should("test largeWebp") {
            // uncomment below to test the property
            //modelInstance.largeWebp shouldBe ("TODO")
        }

        // to test the property `largeSubrank1`
        should("test largeSubrank1") {
            // uncomment below to test the property
            //modelInstance.largeSubrank1 shouldBe ("TODO")
        }

        // to test the property `largeSubrank1Webp`
        should("test largeSubrank1Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank1Webp shouldBe ("TODO")
        }

        // to test the property `largeSubrank2`
        should("test largeSubrank2") {
            // uncomment below to test the property
            //modelInstance.largeSubrank2 shouldBe ("TODO")
        }

        // to test the property `largeSubrank2Webp`
        should("test largeSubrank2Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank2Webp shouldBe ("TODO")
        }

        // to test the property `largeSubrank3`
        should("test largeSubrank3") {
            // uncomment below to test the property
            //modelInstance.largeSubrank3 shouldBe ("TODO")
        }

        // to test the property `largeSubrank3Webp`
        should("test largeSubrank3Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank3Webp shouldBe ("TODO")
        }

        // to test the property `largeSubrank4`
        should("test largeSubrank4") {
            // uncomment below to test the property
            //modelInstance.largeSubrank4 shouldBe ("TODO")
        }

        // to test the property `largeSubrank4Webp`
        should("test largeSubrank4Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank4Webp shouldBe ("TODO")
        }

        // to test the property `largeSubrank5`
        should("test largeSubrank5") {
            // uncomment below to test the property
            //modelInstance.largeSubrank5 shouldBe ("TODO")
        }

        // to test the property `largeSubrank5Webp`
        should("test largeSubrank5Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank5Webp shouldBe ("TODO")
        }

        // to test the property `largeSubrank6`
        should("test largeSubrank6") {
            // uncomment below to test the property
            //modelInstance.largeSubrank6 shouldBe ("TODO")
        }

        // to test the property `largeSubrank6Webp`
        should("test largeSubrank6Webp") {
            // uncomment below to test the property
            //modelInstance.largeSubrank6Webp shouldBe ("TODO")
        }

        // to test the property `small`
        should("test small") {
            // uncomment below to test the property
            //modelInstance.small shouldBe ("TODO")
        }

        // to test the property `smallWebp`
        should("test smallWebp") {
            // uncomment below to test the property
            //modelInstance.smallWebp shouldBe ("TODO")
        }

        // to test the property `smallSubrank1`
        should("test smallSubrank1") {
            // uncomment below to test the property
            //modelInstance.smallSubrank1 shouldBe ("TODO")
        }

        // to test the property `smallSubrank1Webp`
        should("test smallSubrank1Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank1Webp shouldBe ("TODO")
        }

        // to test the property `smallSubrank2`
        should("test smallSubrank2") {
            // uncomment below to test the property
            //modelInstance.smallSubrank2 shouldBe ("TODO")
        }

        // to test the property `smallSubrank2Webp`
        should("test smallSubrank2Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank2Webp shouldBe ("TODO")
        }

        // to test the property `smallSubrank3`
        should("test smallSubrank3") {
            // uncomment below to test the property
            //modelInstance.smallSubrank3 shouldBe ("TODO")
        }

        // to test the property `smallSubrank3Webp`
        should("test smallSubrank3Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank3Webp shouldBe ("TODO")
        }

        // to test the property `smallSubrank4`
        should("test smallSubrank4") {
            // uncomment below to test the property
            //modelInstance.smallSubrank4 shouldBe ("TODO")
        }

        // to test the property `smallSubrank4Webp`
        should("test smallSubrank4Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank4Webp shouldBe ("TODO")
        }

        // to test the property `smallSubrank5`
        should("test smallSubrank5") {
            // uncomment below to test the property
            //modelInstance.smallSubrank5 shouldBe ("TODO")
        }

        // to test the property `smallSubrank5Webp`
        should("test smallSubrank5Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank5Webp shouldBe ("TODO")
        }

        // to test the property `smallSubrank6`
        should("test smallSubrank6") {
            // uncomment below to test the property
            //modelInstance.smallSubrank6 shouldBe ("TODO")
        }

        // to test the property `smallSubrank6Webp`
        should("test smallSubrank6Webp") {
            // uncomment below to test the property
            //modelInstance.smallSubrank6Webp shouldBe ("TODO")
        }

    }
}
