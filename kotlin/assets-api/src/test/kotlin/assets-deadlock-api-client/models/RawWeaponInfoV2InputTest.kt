/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.RawWeaponInfoV2Input
import assets-deadlock-api-client.models.MAimingshootspreadpenalty
import assets-deadlock-api-client.models.MStandingshootspreadpenalty
import assets-deadlock-api-client.models.RawItemWeaponInfoBulletSpeedCurveV2Input
import assets-deadlock-api-client.models.RawWeaponInfoHorizontalRecoilV2Input
import assets-deadlock-api-client.models.RawWeaponInfoVerticalRecoilV2Input

class RawWeaponInfoV2InputTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RawWeaponInfoV2Input
        //val modelInstance = RawWeaponInfoV2Input()

        // to test the property `mBCanZoom`
        should("test mBCanZoom") {
            // uncomment below to test the property
            //modelInstance.mBCanZoom shouldBe ("TODO")
        }

        // to test the property `mFlBulletDamage`
        should("test mFlBulletDamage") {
            // uncomment below to test the property
            //modelInstance.mFlBulletDamage shouldBe ("TODO")
        }

        // to test the property `mFlBulletGravityScale`
        should("test mFlBulletGravityScale") {
            // uncomment below to test the property
            //modelInstance.mFlBulletGravityScale shouldBe ("TODO")
        }

        // to test the property `mFlBulletInheritShooterVelocityScale`
        should("test mFlBulletInheritShooterVelocityScale") {
            // uncomment below to test the property
            //modelInstance.mFlBulletInheritShooterVelocityScale shouldBe ("TODO")
        }

        // to test the property `mFlBulletLifetime`
        should("test mFlBulletLifetime") {
            // uncomment below to test the property
            //modelInstance.mFlBulletLifetime shouldBe ("TODO")
        }

        // to test the property `mFlBulletRadius`
        should("test mFlBulletRadius") {
            // uncomment below to test the property
            //modelInstance.mFlBulletRadius shouldBe ("TODO")
        }

        // to test the property `mFlBulletRadiusVsWorld`
        should("test mFlBulletRadiusVsWorld") {
            // uncomment below to test the property
            //modelInstance.mFlBulletRadiusVsWorld shouldBe ("TODO")
        }

        // to test the property `mFlBulletReflectAmount`
        should("test mFlBulletReflectAmount") {
            // uncomment below to test the property
            //modelInstance.mFlBulletReflectAmount shouldBe ("TODO")
        }

        // to test the property `mFlBulletReflectScale`
        should("test mFlBulletReflectScale") {
            // uncomment below to test the property
            //modelInstance.mFlBulletReflectScale shouldBe ("TODO")
        }

        // to test the property `mFlBulletWhizDistance`
        should("test mFlBulletWhizDistance") {
            // uncomment below to test the property
            //modelInstance.mFlBulletWhizDistance shouldBe ("TODO")
        }

        // to test the property `mFlBurstShotCooldown`
        should("test mFlBurstShotCooldown") {
            // uncomment below to test the property
            //modelInstance.mFlBurstShotCooldown shouldBe ("TODO")
        }

        // to test the property `mFlCritBonusAgainstNpcs`
        should("test mFlCritBonusAgainstNpcs") {
            // uncomment below to test the property
            //modelInstance.mFlCritBonusAgainstNpcs shouldBe ("TODO")
        }

        // to test the property `mFlCritBonusEnd`
        should("test mFlCritBonusEnd") {
            // uncomment below to test the property
            //modelInstance.mFlCritBonusEnd shouldBe ("TODO")
        }

        // to test the property `mFlCritBonusEndRange`
        should("test mFlCritBonusEndRange") {
            // uncomment below to test the property
            //modelInstance.mFlCritBonusEndRange shouldBe ("TODO")
        }

        // to test the property `mFlCritBonusStart`
        should("test mFlCritBonusStart") {
            // uncomment below to test the property
            //modelInstance.mFlCritBonusStart shouldBe ("TODO")
        }

        // to test the property `mFlCritBonusStartRange`
        should("test mFlCritBonusStartRange") {
            // uncomment below to test the property
            //modelInstance.mFlCritBonusStartRange shouldBe ("TODO")
        }

        // to test the property `mFlCycleTime`
        should("test mFlCycleTime") {
            // uncomment below to test the property
            //modelInstance.mFlCycleTime shouldBe ("TODO")
        }

        // to test the property `mFlIntraBurstCycleTime`
        should("test mFlIntraBurstCycleTime") {
            // uncomment below to test the property
            //modelInstance.mFlIntraBurstCycleTime shouldBe ("TODO")
        }

        // to test the property `mFlMaxSpinCycleTime`
        should("test mFlMaxSpinCycleTime") {
            // uncomment below to test the property
            //modelInstance.mFlMaxSpinCycleTime shouldBe ("TODO")
        }

        // to test the property `mFlDamageFalloffBias`
        should("test mFlDamageFalloffBias") {
            // uncomment below to test the property
            //modelInstance.mFlDamageFalloffBias shouldBe ("TODO")
        }

        // to test the property `mFlDamageFalloffEndRange`
        should("test mFlDamageFalloffEndRange") {
            // uncomment below to test the property
            //modelInstance.mFlDamageFalloffEndRange shouldBe ("TODO")
        }

        // to test the property `mFlDamageFalloffEndScale`
        should("test mFlDamageFalloffEndScale") {
            // uncomment below to test the property
            //modelInstance.mFlDamageFalloffEndScale shouldBe ("TODO")
        }

        // to test the property `mFlDamageFalloffStartRange`
        should("test mFlDamageFalloffStartRange") {
            // uncomment below to test the property
            //modelInstance.mFlDamageFalloffStartRange shouldBe ("TODO")
        }

        // to test the property `mFlDamageFalloffStartScale`
        should("test mFlDamageFalloffStartScale") {
            // uncomment below to test the property
            //modelInstance.mFlDamageFalloffStartScale shouldBe ("TODO")
        }

        // to test the property `mFlHorizontalPunch`
        should("test mFlHorizontalPunch") {
            // uncomment below to test the property
            //modelInstance.mFlHorizontalPunch shouldBe ("TODO")
        }

        // to test the property `mFlRange`
        should("test mFlRange") {
            // uncomment below to test the property
            //modelInstance.mFlRange shouldBe ("TODO")
        }

        // to test the property `mFlRecoilRecoveryDelayFactor`
        should("test mFlRecoilRecoveryDelayFactor") {
            // uncomment below to test the property
            //modelInstance.mFlRecoilRecoveryDelayFactor shouldBe ("TODO")
        }

        // to test the property `mFlRecoilRecoverySpeed`
        should("test mFlRecoilRecoverySpeed") {
            // uncomment below to test the property
            //modelInstance.mFlRecoilRecoverySpeed shouldBe ("TODO")
        }

        // to test the property `mFlRecoilShotIndexRecoveryTimeFactor`
        should("test mFlRecoilShotIndexRecoveryTimeFactor") {
            // uncomment below to test the property
            //modelInstance.mFlRecoilShotIndexRecoveryTimeFactor shouldBe ("TODO")
        }

        // to test the property `mFlRecoilSpeed`
        should("test mFlRecoilSpeed") {
            // uncomment below to test the property
            //modelInstance.mFlRecoilSpeed shouldBe ("TODO")
        }

        // to test the property `mFlReloadMoveSpeed`
        should("test mFlReloadMoveSpeed") {
            // uncomment below to test the property
            //modelInstance.mFlReloadMoveSpeed shouldBe ("TODO")
        }

        // to test the property `mFlScatterYawScale`
        should("test mFlScatterYawScale") {
            // uncomment below to test the property
            //modelInstance.mFlScatterYawScale shouldBe ("TODO")
        }

        // to test the property `mAimingShootSpreadPenalty`
        should("test mAimingShootSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.mAimingShootSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `mStandingShootSpreadPenalty`
        should("test mStandingShootSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.mStandingShootSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `mFlShootMoveSpeedPercent`
        should("test mFlShootMoveSpeedPercent") {
            // uncomment below to test the property
            //modelInstance.mFlShootMoveSpeedPercent shouldBe ("TODO")
        }

        // to test the property `mFlShootSpreadPenaltyDecay`
        should("test mFlShootSpreadPenaltyDecay") {
            // uncomment below to test the property
            //modelInstance.mFlShootSpreadPenaltyDecay shouldBe ("TODO")
        }

        // to test the property `mFlShootSpreadPenaltyDecayDelay`
        should("test mFlShootSpreadPenaltyDecayDelay") {
            // uncomment below to test the property
            //modelInstance.mFlShootSpreadPenaltyDecayDelay shouldBe ("TODO")
        }

        // to test the property `mFlShootSpreadPenaltyPerShot`
        should("test mFlShootSpreadPenaltyPerShot") {
            // uncomment below to test the property
            //modelInstance.mFlShootSpreadPenaltyPerShot shouldBe ("TODO")
        }

        // to test the property `mFlShootingUpSpreadPenalty`
        should("test mFlShootingUpSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.mFlShootingUpSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `mFlVerticalPunch`
        should("test mFlVerticalPunch") {
            // uncomment below to test the property
            //modelInstance.mFlVerticalPunch shouldBe ("TODO")
        }

        // to test the property `mFlZoomFov`
        should("test mFlZoomFov") {
            // uncomment below to test the property
            //modelInstance.mFlZoomFov shouldBe ("TODO")
        }

        // to test the property `mFlZoomMoveSpeedPercent`
        should("test mFlZoomMoveSpeedPercent") {
            // uncomment below to test the property
            //modelInstance.mFlZoomMoveSpeedPercent shouldBe ("TODO")
        }

        // to test the property `mIBullets`
        should("test mIBullets") {
            // uncomment below to test the property
            //modelInstance.mIBullets shouldBe ("TODO")
        }

        // to test the property `mIBurstShotCount`
        should("test mIBurstShotCount") {
            // uncomment below to test the property
            //modelInstance.mIBurstShotCount shouldBe ("TODO")
        }

        // to test the property `mIClipSize`
        should("test mIClipSize") {
            // uncomment below to test the property
            //modelInstance.mIClipSize shouldBe ("TODO")
        }

        // to test the property `mFlSpread`
        should("test mFlSpread") {
            // uncomment below to test the property
            //modelInstance.mFlSpread shouldBe ("TODO")
        }

        // to test the property `mFlStandingSpread`
        should("test mFlStandingSpread") {
            // uncomment below to test the property
            //modelInstance.mFlStandingSpread shouldBe ("TODO")
        }

        // to test the property `mFlLowAmmoIndicatorThreshold`
        should("test mFlLowAmmoIndicatorThreshold") {
            // uncomment below to test the property
            //modelInstance.mFlLowAmmoIndicatorThreshold shouldBe ("TODO")
        }

        // to test the property `mFlRecoilSeed`
        should("test mFlRecoilSeed") {
            // uncomment below to test the property
            //modelInstance.mFlRecoilSeed shouldBe ("TODO")
        }

        // to test the property `mFlReloadDuration`
        should("test mFlReloadDuration") {
            // uncomment below to test the property
            //modelInstance.mFlReloadDuration shouldBe ("TODO")
        }

        // to test the property `mBulletSpeedCurve`
        should("test mBulletSpeedCurve") {
            // uncomment below to test the property
            //modelInstance.mBulletSpeedCurve shouldBe ("TODO")
        }

        // to test the property `mHorizontalRecoil`
        should("test mHorizontalRecoil") {
            // uncomment below to test the property
            //modelInstance.mHorizontalRecoil shouldBe ("TODO")
        }

        // to test the property `mVerticalRecoil`
        should("test mVerticalRecoil") {
            // uncomment below to test the property
            //modelInstance.mVerticalRecoil shouldBe ("TODO")
        }

    }
}
