/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.RawWeaponInfoV2Output
import assets-deadlock-api-client.models.AimingShotSpreadPenalty
import assets-deadlock-api-client.models.RawItemWeaponInfoBulletSpeedCurveV2Output
import assets-deadlock-api-client.models.RawWeaponInfoHorizontalRecoilV2Output
import assets-deadlock-api-client.models.RawWeaponInfoVerticalRecoilV2Output
import assets-deadlock-api-client.models.StandingShotSpreadPenalty

class RawWeaponInfoV2OutputTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RawWeaponInfoV2Output
        //val modelInstance = RawWeaponInfoV2Output()

        // to test the property `canZoom`
        should("test canZoom") {
            // uncomment below to test the property
            //modelInstance.canZoom shouldBe ("TODO")
        }

        // to test the property `bulletDamage`
        should("test bulletDamage") {
            // uncomment below to test the property
            //modelInstance.bulletDamage shouldBe ("TODO")
        }

        // to test the property `bulletGravityScale`
        should("test bulletGravityScale") {
            // uncomment below to test the property
            //modelInstance.bulletGravityScale shouldBe ("TODO")
        }

        // to test the property `bulletInheritShooterVelocityScale`
        should("test bulletInheritShooterVelocityScale") {
            // uncomment below to test the property
            //modelInstance.bulletInheritShooterVelocityScale shouldBe ("TODO")
        }

        // to test the property `bulletLifetime`
        should("test bulletLifetime") {
            // uncomment below to test the property
            //modelInstance.bulletLifetime shouldBe ("TODO")
        }

        // to test the property `bulletRadius`
        should("test bulletRadius") {
            // uncomment below to test the property
            //modelInstance.bulletRadius shouldBe ("TODO")
        }

        // to test the property `bulletRadiusVsWorld`
        should("test bulletRadiusVsWorld") {
            // uncomment below to test the property
            //modelInstance.bulletRadiusVsWorld shouldBe ("TODO")
        }

        // to test the property `bulletReflectAmount`
        should("test bulletReflectAmount") {
            // uncomment below to test the property
            //modelInstance.bulletReflectAmount shouldBe ("TODO")
        }

        // to test the property `bulletReflectScale`
        should("test bulletReflectScale") {
            // uncomment below to test the property
            //modelInstance.bulletReflectScale shouldBe ("TODO")
        }

        // to test the property `bulletWhizDistance`
        should("test bulletWhizDistance") {
            // uncomment below to test the property
            //modelInstance.bulletWhizDistance shouldBe ("TODO")
        }

        // to test the property `burstShotCooldown`
        should("test burstShotCooldown") {
            // uncomment below to test the property
            //modelInstance.burstShotCooldown shouldBe ("TODO")
        }

        // to test the property `critBonusAgainstNpcs`
        should("test critBonusAgainstNpcs") {
            // uncomment below to test the property
            //modelInstance.critBonusAgainstNpcs shouldBe ("TODO")
        }

        // to test the property `critBonusEnd`
        should("test critBonusEnd") {
            // uncomment below to test the property
            //modelInstance.critBonusEnd shouldBe ("TODO")
        }

        // to test the property `critBonusEndRange`
        should("test critBonusEndRange") {
            // uncomment below to test the property
            //modelInstance.critBonusEndRange shouldBe ("TODO")
        }

        // to test the property `critBonusStart`
        should("test critBonusStart") {
            // uncomment below to test the property
            //modelInstance.critBonusStart shouldBe ("TODO")
        }

        // to test the property `critBonusStartRange`
        should("test critBonusStartRange") {
            // uncomment below to test the property
            //modelInstance.critBonusStartRange shouldBe ("TODO")
        }

        // to test the property `cycleTime`
        should("test cycleTime") {
            // uncomment below to test the property
            //modelInstance.cycleTime shouldBe ("TODO")
        }

        // to test the property `intraBurstCycleTime`
        should("test intraBurstCycleTime") {
            // uncomment below to test the property
            //modelInstance.intraBurstCycleTime shouldBe ("TODO")
        }

        // to test the property `maxSpinCycleTime`
        should("test maxSpinCycleTime") {
            // uncomment below to test the property
            //modelInstance.maxSpinCycleTime shouldBe ("TODO")
        }

        // to test the property `damageFalloffBias`
        should("test damageFalloffBias") {
            // uncomment below to test the property
            //modelInstance.damageFalloffBias shouldBe ("TODO")
        }

        // to test the property `damageFalloffEndRange`
        should("test damageFalloffEndRange") {
            // uncomment below to test the property
            //modelInstance.damageFalloffEndRange shouldBe ("TODO")
        }

        // to test the property `damageFalloffEndScale`
        should("test damageFalloffEndScale") {
            // uncomment below to test the property
            //modelInstance.damageFalloffEndScale shouldBe ("TODO")
        }

        // to test the property `damageFalloffStartRange`
        should("test damageFalloffStartRange") {
            // uncomment below to test the property
            //modelInstance.damageFalloffStartRange shouldBe ("TODO")
        }

        // to test the property `damageFalloffStartScale`
        should("test damageFalloffStartScale") {
            // uncomment below to test the property
            //modelInstance.damageFalloffStartScale shouldBe ("TODO")
        }

        // to test the property `horizontalPunch`
        should("test horizontalPunch") {
            // uncomment below to test the property
            //modelInstance.horizontalPunch shouldBe ("TODO")
        }

        // to test the property `range`
        should("test range") {
            // uncomment below to test the property
            //modelInstance.range shouldBe ("TODO")
        }

        // to test the property `recoilRecoveryDelayFactor`
        should("test recoilRecoveryDelayFactor") {
            // uncomment below to test the property
            //modelInstance.recoilRecoveryDelayFactor shouldBe ("TODO")
        }

        // to test the property `recoilRecoverySpeed`
        should("test recoilRecoverySpeed") {
            // uncomment below to test the property
            //modelInstance.recoilRecoverySpeed shouldBe ("TODO")
        }

        // to test the property `recoilShotIndexRecoveryTimeFactor`
        should("test recoilShotIndexRecoveryTimeFactor") {
            // uncomment below to test the property
            //modelInstance.recoilShotIndexRecoveryTimeFactor shouldBe ("TODO")
        }

        // to test the property `recoilSpeed`
        should("test recoilSpeed") {
            // uncomment below to test the property
            //modelInstance.recoilSpeed shouldBe ("TODO")
        }

        // to test the property `reloadMoveSpeed`
        should("test reloadMoveSpeed") {
            // uncomment below to test the property
            //modelInstance.reloadMoveSpeed shouldBe ("TODO")
        }

        // to test the property `scatterYawScale`
        should("test scatterYawScale") {
            // uncomment below to test the property
            //modelInstance.scatterYawScale shouldBe ("TODO")
        }

        // to test the property `aimingShotSpreadPenalty`
        should("test aimingShotSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.aimingShotSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `standingShotSpreadPenalty`
        should("test standingShotSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.standingShotSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `shootMoveSpeedPercent`
        should("test shootMoveSpeedPercent") {
            // uncomment below to test the property
            //modelInstance.shootMoveSpeedPercent shouldBe ("TODO")
        }

        // to test the property `shootSpreadPenaltyDecay`
        should("test shootSpreadPenaltyDecay") {
            // uncomment below to test the property
            //modelInstance.shootSpreadPenaltyDecay shouldBe ("TODO")
        }

        // to test the property `shootSpreadPenaltyDecayDelay`
        should("test shootSpreadPenaltyDecayDelay") {
            // uncomment below to test the property
            //modelInstance.shootSpreadPenaltyDecayDelay shouldBe ("TODO")
        }

        // to test the property `shootSpreadPenaltyPerShot`
        should("test shootSpreadPenaltyPerShot") {
            // uncomment below to test the property
            //modelInstance.shootSpreadPenaltyPerShot shouldBe ("TODO")
        }

        // to test the property `shootingUpSpreadPenalty`
        should("test shootingUpSpreadPenalty") {
            // uncomment below to test the property
            //modelInstance.shootingUpSpreadPenalty shouldBe ("TODO")
        }

        // to test the property `verticalPunch`
        should("test verticalPunch") {
            // uncomment below to test the property
            //modelInstance.verticalPunch shouldBe ("TODO")
        }

        // to test the property `zoomFov`
        should("test zoomFov") {
            // uncomment below to test the property
            //modelInstance.zoomFov shouldBe ("TODO")
        }

        // to test the property `zoomMoveSpeedPercent`
        should("test zoomMoveSpeedPercent") {
            // uncomment below to test the property
            //modelInstance.zoomMoveSpeedPercent shouldBe ("TODO")
        }

        // to test the property `bullets`
        should("test bullets") {
            // uncomment below to test the property
            //modelInstance.bullets shouldBe ("TODO")
        }

        // to test the property `burstShotCount`
        should("test burstShotCount") {
            // uncomment below to test the property
            //modelInstance.burstShotCount shouldBe ("TODO")
        }

        // to test the property `clipSize`
        should("test clipSize") {
            // uncomment below to test the property
            //modelInstance.clipSize shouldBe ("TODO")
        }

        // to test the property `spread`
        should("test spread") {
            // uncomment below to test the property
            //modelInstance.spread shouldBe ("TODO")
        }

        // to test the property `standingSpread`
        should("test standingSpread") {
            // uncomment below to test the property
            //modelInstance.standingSpread shouldBe ("TODO")
        }

        // to test the property `lowAmmoIndicatorThreshold`
        should("test lowAmmoIndicatorThreshold") {
            // uncomment below to test the property
            //modelInstance.lowAmmoIndicatorThreshold shouldBe ("TODO")
        }

        // to test the property `recoilSeed`
        should("test recoilSeed") {
            // uncomment below to test the property
            //modelInstance.recoilSeed shouldBe ("TODO")
        }

        // to test the property `reloadDuration`
        should("test reloadDuration") {
            // uncomment below to test the property
            //modelInstance.reloadDuration shouldBe ("TODO")
        }

        // to test the property `bulletSpeedCurve`
        should("test bulletSpeedCurve") {
            // uncomment below to test the property
            //modelInstance.bulletSpeedCurve shouldBe ("TODO")
        }

        // to test the property `horizontalRecoil`
        should("test horizontalRecoil") {
            // uncomment below to test the property
            //modelInstance.horizontalRecoil shouldBe ("TODO")
        }

        // to test the property `verticalRecoil`
        should("test verticalRecoil") {
            // uncomment below to test the property
            //modelInstance.verticalRecoil shouldBe ("TODO")
        }

    }
}
