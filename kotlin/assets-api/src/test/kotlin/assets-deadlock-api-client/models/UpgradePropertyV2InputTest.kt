/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import assets-deadlock-api-client.models.UpgradePropertyV2Input
import assets-deadlock-api-client.models.MEstatsusageflags
import assets-deadlock-api-client.models.MStrvalue
import assets-deadlock-api-client.models.RawAbilitySectionTypeV2
import assets-deadlock-api-client.models.RawItemPropertyScaleFunctionSubclassV2Input

class UpgradePropertyV2InputTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UpgradePropertyV2Input
        //val modelInstance = UpgradePropertyV2Input()

        // to test the property `mStrValue`
        should("test mStrValue") {
            // uncomment below to test the property
            //modelInstance.mStrValue shouldBe ("TODO")
        }

        // to test the property `mBCanSetTokenOverride`
        should("test mBCanSetTokenOverride") {
            // uncomment below to test the property
            //modelInstance.mBCanSetTokenOverride shouldBe ("TODO")
        }

        // to test the property `mEProvidedPropertyType`
        should("test mEProvidedPropertyType") {
            // uncomment below to test the property
            //modelInstance.mEProvidedPropertyType shouldBe ("TODO")
        }

        // to test the property `mStrCSSClass`
        should("test mStrCSSClass") {
            // uncomment below to test the property
            //modelInstance.mStrCSSClass shouldBe ("TODO")
        }

        // to test the property `mEStatsUsageFlags`
        should("test mEStatsUsageFlags") {
            // uncomment below to test the property
            //modelInstance.mEStatsUsageFlags shouldBe ("TODO")
        }

        // to test the property `mBIsNegativeAttribute`
        should("test mBIsNegativeAttribute") {
            // uncomment below to test the property
            //modelInstance.mBIsNegativeAttribute shouldBe ("TODO")
        }

        // to test the property `mStrDisableValue`
        should("test mStrDisableValue") {
            // uncomment below to test the property
            //modelInstance.mStrDisableValue shouldBe ("TODO")
        }

        // to test the property `mStrLocTokenOverride`
        should("test mStrLocTokenOverride") {
            // uncomment below to test the property
            //modelInstance.mStrLocTokenOverride shouldBe ("TODO")
        }

        // to test the property `mEDisplayUnits`
        should("test mEDisplayUnits") {
            // uncomment below to test the property
            //modelInstance.mEDisplayUnits shouldBe ("TODO")
        }

        // to test the property `scaleFunction`
        should("test scaleFunction") {
            // uncomment below to test the property
            //modelInstance.scaleFunction shouldBe ("TODO")
        }

        // to test the property `prefix`
        should("test prefix") {
            // uncomment below to test the property
            //modelInstance.prefix shouldBe ("TODO")
        }

        // to test the property `label`
        should("test label") {
            // uncomment below to test the property
            //modelInstance.label shouldBe ("TODO")
        }

        // to test the property `postfix`
        should("test postfix") {
            // uncomment below to test the property
            //modelInstance.postfix shouldBe ("TODO")
        }

        // to test the property `postvalueLabel`
        should("test postvalueLabel") {
            // uncomment below to test the property
            //modelInstance.postvalueLabel shouldBe ("TODO")
        }

        // to test the property `conditional`
        should("test conditional") {
            // uncomment below to test the property
            //modelInstance.conditional shouldBe ("TODO")
        }

        // to test the property `icon`
        should("test icon") {
            // uncomment below to test the property
            //modelInstance.icon shouldBe ("TODO")
        }

        // to test the property `tooltipSection`
        should("test tooltipSection") {
            // uncomment below to test the property
            //modelInstance.tooltipSection shouldBe ("TODO")
        }

        // to test the property `tooltipIsElevated`
        should("test tooltipIsElevated") {
            // uncomment below to test the property
            //modelInstance.tooltipIsElevated shouldBe ("TODO")
        }

        // to test the property `tooltipIsImportant`
        should("test tooltipIsImportant") {
            // uncomment below to test the property
            //modelInstance.tooltipIsImportant shouldBe ("TODO")
        }

    }
}
