/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import assets-deadlock-api-client.models.HeroColorsV2
import assets-deadlock-api-client.models.HeroDescriptionV2
import assets-deadlock-api-client.models.HeroImagesV2
import assets-deadlock-api-client.models.HeroLevelInfoV2
import assets-deadlock-api-client.models.HeroPhysicsV2
import assets-deadlock-api-client.models.HeroShopStatDisplayV2
import assets-deadlock-api-client.models.HeroStartingStatsV2
import assets-deadlock-api-client.models.HeroTypeV2
import assets-deadlock-api-client.models.RawHeroItemSlotInfoValueV2
import assets-deadlock-api-client.models.RawHeroMapModCostBonusesV2
import assets-deadlock-api-client.models.RawHeroPurchaseBonusV2
import assets-deadlock-api-client.models.RawHeroScalingStatV2
import assets-deadlock-api-client.models.RawHeroStatsDisplayV2
import assets-deadlock-api-client.models.RawHeroStatsUIV2

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param className 
 * @param name 
 * @param description 
 * @param playerSelectable 
 * @param disabled 
 * @param inDevelopment 
 * @param needsTesting 
 * @param assignedPlayersOnly 
 * @param limitedTesting 
 * @param complexity 
 * @param skin 
 * @param images 
 * @param items 
 * @param startingStats 
 * @param itemSlotInfo 
 * @param physics 
 * @param colors 
 * @param shopStatDisplay 
 * @param statsDisplay 
 * @param heroStatsUi 
 * @param levelInfo 
 * @param scalingStats 
 * @param purchaseBonuses 
 * @param standardLevelUpUpgrades 
 * @param recommendedUpgrades 
 * @param recommendedAbilityOrder 
 * @param tags 
 * @param gunTag 
 * @param hideoutRichPresence 
 * @param heroType 
 * @param prereleaseOnly 
 * @param costBonuses 
 */


data class HeroV2 (

    @Json(name = "id")
    val id: kotlin.Int,

    @Json(name = "class_name")
    val className: kotlin.String,

    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "description")
    val description: HeroDescriptionV2,

    @Json(name = "player_selectable")
    val playerSelectable: kotlin.Boolean,

    @Json(name = "disabled")
    val disabled: kotlin.Boolean,

    @Json(name = "in_development")
    val inDevelopment: kotlin.Boolean,

    @Json(name = "needs_testing")
    val needsTesting: kotlin.Boolean,

    @Json(name = "assigned_players_only")
    val assignedPlayersOnly: kotlin.Boolean,

    @Json(name = "limited_testing")
    val limitedTesting: kotlin.Boolean,

    @Json(name = "complexity")
    val complexity: kotlin.Int,

    @Json(name = "skin")
    val skin: kotlin.Int,

    @Json(name = "images")
    val images: HeroImagesV2,

    @Json(name = "items")
    val items: kotlin.collections.Map<kotlin.String, kotlin.String>,

    @Json(name = "starting_stats")
    val startingStats: HeroStartingStatsV2,

    @Json(name = "item_slot_info")
    val itemSlotInfo: kotlin.collections.Map<kotlin.String, RawHeroItemSlotInfoValueV2>,

    @Json(name = "physics")
    val physics: HeroPhysicsV2,

    @Json(name = "colors")
    val colors: HeroColorsV2,

    @Json(name = "shop_stat_display")
    val shopStatDisplay: HeroShopStatDisplayV2,

    @Json(name = "stats_display")
    val statsDisplay: RawHeroStatsDisplayV2,

    @Json(name = "hero_stats_ui")
    val heroStatsUi: RawHeroStatsUIV2,

    @Json(name = "level_info")
    val levelInfo: kotlin.collections.Map<kotlin.String, HeroLevelInfoV2>,

    @Json(name = "scaling_stats")
    val scalingStats: kotlin.collections.Map<kotlin.String, RawHeroScalingStatV2>,

    @Json(name = "purchase_bonuses")
    val purchaseBonuses: kotlin.collections.Map<kotlin.String, kotlin.collections.List<RawHeroPurchaseBonusV2>>,

    @Json(name = "standard_level_up_upgrades")
    val standardLevelUpUpgrades: kotlin.collections.Map<kotlin.String, java.math.BigDecimal>,

    @Json(name = "recommended_upgrades")
    val recommendedUpgrades: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "recommended_ability_order")
    val recommendedAbilityOrder: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "gun_tag")
    val gunTag: kotlin.String? = null,

    @Json(name = "hideout_rich_presence")
    val hideoutRichPresence: kotlin.String? = null,

    @Json(name = "hero_type")
    val heroType: HeroTypeV2? = null,

    @Json(name = "prerelease_only")
    val prereleaseOnly: kotlin.Boolean? = null,

    @Json(name = "cost_bonuses")
    val costBonuses: kotlin.collections.Map<kotlin.String, kotlin.collections.List<RawHeroMapModCostBonusesV2>>? = null

) {


}

