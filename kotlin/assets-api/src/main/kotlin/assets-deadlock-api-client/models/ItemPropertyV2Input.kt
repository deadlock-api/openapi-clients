/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package assets-deadlock-api-client.models

import assets-deadlock-api-client.models.MEstatsusageflags
import assets-deadlock-api-client.models.MStrvalue
import assets-deadlock-api-client.models.RawItemPropertyScaleFunctionSubclassV2Input

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param mStrValue 
 * @param mBCanSetTokenOverride 
 * @param mEProvidedPropertyType 
 * @param mStrCSSClass 
 * @param mEStatsUsageFlags 
 * @param mBIsNegativeAttribute 
 * @param mStrDisableValue 
 * @param mStrLocTokenOverride 
 * @param mEDisplayUnits 
 * @param scaleFunction 
 * @param prefix 
 * @param label 
 * @param postfix 
 * @param postvalueLabel 
 * @param conditional 
 * @param icon 
 */


data class ItemPropertyV2Input (

    @Json(name = "m_strValue")
    val mStrValue: MStrvalue? = null,

    @Json(name = "m_bCanSetTokenOverride")
    val mBCanSetTokenOverride: kotlin.Boolean? = null,

    @Json(name = "m_eProvidedPropertyType")
    val mEProvidedPropertyType: kotlin.String? = null,

    @Json(name = "m_strCSSClass")
    val mStrCSSClass: kotlin.String? = null,

    @Json(name = "m_eStatsUsageFlags")
    val mEStatsUsageFlags: MEstatsusageflags? = null,

    @Json(name = "m_bIsNegativeAttribute")
    val mBIsNegativeAttribute: kotlin.Boolean? = null,

    @Json(name = "m_strDisableValue")
    val mStrDisableValue: kotlin.String? = null,

    @Json(name = "m_strLocTokenOverride")
    val mStrLocTokenOverride: kotlin.String? = null,

    @Json(name = "m_eDisplayUnits")
    val mEDisplayUnits: kotlin.String? = null,

    @Json(name = "scale_function")
    val scaleFunction: RawItemPropertyScaleFunctionSubclassV2Input? = null,

    @Json(name = "prefix")
    val prefix: kotlin.String? = null,

    @Json(name = "label")
    val label: kotlin.String? = null,

    @Json(name = "postfix")
    val postfix: kotlin.String? = null,

    @Json(name = "postvalue_label")
    val postvalueLabel: kotlin.String? = null,

    @Json(name = "conditional")
    val conditional: kotlin.String? = null,

    @Json(name = "icon")
    val icon: kotlin.String? = null

) {


}

