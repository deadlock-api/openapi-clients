/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param heroId See more: <https://assets.deadlock-api.com/v2/heroes>
 * @param losses 
 * @param matches 
 * @param matchesPerBucket 
 * @param players 
 * @param totalAssists 
 * @param totalBossDamage 
 * @param totalCreepDamage 
 * @param totalDeaths 
 * @param totalDenies 
 * @param totalKills 
 * @param totalLastHits 
 * @param totalMaxHealth 
 * @param totalNetWorth 
 * @param totalNeutralDamage 
 * @param totalPlayerDamage 
 * @param totalPlayerDamageTaken 
 * @param totalShotsHit 
 * @param totalShotsMissed 
 * @param wins 
 * @param bucket 
 */


data class AnalyticsHeroStats (

    /* See more: <https://assets.deadlock-api.com/v2/heroes> */
    @Json(name = "hero_id")
    val heroId: kotlin.Int,

    @Json(name = "losses")
    val losses: kotlin.Long,

    @Json(name = "matches")
    val matches: kotlin.Long,

    @Json(name = "matches_per_bucket")
    val matchesPerBucket: kotlin.Long,

    @Json(name = "players")
    val players: kotlin.Long,

    @Json(name = "total_assists")
    val totalAssists: kotlin.Long,

    @Json(name = "total_boss_damage")
    val totalBossDamage: kotlin.Long,

    @Json(name = "total_creep_damage")
    val totalCreepDamage: kotlin.Long,

    @Json(name = "total_deaths")
    val totalDeaths: kotlin.Long,

    @Json(name = "total_denies")
    val totalDenies: kotlin.Long,

    @Json(name = "total_kills")
    val totalKills: kotlin.Long,

    @Json(name = "total_last_hits")
    val totalLastHits: kotlin.Long,

    @Json(name = "total_max_health")
    val totalMaxHealth: kotlin.Long,

    @Json(name = "total_net_worth")
    val totalNetWorth: kotlin.Long,

    @Json(name = "total_neutral_damage")
    val totalNeutralDamage: kotlin.Long,

    @Json(name = "total_player_damage")
    val totalPlayerDamage: kotlin.Long,

    @Json(name = "total_player_damage_taken")
    val totalPlayerDamageTaken: kotlin.Long,

    @Json(name = "total_shots_hit")
    val totalShotsHit: kotlin.Long,

    @Json(name = "total_shots_missed")
    val totalShotsMissed: kotlin.Long,

    @Json(name = "wins")
    val wins: kotlin.Long,

    @Json(name = "bucket")
    val bucket: kotlin.Int? = null

) {


}

