/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.apis.CommandsApi
import deadlock-api-client.models.VariableDescription

class CommandsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CommandsApi
        //val apiInstance = CommandsApi()

        // to test availableVariables
        should("test availableVariables") {
            // uncomment below to test availableVariables
            //val result : kotlin.collections.List<VariableDescription> = apiInstance.availableVariables()
            //result shouldBe ("TODO")
        }

        // to test commandResolve
        should("test commandResolve") {
            // uncomment below to test commandResolve
            //val accountId : kotlin.Int = 56 // kotlin.Int | The players `SteamID3`
            //val region : kotlin.String = region_example // kotlin.String | The players region
            //val template : kotlin.String = template_example // kotlin.String | The command template to resolve
            //val heroName : kotlin.String = heroName_example // kotlin.String | Hero name to check for hero specific stats
            //val result : kotlin.String = apiInstance.commandResolve(accountId, region, template, heroName)
            //result shouldBe ("TODO")
        }

        // to test variablesResolve
        should("test variablesResolve") {
            // uncomment below to test variablesResolve
            //val accountId : kotlin.Int = 56 // kotlin.Int | 
            //val region : kotlin.String = region_example // kotlin.String | 
            //val variables : kotlin.String = variables_example // kotlin.String | Variables to resolve, separated by commas.
            //val heroName : kotlin.String = heroName_example // kotlin.String | Hero name to check for hero specific stats
            //val result : kotlin.collections.Map<kotlin.String, kotlin.String> = apiInstance.variablesResolve(accountId, region, variables, heroName)
            //result shouldBe ("TODO")
        }

        // to test widgetVersions
        should("test widgetVersions") {
            // uncomment below to test widgetVersions
            //val result : kotlin.collections.Map<kotlin.String, kotlin.Int> = apiInstance.widgetVersions()
            //result shouldBe ("TODO")
        }

    }
}
