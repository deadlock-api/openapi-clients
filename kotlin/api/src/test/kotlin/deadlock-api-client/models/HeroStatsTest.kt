/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.HeroStats

class HeroStatsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of HeroStats
        //val modelInstance = HeroStats()

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `accuracy`
        should("test accuracy") {
            // uncomment below to test the property
            //modelInstance.accuracy shouldBe ("TODO")
        }

        // to test the property `assists`
        should("test assists") {
            // uncomment below to test the property
            //modelInstance.assists shouldBe ("TODO")
        }

        // to test the property `assistsPerMin`
        should("test assistsPerMin") {
            // uncomment below to test the property
            //modelInstance.assistsPerMin shouldBe ("TODO")
        }

        // to test the property `creepsPerMin`
        should("test creepsPerMin") {
            // uncomment below to test the property
            //modelInstance.creepsPerMin shouldBe ("TODO")
        }

        // to test the property `critShotRate`
        should("test critShotRate") {
            // uncomment below to test the property
            //modelInstance.critShotRate shouldBe ("TODO")
        }

        // to test the property `damageMitigatedPerMin`
        should("test damageMitigatedPerMin") {
            // uncomment below to test the property
            //modelInstance.damageMitigatedPerMin shouldBe ("TODO")
        }

        // to test the property `damagePerMin`
        should("test damagePerMin") {
            // uncomment below to test the property
            //modelInstance.damagePerMin shouldBe ("TODO")
        }

        // to test the property `damagePerSoul`
        should("test damagePerSoul") {
            // uncomment below to test the property
            //modelInstance.damagePerSoul shouldBe ("TODO")
        }

        // to test the property `damageTakenPerMin`
        should("test damageTakenPerMin") {
            // uncomment below to test the property
            //modelInstance.damageTakenPerMin shouldBe ("TODO")
        }

        // to test the property `damageTakenPerSoul`
        should("test damageTakenPerSoul") {
            // uncomment below to test the property
            //modelInstance.damageTakenPerSoul shouldBe ("TODO")
        }

        // to test the property `deaths`
        should("test deaths") {
            // uncomment below to test the property
            //modelInstance.deaths shouldBe ("TODO")
        }

        // to test the property `deathsPerMin`
        should("test deathsPerMin") {
            // uncomment below to test the property
            //modelInstance.deathsPerMin shouldBe ("TODO")
        }

        // to test the property `deniesPerMatch`
        should("test deniesPerMatch") {
            // uncomment below to test the property
            //modelInstance.deniesPerMatch shouldBe ("TODO")
        }

        // to test the property `deniesPerMin`
        should("test deniesPerMin") {
            // uncomment below to test the property
            //modelInstance.deniesPerMin shouldBe ("TODO")
        }

        // to test the property `endingLevel`
        should("test endingLevel") {
            // uncomment below to test the property
            //modelInstance.endingLevel shouldBe ("TODO")
        }

        // to test the property `heroId` - See more: <https://assets.deadlock-api.com/v2/heroes>
        should("test heroId") {
            // uncomment below to test the property
            //modelInstance.heroId shouldBe ("TODO")
        }

        // to test the property `kills`
        should("test kills") {
            // uncomment below to test the property
            //modelInstance.kills shouldBe ("TODO")
        }

        // to test the property `killsPerMin`
        should("test killsPerMin") {
            // uncomment below to test the property
            //modelInstance.killsPerMin shouldBe ("TODO")
        }

        // to test the property `lastHitsPerMin`
        should("test lastHitsPerMin") {
            // uncomment below to test the property
            //modelInstance.lastHitsPerMin shouldBe ("TODO")
        }

        // to test the property `lastPlayed`
        should("test lastPlayed") {
            // uncomment below to test the property
            //modelInstance.lastPlayed shouldBe ("TODO")
        }

        // to test the property `matches`
        should("test matches") {
            // uncomment below to test the property
            //modelInstance.matches shouldBe ("TODO")
        }

        // to test the property `matchesPlayed`
        should("test matchesPlayed") {
            // uncomment below to test the property
            //modelInstance.matchesPlayed shouldBe ("TODO")
        }

        // to test the property `networthPerMin`
        should("test networthPerMin") {
            // uncomment below to test the property
            //modelInstance.networthPerMin shouldBe ("TODO")
        }

        // to test the property `objDamagePerMin`
        should("test objDamagePerMin") {
            // uncomment below to test the property
            //modelInstance.objDamagePerMin shouldBe ("TODO")
        }

        // to test the property `objDamagePerSoul`
        should("test objDamagePerSoul") {
            // uncomment below to test the property
            //modelInstance.objDamagePerSoul shouldBe ("TODO")
        }

        // to test the property `timePlayed`
        should("test timePlayed") {
            // uncomment below to test the property
            //modelInstance.timePlayed shouldBe ("TODO")
        }

        // to test the property `wins`
        should("test wins") {
            // uncomment below to test the property
            //modelInstance.wins shouldBe ("TODO")
        }

    }
}
