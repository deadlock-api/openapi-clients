/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.ActiveMatch
import deadlock-api-client.models.ActiveMatchGameMode
import deadlock-api-client.models.ActiveMatchMode
import deadlock-api-client.models.ActiveMatchPlayer
import deadlock-api-client.models.ActiveMatchRegionMode
import deadlock-api-client.models.ActiveMatchTeam

class ActiveMatchTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ActiveMatch
        //val modelInstance = ActiveMatch()

        // to test the property `players`
        should("test players") {
            // uncomment below to test the property
            //modelInstance.players shouldBe ("TODO")
        }

        // to test the property `compatVersion`
        should("test compatVersion") {
            // uncomment below to test the property
            //modelInstance.compatVersion shouldBe ("TODO")
        }

        // to test the property `durationS`
        should("test durationS") {
            // uncomment below to test the property
            //modelInstance.durationS shouldBe ("TODO")
        }

        // to test the property `gameMode`
        should("test gameMode") {
            // uncomment below to test the property
            //modelInstance.gameMode shouldBe ("TODO")
        }

        // to test the property `gameModeParsed`
        should("test gameModeParsed") {
            // uncomment below to test the property
            //modelInstance.gameModeParsed shouldBe ("TODO")
        }

        // to test the property `gameModeVersion`
        should("test gameModeVersion") {
            // uncomment below to test the property
            //modelInstance.gameModeVersion shouldBe ("TODO")
        }

        // to test the property `lobbyId`
        should("test lobbyId") {
            // uncomment below to test the property
            //modelInstance.lobbyId shouldBe ("TODO")
        }

        // to test the property `matchId`
        should("test matchId") {
            // uncomment below to test the property
            //modelInstance.matchId shouldBe ("TODO")
        }

        // to test the property `matchMode`
        should("test matchMode") {
            // uncomment below to test the property
            //modelInstance.matchMode shouldBe ("TODO")
        }

        // to test the property `matchModeParsed`
        should("test matchModeParsed") {
            // uncomment below to test the property
            //modelInstance.matchModeParsed shouldBe ("TODO")
        }

        // to test the property `matchScore`
        should("test matchScore") {
            // uncomment below to test the property
            //modelInstance.matchScore shouldBe ("TODO")
        }

        // to test the property `netWorthTeam0`
        should("test netWorthTeam0") {
            // uncomment below to test the property
            //modelInstance.netWorthTeam0 shouldBe ("TODO")
        }

        // to test the property `netWorthTeam1`
        should("test netWorthTeam1") {
            // uncomment below to test the property
            //modelInstance.netWorthTeam1 shouldBe ("TODO")
        }

        // to test the property `objectivesMaskTeam0`
        should("test objectivesMaskTeam0") {
            // uncomment below to test the property
            //modelInstance.objectivesMaskTeam0 shouldBe ("TODO")
        }

        // to test the property `objectivesMaskTeam1`
        should("test objectivesMaskTeam1") {
            // uncomment below to test the property
            //modelInstance.objectivesMaskTeam1 shouldBe ("TODO")
        }

        // to test the property `openSpectatorSlots`
        should("test openSpectatorSlots") {
            // uncomment below to test the property
            //modelInstance.openSpectatorSlots shouldBe ("TODO")
        }

        // to test the property `regionMode`
        should("test regionMode") {
            // uncomment below to test the property
            //modelInstance.regionMode shouldBe ("TODO")
        }

        // to test the property `regionModeParsed`
        should("test regionModeParsed") {
            // uncomment below to test the property
            //modelInstance.regionModeParsed shouldBe ("TODO")
        }

        // to test the property `spectators`
        should("test spectators") {
            // uncomment below to test the property
            //modelInstance.spectators shouldBe ("TODO")
        }

        // to test the property `startTime`
        should("test startTime") {
            // uncomment below to test the property
            //modelInstance.startTime shouldBe ("TODO")
        }

        // to test the property `winningTeam`
        should("test winningTeam") {
            // uncomment below to test the property
            //modelInstance.winningTeam shouldBe ("TODO")
        }

        // to test the property `winningTeamParsed`
        should("test winningTeamParsed") {
            // uncomment below to test the property
            //modelInstance.winningTeamParsed shouldBe ("TODO")
        }

    }
}
