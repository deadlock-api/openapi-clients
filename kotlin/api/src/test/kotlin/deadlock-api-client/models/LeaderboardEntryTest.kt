/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.LeaderboardEntry

class LeaderboardEntryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of LeaderboardEntry
        //val modelInstance = LeaderboardEntry()

        // to test the property `accountName` - The account name of the player.
        should("test accountName") {
            // uncomment below to test the property
            //modelInstance.accountName shouldBe ("TODO")
        }

        // to test the property `badgeLevel` - The badge level of the player. See more: <https://assets.deadlock-api.com/v2/ranks>
        should("test badgeLevel") {
            // uncomment below to test the property
            //modelInstance.badgeLevel shouldBe ("TODO")
        }

        // to test the property `possibleAccountIds` - The possible account IDs of the player. **CAVEAT: This is not always correct, as Steam account names are not unique.**
        should("test possibleAccountIds") {
            // uncomment below to test the property
            //modelInstance.possibleAccountIds shouldBe ("TODO")
        }

        // to test the property `rank` - The rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>
        should("test rank") {
            // uncomment below to test the property
            //modelInstance.rank shouldBe ("TODO")
        }

        // to test the property `rankedRank` - The ranked rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>
        should("test rankedRank") {
            // uncomment below to test the property
            //modelInstance.rankedRank shouldBe ("TODO")
        }

        // to test the property `rankedSubrank` - The ranked subrank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>
        should("test rankedSubrank") {
            // uncomment below to test the property
            //modelInstance.rankedSubrank shouldBe ("TODO")
        }

        // to test the property `topHeroIds` - The top hero IDs of the player. See more: <https://assets.deadlock-api.com/v2/heroes>
        should("test topHeroIds") {
            // uncomment below to test the property
            //modelInstance.topHeroIds shouldBe ("TODO")
        }

    }
}
