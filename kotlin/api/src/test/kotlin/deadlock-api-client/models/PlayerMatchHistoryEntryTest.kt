/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.PlayerMatchHistoryEntry

class PlayerMatchHistoryEntryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PlayerMatchHistoryEntry
        //val modelInstance = PlayerMatchHistoryEntry()

        // to test the property `accountId`
        should("test accountId") {
            // uncomment below to test the property
            //modelInstance.accountId shouldBe ("TODO")
        }

        // to test the property `denies`
        should("test denies") {
            // uncomment below to test the property
            //modelInstance.denies shouldBe ("TODO")
        }

        // to test the property `gameMode`
        should("test gameMode") {
            // uncomment below to test the property
            //modelInstance.gameMode shouldBe ("TODO")
        }

        // to test the property `heroId` - See more: <https://assets.deadlock-api.com/v2/heroes>
        should("test heroId") {
            // uncomment below to test the property
            //modelInstance.heroId shouldBe ("TODO")
        }

        // to test the property `heroLevel`
        should("test heroLevel") {
            // uncomment below to test the property
            //modelInstance.heroLevel shouldBe ("TODO")
        }

        // to test the property `lastHits`
        should("test lastHits") {
            // uncomment below to test the property
            //modelInstance.lastHits shouldBe ("TODO")
        }

        // to test the property `matchDurationS`
        should("test matchDurationS") {
            // uncomment below to test the property
            //modelInstance.matchDurationS shouldBe ("TODO")
        }

        // to test the property `matchId`
        should("test matchId") {
            // uncomment below to test the property
            //modelInstance.matchId shouldBe ("TODO")
        }

        // to test the property `matchMode`
        should("test matchMode") {
            // uncomment below to test the property
            //modelInstance.matchMode shouldBe ("TODO")
        }

        // to test the property `matchResult`
        should("test matchResult") {
            // uncomment below to test the property
            //modelInstance.matchResult shouldBe ("TODO")
        }

        // to test the property `netWorth`
        should("test netWorth") {
            // uncomment below to test the property
            //modelInstance.netWorth shouldBe ("TODO")
        }

        // to test the property `objectivesMaskTeam0`
        should("test objectivesMaskTeam0") {
            // uncomment below to test the property
            //modelInstance.objectivesMaskTeam0 shouldBe ("TODO")
        }

        // to test the property `objectivesMaskTeam1`
        should("test objectivesMaskTeam1") {
            // uncomment below to test the property
            //modelInstance.objectivesMaskTeam1 shouldBe ("TODO")
        }

        // to test the property `playerAssists`
        should("test playerAssists") {
            // uncomment below to test the property
            //modelInstance.playerAssists shouldBe ("TODO")
        }

        // to test the property `playerDeaths`
        should("test playerDeaths") {
            // uncomment below to test the property
            //modelInstance.playerDeaths shouldBe ("TODO")
        }

        // to test the property `playerKills`
        should("test playerKills") {
            // uncomment below to test the property
            //modelInstance.playerKills shouldBe ("TODO")
        }

        // to test the property `playerTeam`
        should("test playerTeam") {
            // uncomment below to test the property
            //modelInstance.playerTeam shouldBe ("TODO")
        }

        // to test the property `startTime`
        should("test startTime") {
            // uncomment below to test the property
            //modelInstance.startTime shouldBe ("TODO")
        }

        // to test the property `abandonedTimeS`
        should("test abandonedTimeS") {
            // uncomment below to test the property
            //modelInstance.abandonedTimeS shouldBe ("TODO")
        }

        // to test the property `teamAbandoned`
        should("test teamAbandoned") {
            // uncomment below to test the property
            //modelInstance.teamAbandoned shouldBe ("TODO")
        }

        // to test the property `username`
        should("test username") {
            // uncomment below to test the property
            //modelInstance.username shouldBe ("TODO")
        }

    }
}
