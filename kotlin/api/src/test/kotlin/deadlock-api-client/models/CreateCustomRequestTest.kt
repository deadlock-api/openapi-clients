/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.CreateCustomRequest
import deadlock-api-client.models.RegionMode

class CreateCustomRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateCustomRequest
        //val modelInstance = CreateCustomRequest()

        // to test the property `callbackUrl` - If a callback url is provided, we will send a POST request to this url when the match starts.
        should("test callbackUrl") {
            // uncomment below to test the property
            //modelInstance.callbackUrl shouldBe ("TODO")
        }

        // to test the property `cheatsEnabled`
        should("test cheatsEnabled") {
            // uncomment below to test the property
            //modelInstance.cheatsEnabled shouldBe ("TODO")
        }

        // to test the property `disableAutoReady` - If auto-ready is disabled, the bot will not automatically ready up. You need to call the `ready` endpoint to ready up.
        should("test disableAutoReady") {
            // uncomment below to test the property
            //modelInstance.disableAutoReady shouldBe ("TODO")
        }

        // to test the property `duplicateHeroesEnabled`
        should("test duplicateHeroesEnabled") {
            // uncomment below to test the property
            //modelInstance.duplicateHeroesEnabled shouldBe ("TODO")
        }

        // to test the property `experimentalHeroesEnabled`
        should("test experimentalHeroesEnabled") {
            // uncomment below to test the property
            //modelInstance.experimentalHeroesEnabled shouldBe ("TODO")
        }

        // to test the property `isPubliclyVisible`
        should("test isPubliclyVisible") {
            // uncomment below to test the property
            //modelInstance.isPubliclyVisible shouldBe ("TODO")
        }

        // to test the property `minRosterSize`
        should("test minRosterSize") {
            // uncomment below to test the property
            //modelInstance.minRosterSize shouldBe ("TODO")
        }

        // to test the property `randomizeLanes`
        should("test randomizeLanes") {
            // uncomment below to test the property
            //modelInstance.randomizeLanes shouldBe ("TODO")
        }

        // to test the property `regionMode`
        should("test regionMode") {
            // uncomment below to test the property
            //modelInstance.regionMode shouldBe ("TODO")
        }

    }
}
