/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.HeroCounterStats

class HeroCounterStatsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of HeroCounterStats
        //val modelInstance = HeroCounterStats()

        // to test the property `assists` - The number of assists by `hero_id` when facing `enemy_hero_id`.
        should("test assists") {
            // uncomment below to test the property
            //modelInstance.assists shouldBe ("TODO")
        }

        // to test the property `creeps` - The number of creeps killed by `hero_id` when facing `enemy_hero_id`.
        should("test creeps") {
            // uncomment below to test the property
            //modelInstance.creeps shouldBe ("TODO")
        }

        // to test the property `deaths` - The number of deaths by `hero_id` when facing `enemy_hero_id`.
        should("test deaths") {
            // uncomment below to test the property
            //modelInstance.deaths shouldBe ("TODO")
        }

        // to test the property `denies` - The number of denies by `hero_id` when facing `enemy_hero_id`.
        should("test denies") {
            // uncomment below to test the property
            //modelInstance.denies shouldBe ("TODO")
        }

        // to test the property `enemyAssists` - The number of assists by `enemy_hero_id` when facing `hero_id`.
        should("test enemyAssists") {
            // uncomment below to test the property
            //modelInstance.enemyAssists shouldBe ("TODO")
        }

        // to test the property `enemyCreeps` - The number of creeps killed by `enemy_hero_id` when facing `hero_id`.
        should("test enemyCreeps") {
            // uncomment below to test the property
            //modelInstance.enemyCreeps shouldBe ("TODO")
        }

        // to test the property `enemyDeaths` - The number of deaths by `enemy_hero_id` when facing `hero_id`.
        should("test enemyDeaths") {
            // uncomment below to test the property
            //modelInstance.enemyDeaths shouldBe ("TODO")
        }

        // to test the property `enemyDenies` - The number of denies by `enemy_hero_id` when facing `hero_id`.
        should("test enemyDenies") {
            // uncomment below to test the property
            //modelInstance.enemyDenies shouldBe ("TODO")
        }

        // to test the property `enemyHeroId` - The ID of the opposing hero. See more: <https://assets.deadlock-api.com/v2/heroes>
        should("test enemyHeroId") {
            // uncomment below to test the property
            //modelInstance.enemyHeroId shouldBe ("TODO")
        }

        // to test the property `enemyKills` - The number of kills by `enemy_hero_id` when facing `hero_id`.
        should("test enemyKills") {
            // uncomment below to test the property
            //modelInstance.enemyKills shouldBe ("TODO")
        }

        // to test the property `enemyLastHits` - The number of last hits by `enemy_hero_id` when facing `hero_id`.
        should("test enemyLastHits") {
            // uncomment below to test the property
            //modelInstance.enemyLastHits shouldBe ("TODO")
        }

        // to test the property `enemyNetworth` - The net worth of `enemy_hero_id` when facing `hero_id`.
        should("test enemyNetworth") {
            // uncomment below to test the property
            //modelInstance.enemyNetworth shouldBe ("TODO")
        }

        // to test the property `enemyObjDamage` - The amount of objective damage dealt by `enemy_hero_id` when facing `hero_id`.
        should("test enemyObjDamage") {
            // uncomment below to test the property
            //modelInstance.enemyObjDamage shouldBe ("TODO")
        }

        // to test the property `heroId` - The ID of the hero. See more: <https://assets.deadlock-api.com/v2/heroes>
        should("test heroId") {
            // uncomment below to test the property
            //modelInstance.heroId shouldBe ("TODO")
        }

        // to test the property `kills` - The number of kills by `hero_id` when facing `enemy_hero_id`.
        should("test kills") {
            // uncomment below to test the property
            //modelInstance.kills shouldBe ("TODO")
        }

        // to test the property `lastHits` - The number of last hits by `hero_id` when facing `enemy_hero_id`.
        should("test lastHits") {
            // uncomment below to test the property
            //modelInstance.lastHits shouldBe ("TODO")
        }

        // to test the property `matchesPlayed` - The total number of matches played between `hero_id` and `enemy_hero_id` that meet the filter criteria.
        should("test matchesPlayed") {
            // uncomment below to test the property
            //modelInstance.matchesPlayed shouldBe ("TODO")
        }

        // to test the property `networth` - The net worth of `hero_id` when facing `enemy_hero_id`.
        should("test networth") {
            // uncomment below to test the property
            //modelInstance.networth shouldBe ("TODO")
        }

        // to test the property `objDamage` - The amount of objective damage dealt by `hero_id` when facing `enemy_hero_id`.
        should("test objDamage") {
            // uncomment below to test the property
            //modelInstance.objDamage shouldBe ("TODO")
        }

        // to test the property `wins` - The number of times `hero_id` won the match when facing `enemy_hero_id`.
        should("test wins") {
            // uncomment below to test the property
            //modelInstance.wins shouldBe ("TODO")
        }

    }
}
