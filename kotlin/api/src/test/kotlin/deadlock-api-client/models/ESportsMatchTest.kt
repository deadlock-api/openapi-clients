/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package deadlock-api-client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import deadlock-api-client.models.ESportsMatch
import deadlock-api-client.models.ESportsMatchStatus

class ESportsMatchTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ESportsMatch
        //val modelInstance = ESportsMatch()

        // to test the property `provider` - The provider of the match data. Some string that identifies the source of the data.
        should("test provider") {
            // uncomment below to test the property
            //modelInstance.provider shouldBe ("TODO")
        }

        // to test the property `matchId` - Valve's match id of the match.
        should("test matchId") {
            // uncomment below to test the property
            //modelInstance.matchId shouldBe ("TODO")
        }

        // to test the property `scheduledDate` - The scheduled date of the match.
        should("test scheduledDate") {
            // uncomment below to test the property
            //modelInstance.scheduledDate shouldBe ("TODO")
        }

        // to test the property `status` - The status of the match, e.g. live, completed, scheduled, cancelled.
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `team0Name` - The name of the first team.
        should("test team0Name") {
            // uncomment below to test the property
            //modelInstance.team0Name shouldBe ("TODO")
        }

        // to test the property `team1Name` - The name of the second team.
        should("test team1Name") {
            // uncomment below to test the property
            //modelInstance.team1Name shouldBe ("TODO")
        }

        // to test the property `tournamentName` - The name of the tournament.
        should("test tournamentName") {
            // uncomment below to test the property
            //modelInstance.tournamentName shouldBe ("TODO")
        }

        // to test the property `tournamentStage` - The stage of the tournament.
        should("test tournamentStage") {
            // uncomment below to test the property
            //modelInstance.tournamentStage shouldBe ("TODO")
        }

        // to test the property `updateId` - If you want to update an existing match, you can provide an update id.
        should("test updateId") {
            // uncomment below to test the property
            //modelInstance.updateId shouldBe ("TODO")
        }

    }
}
