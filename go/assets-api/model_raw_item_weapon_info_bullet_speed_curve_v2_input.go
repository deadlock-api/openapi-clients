/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawItemWeaponInfoBulletSpeedCurveV2Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawItemWeaponInfoBulletSpeedCurveV2Input{}

// RawItemWeaponInfoBulletSpeedCurveV2Input struct for RawItemWeaponInfoBulletSpeedCurveV2Input
type RawItemWeaponInfoBulletSpeedCurveV2Input struct {
	MSpline []RawItemWeaponInfoBulletSpeedCurveSplineV2Input `json:"m_spline,omitempty"`
	MVDomainMaxs []float32 `json:"m_vDomainMaxs"`
	MVDomainMins []float32 `json:"m_vDomainMins"`
}

type _RawItemWeaponInfoBulletSpeedCurveV2Input RawItemWeaponInfoBulletSpeedCurveV2Input

// NewRawItemWeaponInfoBulletSpeedCurveV2Input instantiates a new RawItemWeaponInfoBulletSpeedCurveV2Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawItemWeaponInfoBulletSpeedCurveV2Input(mVDomainMaxs []float32, mVDomainMins []float32) *RawItemWeaponInfoBulletSpeedCurveV2Input {
	this := RawItemWeaponInfoBulletSpeedCurveV2Input{}
	this.MVDomainMaxs = mVDomainMaxs
	this.MVDomainMins = mVDomainMins
	return &this
}

// NewRawItemWeaponInfoBulletSpeedCurveV2InputWithDefaults instantiates a new RawItemWeaponInfoBulletSpeedCurveV2Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawItemWeaponInfoBulletSpeedCurveV2InputWithDefaults() *RawItemWeaponInfoBulletSpeedCurveV2Input {
	this := RawItemWeaponInfoBulletSpeedCurveV2Input{}
	return &this
}

// GetMSpline returns the MSpline field value if set, zero value otherwise.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMSpline() []RawItemWeaponInfoBulletSpeedCurveSplineV2Input {
	if o == nil || IsNil(o.MSpline) {
		var ret []RawItemWeaponInfoBulletSpeedCurveSplineV2Input
		return ret
	}
	return o.MSpline
}

// GetMSplineOk returns a tuple with the MSpline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMSplineOk() ([]RawItemWeaponInfoBulletSpeedCurveSplineV2Input, bool) {
	if o == nil || IsNil(o.MSpline) {
		return nil, false
	}
	return o.MSpline, true
}

// HasMSpline returns a boolean if a field has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) HasMSpline() bool {
	if o != nil && !IsNil(o.MSpline) {
		return true
	}

	return false
}

// SetMSpline gets a reference to the given []RawItemWeaponInfoBulletSpeedCurveSplineV2Input and assigns it to the MSpline field.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) SetMSpline(v []RawItemWeaponInfoBulletSpeedCurveSplineV2Input) {
	o.MSpline = v
}

// GetMVDomainMaxs returns the MVDomainMaxs field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMVDomainMaxs() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.MVDomainMaxs
}

// GetMVDomainMaxsOk returns a tuple with the MVDomainMaxs field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMVDomainMaxsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MVDomainMaxs, true
}

// SetMVDomainMaxs sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) SetMVDomainMaxs(v []float32) {
	o.MVDomainMaxs = v
}

// GetMVDomainMins returns the MVDomainMins field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMVDomainMins() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.MVDomainMins
}

// GetMVDomainMinsOk returns a tuple with the MVDomainMins field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) GetMVDomainMinsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MVDomainMins, true
}

// SetMVDomainMins sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) SetMVDomainMins(v []float32) {
	o.MVDomainMins = v
}

func (o RawItemWeaponInfoBulletSpeedCurveV2Input) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawItemWeaponInfoBulletSpeedCurveV2Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MSpline) {
		toSerialize["m_spline"] = o.MSpline
	}
	toSerialize["m_vDomainMaxs"] = o.MVDomainMaxs
	toSerialize["m_vDomainMins"] = o.MVDomainMins
	return toSerialize, nil
}

func (o *RawItemWeaponInfoBulletSpeedCurveV2Input) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"m_vDomainMaxs",
		"m_vDomainMins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawItemWeaponInfoBulletSpeedCurveV2Input := _RawItemWeaponInfoBulletSpeedCurveV2Input{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawItemWeaponInfoBulletSpeedCurveV2Input)

	if err != nil {
		return err
	}

	*o = RawItemWeaponInfoBulletSpeedCurveV2Input(varRawItemWeaponInfoBulletSpeedCurveV2Input)

	return err
}

type NullableRawItemWeaponInfoBulletSpeedCurveV2Input struct {
	value *RawItemWeaponInfoBulletSpeedCurveV2Input
	isSet bool
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Input) Get() *RawItemWeaponInfoBulletSpeedCurveV2Input {
	return v.value
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Input) Set(val *RawItemWeaponInfoBulletSpeedCurveV2Input) {
	v.value = val
	v.isSet = true
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Input) IsSet() bool {
	return v.isSet
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawItemWeaponInfoBulletSpeedCurveV2Input(val *RawItemWeaponInfoBulletSpeedCurveV2Input) *NullableRawItemWeaponInfoBulletSpeedCurveV2Input {
	return &NullableRawItemWeaponInfoBulletSpeedCurveV2Input{value: val, isSet: true}
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


