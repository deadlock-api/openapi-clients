/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeroShopWeaponStatsDisplayV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroShopWeaponStatsDisplayV2Output{}

// HeroShopWeaponStatsDisplayV2Output struct for HeroShopWeaponStatsDisplayV2Output
type HeroShopWeaponStatsDisplayV2Output struct {
	DisplayStats []string `json:"display_stats"`
	OtherDisplayStats []string `json:"other_display_stats"`
	WeaponAttributes []string `json:"weapon_attributes,omitempty"`
	WeaponImage NullableString `json:"weapon_image,omitempty"`
	WeaponImageWebp NullableString `json:"weapon_image_webp,omitempty"`
}

type _HeroShopWeaponStatsDisplayV2Output HeroShopWeaponStatsDisplayV2Output

// NewHeroShopWeaponStatsDisplayV2Output instantiates a new HeroShopWeaponStatsDisplayV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroShopWeaponStatsDisplayV2Output(displayStats []string, otherDisplayStats []string) *HeroShopWeaponStatsDisplayV2Output {
	this := HeroShopWeaponStatsDisplayV2Output{}
	this.DisplayStats = displayStats
	this.OtherDisplayStats = otherDisplayStats
	return &this
}

// NewHeroShopWeaponStatsDisplayV2OutputWithDefaults instantiates a new HeroShopWeaponStatsDisplayV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroShopWeaponStatsDisplayV2OutputWithDefaults() *HeroShopWeaponStatsDisplayV2Output {
	this := HeroShopWeaponStatsDisplayV2Output{}
	return &this
}

// GetDisplayStats returns the DisplayStats field value
func (o *HeroShopWeaponStatsDisplayV2Output) GetDisplayStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DisplayStats
}

// GetDisplayStatsOk returns a tuple with the DisplayStats field value
// and a boolean to check if the value has been set.
func (o *HeroShopWeaponStatsDisplayV2Output) GetDisplayStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayStats, true
}

// SetDisplayStats sets field value
func (o *HeroShopWeaponStatsDisplayV2Output) SetDisplayStats(v []string) {
	o.DisplayStats = v
}

// GetOtherDisplayStats returns the OtherDisplayStats field value
func (o *HeroShopWeaponStatsDisplayV2Output) GetOtherDisplayStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OtherDisplayStats
}

// GetOtherDisplayStatsOk returns a tuple with the OtherDisplayStats field value
// and a boolean to check if the value has been set.
func (o *HeroShopWeaponStatsDisplayV2Output) GetOtherDisplayStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherDisplayStats, true
}

// SetOtherDisplayStats sets field value
func (o *HeroShopWeaponStatsDisplayV2Output) SetOtherDisplayStats(v []string) {
	o.OtherDisplayStats = v
}

// GetWeaponAttributes returns the WeaponAttributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponAttributes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.WeaponAttributes
}

// GetWeaponAttributesOk returns a tuple with the WeaponAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponAttributesOk() ([]string, bool) {
	if o == nil || IsNil(o.WeaponAttributes) {
		return nil, false
	}
	return o.WeaponAttributes, true
}

// HasWeaponAttributes returns a boolean if a field has been set.
func (o *HeroShopWeaponStatsDisplayV2Output) HasWeaponAttributes() bool {
	if o != nil && !IsNil(o.WeaponAttributes) {
		return true
	}

	return false
}

// SetWeaponAttributes gets a reference to the given []string and assigns it to the WeaponAttributes field.
func (o *HeroShopWeaponStatsDisplayV2Output) SetWeaponAttributes(v []string) {
	o.WeaponAttributes = v
}

// GetWeaponImage returns the WeaponImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponImage() string {
	if o == nil || IsNil(o.WeaponImage.Get()) {
		var ret string
		return ret
	}
	return *o.WeaponImage.Get()
}

// GetWeaponImageOk returns a tuple with the WeaponImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeaponImage.Get(), o.WeaponImage.IsSet()
}

// HasWeaponImage returns a boolean if a field has been set.
func (o *HeroShopWeaponStatsDisplayV2Output) HasWeaponImage() bool {
	if o != nil && o.WeaponImage.IsSet() {
		return true
	}

	return false
}

// SetWeaponImage gets a reference to the given NullableString and assigns it to the WeaponImage field.
func (o *HeroShopWeaponStatsDisplayV2Output) SetWeaponImage(v string) {
	o.WeaponImage.Set(&v)
}
// SetWeaponImageNil sets the value for WeaponImage to be an explicit nil
func (o *HeroShopWeaponStatsDisplayV2Output) SetWeaponImageNil() {
	o.WeaponImage.Set(nil)
}

// UnsetWeaponImage ensures that no value is present for WeaponImage, not even an explicit nil
func (o *HeroShopWeaponStatsDisplayV2Output) UnsetWeaponImage() {
	o.WeaponImage.Unset()
}

// GetWeaponImageWebp returns the WeaponImageWebp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponImageWebp() string {
	if o == nil || IsNil(o.WeaponImageWebp.Get()) {
		var ret string
		return ret
	}
	return *o.WeaponImageWebp.Get()
}

// GetWeaponImageWebpOk returns a tuple with the WeaponImageWebp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeroShopWeaponStatsDisplayV2Output) GetWeaponImageWebpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeaponImageWebp.Get(), o.WeaponImageWebp.IsSet()
}

// HasWeaponImageWebp returns a boolean if a field has been set.
func (o *HeroShopWeaponStatsDisplayV2Output) HasWeaponImageWebp() bool {
	if o != nil && o.WeaponImageWebp.IsSet() {
		return true
	}

	return false
}

// SetWeaponImageWebp gets a reference to the given NullableString and assigns it to the WeaponImageWebp field.
func (o *HeroShopWeaponStatsDisplayV2Output) SetWeaponImageWebp(v string) {
	o.WeaponImageWebp.Set(&v)
}
// SetWeaponImageWebpNil sets the value for WeaponImageWebp to be an explicit nil
func (o *HeroShopWeaponStatsDisplayV2Output) SetWeaponImageWebpNil() {
	o.WeaponImageWebp.Set(nil)
}

// UnsetWeaponImageWebp ensures that no value is present for WeaponImageWebp, not even an explicit nil
func (o *HeroShopWeaponStatsDisplayV2Output) UnsetWeaponImageWebp() {
	o.WeaponImageWebp.Unset()
}

func (o HeroShopWeaponStatsDisplayV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroShopWeaponStatsDisplayV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["display_stats"] = o.DisplayStats
	toSerialize["other_display_stats"] = o.OtherDisplayStats
	if o.WeaponAttributes != nil {
		toSerialize["weapon_attributes"] = o.WeaponAttributes
	}
	if o.WeaponImage.IsSet() {
		toSerialize["weapon_image"] = o.WeaponImage.Get()
	}
	if o.WeaponImageWebp.IsSet() {
		toSerialize["weapon_image_webp"] = o.WeaponImageWebp.Get()
	}
	return toSerialize, nil
}

func (o *HeroShopWeaponStatsDisplayV2Output) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"display_stats",
		"other_display_stats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeroShopWeaponStatsDisplayV2Output := _HeroShopWeaponStatsDisplayV2Output{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeroShopWeaponStatsDisplayV2Output)

	if err != nil {
		return err
	}

	*o = HeroShopWeaponStatsDisplayV2Output(varHeroShopWeaponStatsDisplayV2Output)

	return err
}

type NullableHeroShopWeaponStatsDisplayV2Output struct {
	value *HeroShopWeaponStatsDisplayV2Output
	isSet bool
}

func (v NullableHeroShopWeaponStatsDisplayV2Output) Get() *HeroShopWeaponStatsDisplayV2Output {
	return v.value
}

func (v *NullableHeroShopWeaponStatsDisplayV2Output) Set(val *HeroShopWeaponStatsDisplayV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroShopWeaponStatsDisplayV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroShopWeaponStatsDisplayV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroShopWeaponStatsDisplayV2Output(val *HeroShopWeaponStatsDisplayV2Output) *NullableHeroShopWeaponStatsDisplayV2Output {
	return &NullableHeroShopWeaponStatsDisplayV2Output{value: val, isSet: true}
}

func (v NullableHeroShopWeaponStatsDisplayV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroShopWeaponStatsDisplayV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


