/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawHeroShopSpiritStatsDisplayV2Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawHeroShopSpiritStatsDisplayV2Input{}

// RawHeroShopSpiritStatsDisplayV2Input struct for RawHeroShopSpiritStatsDisplayV2Input
type RawHeroShopSpiritStatsDisplayV2Input struct {
	MVecDisplayStats []string `json:"m_vecDisplayStats"`
}

type _RawHeroShopSpiritStatsDisplayV2Input RawHeroShopSpiritStatsDisplayV2Input

// NewRawHeroShopSpiritStatsDisplayV2Input instantiates a new RawHeroShopSpiritStatsDisplayV2Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawHeroShopSpiritStatsDisplayV2Input(mVecDisplayStats []string) *RawHeroShopSpiritStatsDisplayV2Input {
	this := RawHeroShopSpiritStatsDisplayV2Input{}
	this.MVecDisplayStats = mVecDisplayStats
	return &this
}

// NewRawHeroShopSpiritStatsDisplayV2InputWithDefaults instantiates a new RawHeroShopSpiritStatsDisplayV2Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawHeroShopSpiritStatsDisplayV2InputWithDefaults() *RawHeroShopSpiritStatsDisplayV2Input {
	this := RawHeroShopSpiritStatsDisplayV2Input{}
	return &this
}

// GetMVecDisplayStats returns the MVecDisplayStats field value
func (o *RawHeroShopSpiritStatsDisplayV2Input) GetMVecDisplayStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MVecDisplayStats
}

// GetMVecDisplayStatsOk returns a tuple with the MVecDisplayStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroShopSpiritStatsDisplayV2Input) GetMVecDisplayStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MVecDisplayStats, true
}

// SetMVecDisplayStats sets field value
func (o *RawHeroShopSpiritStatsDisplayV2Input) SetMVecDisplayStats(v []string) {
	o.MVecDisplayStats = v
}

func (o RawHeroShopSpiritStatsDisplayV2Input) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawHeroShopSpiritStatsDisplayV2Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["m_vecDisplayStats"] = o.MVecDisplayStats
	return toSerialize, nil
}

func (o *RawHeroShopSpiritStatsDisplayV2Input) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"m_vecDisplayStats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawHeroShopSpiritStatsDisplayV2Input := _RawHeroShopSpiritStatsDisplayV2Input{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawHeroShopSpiritStatsDisplayV2Input)

	if err != nil {
		return err
	}

	*o = RawHeroShopSpiritStatsDisplayV2Input(varRawHeroShopSpiritStatsDisplayV2Input)

	return err
}

type NullableRawHeroShopSpiritStatsDisplayV2Input struct {
	value *RawHeroShopSpiritStatsDisplayV2Input
	isSet bool
}

func (v NullableRawHeroShopSpiritStatsDisplayV2Input) Get() *RawHeroShopSpiritStatsDisplayV2Input {
	return v.value
}

func (v *NullableRawHeroShopSpiritStatsDisplayV2Input) Set(val *RawHeroShopSpiritStatsDisplayV2Input) {
	v.value = val
	v.isSet = true
}

func (v NullableRawHeroShopSpiritStatsDisplayV2Input) IsSet() bool {
	return v.isSet
}

func (v *NullableRawHeroShopSpiritStatsDisplayV2Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawHeroShopSpiritStatsDisplayV2Input(val *RawHeroShopSpiritStatsDisplayV2Input) *NullableRawHeroShopSpiritStatsDisplayV2Input {
	return &NullableRawHeroShopSpiritStatsDisplayV2Input{value: val, isSet: true}
}

func (v NullableRawHeroShopSpiritStatsDisplayV2Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawHeroShopSpiritStatsDisplayV2Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


