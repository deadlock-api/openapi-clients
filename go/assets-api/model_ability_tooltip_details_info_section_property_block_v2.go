/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
)

// checks if the AbilityTooltipDetailsInfoSectionPropertyBlockV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbilityTooltipDetailsInfoSectionPropertyBlockV2{}

// AbilityTooltipDetailsInfoSectionPropertyBlockV2 struct for AbilityTooltipDetailsInfoSectionPropertyBlockV2
type AbilityTooltipDetailsInfoSectionPropertyBlockV2 struct {
	LocString NullableString `json:"loc_string,omitempty"`
	Properties []AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty `json:"properties,omitempty"`
}

// NewAbilityTooltipDetailsInfoSectionPropertyBlockV2 instantiates a new AbilityTooltipDetailsInfoSectionPropertyBlockV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbilityTooltipDetailsInfoSectionPropertyBlockV2() *AbilityTooltipDetailsInfoSectionPropertyBlockV2 {
	this := AbilityTooltipDetailsInfoSectionPropertyBlockV2{}
	return &this
}

// NewAbilityTooltipDetailsInfoSectionPropertyBlockV2WithDefaults instantiates a new AbilityTooltipDetailsInfoSectionPropertyBlockV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbilityTooltipDetailsInfoSectionPropertyBlockV2WithDefaults() *AbilityTooltipDetailsInfoSectionPropertyBlockV2 {
	this := AbilityTooltipDetailsInfoSectionPropertyBlockV2{}
	return &this
}

// GetLocString returns the LocString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) GetLocString() string {
	if o == nil || IsNil(o.LocString.Get()) {
		var ret string
		return ret
	}
	return *o.LocString.Get()
}

// GetLocStringOk returns a tuple with the LocString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) GetLocStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocString.Get(), o.LocString.IsSet()
}

// HasLocString returns a boolean if a field has been set.
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) HasLocString() bool {
	if o != nil && o.LocString.IsSet() {
		return true
	}

	return false
}

// SetLocString gets a reference to the given NullableString and assigns it to the LocString field.
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) SetLocString(v string) {
	o.LocString.Set(&v)
}
// SetLocStringNil sets the value for LocString to be an explicit nil
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) SetLocStringNil() {
	o.LocString.Set(nil)
}

// UnsetLocString ensures that no value is present for LocString, not even an explicit nil
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) UnsetLocString() {
	o.LocString.Unset()
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) GetProperties() []AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty {
	if o == nil {
		var ret []AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) GetPropertiesOk() ([]AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty and assigns it to the Properties field.
func (o *AbilityTooltipDetailsInfoSectionPropertyBlockV2) SetProperties(v []AbilityV2TooltipDetailsInfoSectionPropertyBlockProperty) {
	o.Properties = v
}

func (o AbilityTooltipDetailsInfoSectionPropertyBlockV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbilityTooltipDetailsInfoSectionPropertyBlockV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LocString.IsSet() {
		toSerialize["loc_string"] = o.LocString.Get()
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2 struct {
	value *AbilityTooltipDetailsInfoSectionPropertyBlockV2
	isSet bool
}

func (v NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) Get() *AbilityTooltipDetailsInfoSectionPropertyBlockV2 {
	return v.value
}

func (v *NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) Set(val *AbilityTooltipDetailsInfoSectionPropertyBlockV2) {
	v.value = val
	v.isSet = true
}

func (v NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) IsSet() bool {
	return v.isSet
}

func (v *NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbilityTooltipDetailsInfoSectionPropertyBlockV2(val *AbilityTooltipDetailsInfoSectionPropertyBlockV2) *NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2 {
	return &NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2{value: val, isSet: true}
}

func (v NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbilityTooltipDetailsInfoSectionPropertyBlockV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


