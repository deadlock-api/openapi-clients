/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawItemWeaponInfoBulletSpeedCurveV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawItemWeaponInfoBulletSpeedCurveV2Output{}

// RawItemWeaponInfoBulletSpeedCurveV2Output struct for RawItemWeaponInfoBulletSpeedCurveV2Output
type RawItemWeaponInfoBulletSpeedCurveV2Output struct {
	Spline []RawItemWeaponInfoBulletSpeedCurveSplineV2Output `json:"spline,omitempty"`
	DomainMaxs []float32 `json:"domain_maxs"`
	DomainMins []float32 `json:"domain_mins"`
}

type _RawItemWeaponInfoBulletSpeedCurveV2Output RawItemWeaponInfoBulletSpeedCurveV2Output

// NewRawItemWeaponInfoBulletSpeedCurveV2Output instantiates a new RawItemWeaponInfoBulletSpeedCurveV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawItemWeaponInfoBulletSpeedCurveV2Output(domainMaxs []float32, domainMins []float32) *RawItemWeaponInfoBulletSpeedCurveV2Output {
	this := RawItemWeaponInfoBulletSpeedCurveV2Output{}
	this.DomainMaxs = domainMaxs
	this.DomainMins = domainMins
	return &this
}

// NewRawItemWeaponInfoBulletSpeedCurveV2OutputWithDefaults instantiates a new RawItemWeaponInfoBulletSpeedCurveV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawItemWeaponInfoBulletSpeedCurveV2OutputWithDefaults() *RawItemWeaponInfoBulletSpeedCurveV2Output {
	this := RawItemWeaponInfoBulletSpeedCurveV2Output{}
	return &this
}

// GetSpline returns the Spline field value if set, zero value otherwise.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetSpline() []RawItemWeaponInfoBulletSpeedCurveSplineV2Output {
	if o == nil || IsNil(o.Spline) {
		var ret []RawItemWeaponInfoBulletSpeedCurveSplineV2Output
		return ret
	}
	return o.Spline
}

// GetSplineOk returns a tuple with the Spline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetSplineOk() ([]RawItemWeaponInfoBulletSpeedCurveSplineV2Output, bool) {
	if o == nil || IsNil(o.Spline) {
		return nil, false
	}
	return o.Spline, true
}

// HasSpline returns a boolean if a field has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) HasSpline() bool {
	if o != nil && !IsNil(o.Spline) {
		return true
	}

	return false
}

// SetSpline gets a reference to the given []RawItemWeaponInfoBulletSpeedCurveSplineV2Output and assigns it to the Spline field.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) SetSpline(v []RawItemWeaponInfoBulletSpeedCurveSplineV2Output) {
	o.Spline = v
}

// GetDomainMaxs returns the DomainMaxs field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetDomainMaxs() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.DomainMaxs
}

// GetDomainMaxsOk returns a tuple with the DomainMaxs field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetDomainMaxsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainMaxs, true
}

// SetDomainMaxs sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) SetDomainMaxs(v []float32) {
	o.DomainMaxs = v
}

// GetDomainMins returns the DomainMins field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetDomainMins() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.DomainMins
}

// GetDomainMinsOk returns a tuple with the DomainMins field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) GetDomainMinsOk() ([]float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainMins, true
}

// SetDomainMins sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) SetDomainMins(v []float32) {
	o.DomainMins = v
}

func (o RawItemWeaponInfoBulletSpeedCurveV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawItemWeaponInfoBulletSpeedCurveV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Spline) {
		toSerialize["spline"] = o.Spline
	}
	toSerialize["domain_maxs"] = o.DomainMaxs
	toSerialize["domain_mins"] = o.DomainMins
	return toSerialize, nil
}

func (o *RawItemWeaponInfoBulletSpeedCurveV2Output) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain_maxs",
		"domain_mins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawItemWeaponInfoBulletSpeedCurveV2Output := _RawItemWeaponInfoBulletSpeedCurveV2Output{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawItemWeaponInfoBulletSpeedCurveV2Output)

	if err != nil {
		return err
	}

	*o = RawItemWeaponInfoBulletSpeedCurveV2Output(varRawItemWeaponInfoBulletSpeedCurveV2Output)

	return err
}

type NullableRawItemWeaponInfoBulletSpeedCurveV2Output struct {
	value *RawItemWeaponInfoBulletSpeedCurveV2Output
	isSet bool
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Output) Get() *RawItemWeaponInfoBulletSpeedCurveV2Output {
	return v.value
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Output) Set(val *RawItemWeaponInfoBulletSpeedCurveV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawItemWeaponInfoBulletSpeedCurveV2Output(val *RawItemWeaponInfoBulletSpeedCurveV2Output) *NullableRawItemWeaponInfoBulletSpeedCurveV2Output {
	return &NullableRawItemWeaponInfoBulletSpeedCurveV2Output{value: val, isSet: true}
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


