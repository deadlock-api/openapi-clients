/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeroStartingStatsV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroStartingStatsV2{}

// HeroStartingStatsV2 struct for HeroStartingStatsV2
type HeroStartingStatsV2 struct {
	MaxMoveSpeed HeroStartingStatV2 `json:"max_move_speed"`
	SprintSpeed HeroStartingStatV2 `json:"sprint_speed"`
	CrouchSpeed HeroStartingStatV2 `json:"crouch_speed"`
	MoveAcceleration HeroStartingStatV2 `json:"move_acceleration"`
	LightMeleeDamage HeroStartingStatV2 `json:"light_melee_damage"`
	HeavyMeleeDamage HeroStartingStatV2 `json:"heavy_melee_damage"`
	MaxHealth HeroStartingStatV2 `json:"max_health"`
	WeaponPower HeroStartingStatV2 `json:"weapon_power"`
	ReloadSpeed HeroStartingStatV2 `json:"reload_speed"`
	WeaponPowerScale HeroStartingStatV2 `json:"weapon_power_scale"`
	ProcBuildUpRateScale HeroStartingStatV2 `json:"proc_build_up_rate_scale"`
	Stamina HeroStartingStatV2 `json:"stamina"`
	BaseHealthRegen HeroStartingStatV2 `json:"base_health_regen"`
	StaminaRegenPerSecond HeroStartingStatV2 `json:"stamina_regen_per_second"`
	AbilityResourceMax HeroStartingStatV2 `json:"ability_resource_max"`
	AbilityResourceRegenPerSecond HeroStartingStatV2 `json:"ability_resource_regen_per_second"`
	CritDamageReceivedScale HeroStartingStatV2 `json:"crit_damage_received_scale"`
	TechDuration HeroStartingStatV2 `json:"tech_duration"`
	TechArmorDamageReduction NullableHeroStartingStatV2 `json:"tech_armor_damage_reduction,omitempty"`
	TechRange HeroStartingStatV2 `json:"tech_range"`
	BulletArmorDamageReduction NullableHeroStartingStatV2 `json:"bullet_armor_damage_reduction,omitempty"`
}

type _HeroStartingStatsV2 HeroStartingStatsV2

// NewHeroStartingStatsV2 instantiates a new HeroStartingStatsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroStartingStatsV2(maxMoveSpeed HeroStartingStatV2, sprintSpeed HeroStartingStatV2, crouchSpeed HeroStartingStatV2, moveAcceleration HeroStartingStatV2, lightMeleeDamage HeroStartingStatV2, heavyMeleeDamage HeroStartingStatV2, maxHealth HeroStartingStatV2, weaponPower HeroStartingStatV2, reloadSpeed HeroStartingStatV2, weaponPowerScale HeroStartingStatV2, procBuildUpRateScale HeroStartingStatV2, stamina HeroStartingStatV2, baseHealthRegen HeroStartingStatV2, staminaRegenPerSecond HeroStartingStatV2, abilityResourceMax HeroStartingStatV2, abilityResourceRegenPerSecond HeroStartingStatV2, critDamageReceivedScale HeroStartingStatV2, techDuration HeroStartingStatV2, techRange HeroStartingStatV2) *HeroStartingStatsV2 {
	this := HeroStartingStatsV2{}
	this.MaxMoveSpeed = maxMoveSpeed
	this.SprintSpeed = sprintSpeed
	this.CrouchSpeed = crouchSpeed
	this.MoveAcceleration = moveAcceleration
	this.LightMeleeDamage = lightMeleeDamage
	this.HeavyMeleeDamage = heavyMeleeDamage
	this.MaxHealth = maxHealth
	this.WeaponPower = weaponPower
	this.ReloadSpeed = reloadSpeed
	this.WeaponPowerScale = weaponPowerScale
	this.ProcBuildUpRateScale = procBuildUpRateScale
	this.Stamina = stamina
	this.BaseHealthRegen = baseHealthRegen
	this.StaminaRegenPerSecond = staminaRegenPerSecond
	this.AbilityResourceMax = abilityResourceMax
	this.AbilityResourceRegenPerSecond = abilityResourceRegenPerSecond
	this.CritDamageReceivedScale = critDamageReceivedScale
	this.TechDuration = techDuration
	this.TechRange = techRange
	return &this
}

// NewHeroStartingStatsV2WithDefaults instantiates a new HeroStartingStatsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroStartingStatsV2WithDefaults() *HeroStartingStatsV2 {
	this := HeroStartingStatsV2{}
	return &this
}

// GetMaxMoveSpeed returns the MaxMoveSpeed field value
func (o *HeroStartingStatsV2) GetMaxMoveSpeed() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.MaxMoveSpeed
}

// GetMaxMoveSpeedOk returns a tuple with the MaxMoveSpeed field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetMaxMoveSpeedOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxMoveSpeed, true
}

// SetMaxMoveSpeed sets field value
func (o *HeroStartingStatsV2) SetMaxMoveSpeed(v HeroStartingStatV2) {
	o.MaxMoveSpeed = v
}

// GetSprintSpeed returns the SprintSpeed field value
func (o *HeroStartingStatsV2) GetSprintSpeed() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.SprintSpeed
}

// GetSprintSpeedOk returns a tuple with the SprintSpeed field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetSprintSpeedOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SprintSpeed, true
}

// SetSprintSpeed sets field value
func (o *HeroStartingStatsV2) SetSprintSpeed(v HeroStartingStatV2) {
	o.SprintSpeed = v
}

// GetCrouchSpeed returns the CrouchSpeed field value
func (o *HeroStartingStatsV2) GetCrouchSpeed() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.CrouchSpeed
}

// GetCrouchSpeedOk returns a tuple with the CrouchSpeed field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetCrouchSpeedOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CrouchSpeed, true
}

// SetCrouchSpeed sets field value
func (o *HeroStartingStatsV2) SetCrouchSpeed(v HeroStartingStatV2) {
	o.CrouchSpeed = v
}

// GetMoveAcceleration returns the MoveAcceleration field value
func (o *HeroStartingStatsV2) GetMoveAcceleration() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.MoveAcceleration
}

// GetMoveAccelerationOk returns a tuple with the MoveAcceleration field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetMoveAccelerationOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MoveAcceleration, true
}

// SetMoveAcceleration sets field value
func (o *HeroStartingStatsV2) SetMoveAcceleration(v HeroStartingStatV2) {
	o.MoveAcceleration = v
}

// GetLightMeleeDamage returns the LightMeleeDamage field value
func (o *HeroStartingStatsV2) GetLightMeleeDamage() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.LightMeleeDamage
}

// GetLightMeleeDamageOk returns a tuple with the LightMeleeDamage field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetLightMeleeDamageOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LightMeleeDamage, true
}

// SetLightMeleeDamage sets field value
func (o *HeroStartingStatsV2) SetLightMeleeDamage(v HeroStartingStatV2) {
	o.LightMeleeDamage = v
}

// GetHeavyMeleeDamage returns the HeavyMeleeDamage field value
func (o *HeroStartingStatsV2) GetHeavyMeleeDamage() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.HeavyMeleeDamage
}

// GetHeavyMeleeDamageOk returns a tuple with the HeavyMeleeDamage field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetHeavyMeleeDamageOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeavyMeleeDamage, true
}

// SetHeavyMeleeDamage sets field value
func (o *HeroStartingStatsV2) SetHeavyMeleeDamage(v HeroStartingStatV2) {
	o.HeavyMeleeDamage = v
}

// GetMaxHealth returns the MaxHealth field value
func (o *HeroStartingStatsV2) GetMaxHealth() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.MaxHealth
}

// GetMaxHealthOk returns a tuple with the MaxHealth field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetMaxHealthOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxHealth, true
}

// SetMaxHealth sets field value
func (o *HeroStartingStatsV2) SetMaxHealth(v HeroStartingStatV2) {
	o.MaxHealth = v
}

// GetWeaponPower returns the WeaponPower field value
func (o *HeroStartingStatsV2) GetWeaponPower() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.WeaponPower
}

// GetWeaponPowerOk returns a tuple with the WeaponPower field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetWeaponPowerOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeaponPower, true
}

// SetWeaponPower sets field value
func (o *HeroStartingStatsV2) SetWeaponPower(v HeroStartingStatV2) {
	o.WeaponPower = v
}

// GetReloadSpeed returns the ReloadSpeed field value
func (o *HeroStartingStatsV2) GetReloadSpeed() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.ReloadSpeed
}

// GetReloadSpeedOk returns a tuple with the ReloadSpeed field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetReloadSpeedOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReloadSpeed, true
}

// SetReloadSpeed sets field value
func (o *HeroStartingStatsV2) SetReloadSpeed(v HeroStartingStatV2) {
	o.ReloadSpeed = v
}

// GetWeaponPowerScale returns the WeaponPowerScale field value
func (o *HeroStartingStatsV2) GetWeaponPowerScale() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.WeaponPowerScale
}

// GetWeaponPowerScaleOk returns a tuple with the WeaponPowerScale field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetWeaponPowerScaleOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeaponPowerScale, true
}

// SetWeaponPowerScale sets field value
func (o *HeroStartingStatsV2) SetWeaponPowerScale(v HeroStartingStatV2) {
	o.WeaponPowerScale = v
}

// GetProcBuildUpRateScale returns the ProcBuildUpRateScale field value
func (o *HeroStartingStatsV2) GetProcBuildUpRateScale() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.ProcBuildUpRateScale
}

// GetProcBuildUpRateScaleOk returns a tuple with the ProcBuildUpRateScale field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetProcBuildUpRateScaleOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcBuildUpRateScale, true
}

// SetProcBuildUpRateScale sets field value
func (o *HeroStartingStatsV2) SetProcBuildUpRateScale(v HeroStartingStatV2) {
	o.ProcBuildUpRateScale = v
}

// GetStamina returns the Stamina field value
func (o *HeroStartingStatsV2) GetStamina() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.Stamina
}

// GetStaminaOk returns a tuple with the Stamina field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetStaminaOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Stamina, true
}

// SetStamina sets field value
func (o *HeroStartingStatsV2) SetStamina(v HeroStartingStatV2) {
	o.Stamina = v
}

// GetBaseHealthRegen returns the BaseHealthRegen field value
func (o *HeroStartingStatsV2) GetBaseHealthRegen() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.BaseHealthRegen
}

// GetBaseHealthRegenOk returns a tuple with the BaseHealthRegen field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetBaseHealthRegenOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseHealthRegen, true
}

// SetBaseHealthRegen sets field value
func (o *HeroStartingStatsV2) SetBaseHealthRegen(v HeroStartingStatV2) {
	o.BaseHealthRegen = v
}

// GetStaminaRegenPerSecond returns the StaminaRegenPerSecond field value
func (o *HeroStartingStatsV2) GetStaminaRegenPerSecond() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.StaminaRegenPerSecond
}

// GetStaminaRegenPerSecondOk returns a tuple with the StaminaRegenPerSecond field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetStaminaRegenPerSecondOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StaminaRegenPerSecond, true
}

// SetStaminaRegenPerSecond sets field value
func (o *HeroStartingStatsV2) SetStaminaRegenPerSecond(v HeroStartingStatV2) {
	o.StaminaRegenPerSecond = v
}

// GetAbilityResourceMax returns the AbilityResourceMax field value
func (o *HeroStartingStatsV2) GetAbilityResourceMax() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.AbilityResourceMax
}

// GetAbilityResourceMaxOk returns a tuple with the AbilityResourceMax field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetAbilityResourceMaxOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityResourceMax, true
}

// SetAbilityResourceMax sets field value
func (o *HeroStartingStatsV2) SetAbilityResourceMax(v HeroStartingStatV2) {
	o.AbilityResourceMax = v
}

// GetAbilityResourceRegenPerSecond returns the AbilityResourceRegenPerSecond field value
func (o *HeroStartingStatsV2) GetAbilityResourceRegenPerSecond() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.AbilityResourceRegenPerSecond
}

// GetAbilityResourceRegenPerSecondOk returns a tuple with the AbilityResourceRegenPerSecond field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetAbilityResourceRegenPerSecondOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityResourceRegenPerSecond, true
}

// SetAbilityResourceRegenPerSecond sets field value
func (o *HeroStartingStatsV2) SetAbilityResourceRegenPerSecond(v HeroStartingStatV2) {
	o.AbilityResourceRegenPerSecond = v
}

// GetCritDamageReceivedScale returns the CritDamageReceivedScale field value
func (o *HeroStartingStatsV2) GetCritDamageReceivedScale() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.CritDamageReceivedScale
}

// GetCritDamageReceivedScaleOk returns a tuple with the CritDamageReceivedScale field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetCritDamageReceivedScaleOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CritDamageReceivedScale, true
}

// SetCritDamageReceivedScale sets field value
func (o *HeroStartingStatsV2) SetCritDamageReceivedScale(v HeroStartingStatV2) {
	o.CritDamageReceivedScale = v
}

// GetTechDuration returns the TechDuration field value
func (o *HeroStartingStatsV2) GetTechDuration() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.TechDuration
}

// GetTechDurationOk returns a tuple with the TechDuration field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetTechDurationOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TechDuration, true
}

// SetTechDuration sets field value
func (o *HeroStartingStatsV2) SetTechDuration(v HeroStartingStatV2) {
	o.TechDuration = v
}

// GetTechArmorDamageReduction returns the TechArmorDamageReduction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeroStartingStatsV2) GetTechArmorDamageReduction() HeroStartingStatV2 {
	if o == nil || IsNil(o.TechArmorDamageReduction.Get()) {
		var ret HeroStartingStatV2
		return ret
	}
	return *o.TechArmorDamageReduction.Get()
}

// GetTechArmorDamageReductionOk returns a tuple with the TechArmorDamageReduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeroStartingStatsV2) GetTechArmorDamageReductionOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.TechArmorDamageReduction.Get(), o.TechArmorDamageReduction.IsSet()
}

// HasTechArmorDamageReduction returns a boolean if a field has been set.
func (o *HeroStartingStatsV2) HasTechArmorDamageReduction() bool {
	if o != nil && o.TechArmorDamageReduction.IsSet() {
		return true
	}

	return false
}

// SetTechArmorDamageReduction gets a reference to the given NullableHeroStartingStatV2 and assigns it to the TechArmorDamageReduction field.
func (o *HeroStartingStatsV2) SetTechArmorDamageReduction(v HeroStartingStatV2) {
	o.TechArmorDamageReduction.Set(&v)
}
// SetTechArmorDamageReductionNil sets the value for TechArmorDamageReduction to be an explicit nil
func (o *HeroStartingStatsV2) SetTechArmorDamageReductionNil() {
	o.TechArmorDamageReduction.Set(nil)
}

// UnsetTechArmorDamageReduction ensures that no value is present for TechArmorDamageReduction, not even an explicit nil
func (o *HeroStartingStatsV2) UnsetTechArmorDamageReduction() {
	o.TechArmorDamageReduction.Unset()
}

// GetTechRange returns the TechRange field value
func (o *HeroStartingStatsV2) GetTechRange() HeroStartingStatV2 {
	if o == nil {
		var ret HeroStartingStatV2
		return ret
	}

	return o.TechRange
}

// GetTechRangeOk returns a tuple with the TechRange field value
// and a boolean to check if the value has been set.
func (o *HeroStartingStatsV2) GetTechRangeOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TechRange, true
}

// SetTechRange sets field value
func (o *HeroStartingStatsV2) SetTechRange(v HeroStartingStatV2) {
	o.TechRange = v
}

// GetBulletArmorDamageReduction returns the BulletArmorDamageReduction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HeroStartingStatsV2) GetBulletArmorDamageReduction() HeroStartingStatV2 {
	if o == nil || IsNil(o.BulletArmorDamageReduction.Get()) {
		var ret HeroStartingStatV2
		return ret
	}
	return *o.BulletArmorDamageReduction.Get()
}

// GetBulletArmorDamageReductionOk returns a tuple with the BulletArmorDamageReduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HeroStartingStatsV2) GetBulletArmorDamageReductionOk() (*HeroStartingStatV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.BulletArmorDamageReduction.Get(), o.BulletArmorDamageReduction.IsSet()
}

// HasBulletArmorDamageReduction returns a boolean if a field has been set.
func (o *HeroStartingStatsV2) HasBulletArmorDamageReduction() bool {
	if o != nil && o.BulletArmorDamageReduction.IsSet() {
		return true
	}

	return false
}

// SetBulletArmorDamageReduction gets a reference to the given NullableHeroStartingStatV2 and assigns it to the BulletArmorDamageReduction field.
func (o *HeroStartingStatsV2) SetBulletArmorDamageReduction(v HeroStartingStatV2) {
	o.BulletArmorDamageReduction.Set(&v)
}
// SetBulletArmorDamageReductionNil sets the value for BulletArmorDamageReduction to be an explicit nil
func (o *HeroStartingStatsV2) SetBulletArmorDamageReductionNil() {
	o.BulletArmorDamageReduction.Set(nil)
}

// UnsetBulletArmorDamageReduction ensures that no value is present for BulletArmorDamageReduction, not even an explicit nil
func (o *HeroStartingStatsV2) UnsetBulletArmorDamageReduction() {
	o.BulletArmorDamageReduction.Unset()
}

func (o HeroStartingStatsV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroStartingStatsV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_move_speed"] = o.MaxMoveSpeed
	toSerialize["sprint_speed"] = o.SprintSpeed
	toSerialize["crouch_speed"] = o.CrouchSpeed
	toSerialize["move_acceleration"] = o.MoveAcceleration
	toSerialize["light_melee_damage"] = o.LightMeleeDamage
	toSerialize["heavy_melee_damage"] = o.HeavyMeleeDamage
	toSerialize["max_health"] = o.MaxHealth
	toSerialize["weapon_power"] = o.WeaponPower
	toSerialize["reload_speed"] = o.ReloadSpeed
	toSerialize["weapon_power_scale"] = o.WeaponPowerScale
	toSerialize["proc_build_up_rate_scale"] = o.ProcBuildUpRateScale
	toSerialize["stamina"] = o.Stamina
	toSerialize["base_health_regen"] = o.BaseHealthRegen
	toSerialize["stamina_regen_per_second"] = o.StaminaRegenPerSecond
	toSerialize["ability_resource_max"] = o.AbilityResourceMax
	toSerialize["ability_resource_regen_per_second"] = o.AbilityResourceRegenPerSecond
	toSerialize["crit_damage_received_scale"] = o.CritDamageReceivedScale
	toSerialize["tech_duration"] = o.TechDuration
	if o.TechArmorDamageReduction.IsSet() {
		toSerialize["tech_armor_damage_reduction"] = o.TechArmorDamageReduction.Get()
	}
	toSerialize["tech_range"] = o.TechRange
	if o.BulletArmorDamageReduction.IsSet() {
		toSerialize["bullet_armor_damage_reduction"] = o.BulletArmorDamageReduction.Get()
	}
	return toSerialize, nil
}

func (o *HeroStartingStatsV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_move_speed",
		"sprint_speed",
		"crouch_speed",
		"move_acceleration",
		"light_melee_damage",
		"heavy_melee_damage",
		"max_health",
		"weapon_power",
		"reload_speed",
		"weapon_power_scale",
		"proc_build_up_rate_scale",
		"stamina",
		"base_health_regen",
		"stamina_regen_per_second",
		"ability_resource_max",
		"ability_resource_regen_per_second",
		"crit_damage_received_scale",
		"tech_duration",
		"tech_range",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeroStartingStatsV2 := _HeroStartingStatsV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeroStartingStatsV2)

	if err != nil {
		return err
	}

	*o = HeroStartingStatsV2(varHeroStartingStatsV2)

	return err
}

type NullableHeroStartingStatsV2 struct {
	value *HeroStartingStatsV2
	isSet bool
}

func (v NullableHeroStartingStatsV2) Get() *HeroStartingStatsV2 {
	return v.value
}

func (v *NullableHeroStartingStatsV2) Set(val *HeroStartingStatsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroStartingStatsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroStartingStatsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroStartingStatsV2(val *HeroStartingStatsV2) *NullableHeroStartingStatsV2 {
	return &NullableHeroStartingStatsV2{value: val, isSet: true}
}

func (v NullableHeroStartingStatsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroStartingStatsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


