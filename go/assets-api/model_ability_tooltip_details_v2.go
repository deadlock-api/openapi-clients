/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
)

// checks if the AbilityTooltipDetailsV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbilityTooltipDetailsV2{}

// AbilityTooltipDetailsV2 struct for AbilityTooltipDetailsV2
type AbilityTooltipDetailsV2 struct {
	InfoSections []AbilityTooltipDetailsInfoSectionV2 `json:"info_sections,omitempty"`
	AdditionalHeaderProperties []string `json:"additional_header_properties,omitempty"`
}

// NewAbilityTooltipDetailsV2 instantiates a new AbilityTooltipDetailsV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbilityTooltipDetailsV2() *AbilityTooltipDetailsV2 {
	this := AbilityTooltipDetailsV2{}
	return &this
}

// NewAbilityTooltipDetailsV2WithDefaults instantiates a new AbilityTooltipDetailsV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbilityTooltipDetailsV2WithDefaults() *AbilityTooltipDetailsV2 {
	this := AbilityTooltipDetailsV2{}
	return &this
}

// GetInfoSections returns the InfoSections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityTooltipDetailsV2) GetInfoSections() []AbilityTooltipDetailsInfoSectionV2 {
	if o == nil {
		var ret []AbilityTooltipDetailsInfoSectionV2
		return ret
	}
	return o.InfoSections
}

// GetInfoSectionsOk returns a tuple with the InfoSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityTooltipDetailsV2) GetInfoSectionsOk() ([]AbilityTooltipDetailsInfoSectionV2, bool) {
	if o == nil || IsNil(o.InfoSections) {
		return nil, false
	}
	return o.InfoSections, true
}

// HasInfoSections returns a boolean if a field has been set.
func (o *AbilityTooltipDetailsV2) HasInfoSections() bool {
	if o != nil && !IsNil(o.InfoSections) {
		return true
	}

	return false
}

// SetInfoSections gets a reference to the given []AbilityTooltipDetailsInfoSectionV2 and assigns it to the InfoSections field.
func (o *AbilityTooltipDetailsV2) SetInfoSections(v []AbilityTooltipDetailsInfoSectionV2) {
	o.InfoSections = v
}

// GetAdditionalHeaderProperties returns the AdditionalHeaderProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityTooltipDetailsV2) GetAdditionalHeaderProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AdditionalHeaderProperties
}

// GetAdditionalHeaderPropertiesOk returns a tuple with the AdditionalHeaderProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityTooltipDetailsV2) GetAdditionalHeaderPropertiesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalHeaderProperties) {
		return nil, false
	}
	return o.AdditionalHeaderProperties, true
}

// HasAdditionalHeaderProperties returns a boolean if a field has been set.
func (o *AbilityTooltipDetailsV2) HasAdditionalHeaderProperties() bool {
	if o != nil && !IsNil(o.AdditionalHeaderProperties) {
		return true
	}

	return false
}

// SetAdditionalHeaderProperties gets a reference to the given []string and assigns it to the AdditionalHeaderProperties field.
func (o *AbilityTooltipDetailsV2) SetAdditionalHeaderProperties(v []string) {
	o.AdditionalHeaderProperties = v
}

func (o AbilityTooltipDetailsV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbilityTooltipDetailsV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InfoSections != nil {
		toSerialize["info_sections"] = o.InfoSections
	}
	if o.AdditionalHeaderProperties != nil {
		toSerialize["additional_header_properties"] = o.AdditionalHeaderProperties
	}
	return toSerialize, nil
}

type NullableAbilityTooltipDetailsV2 struct {
	value *AbilityTooltipDetailsV2
	isSet bool
}

func (v NullableAbilityTooltipDetailsV2) Get() *AbilityTooltipDetailsV2 {
	return v.value
}

func (v *NullableAbilityTooltipDetailsV2) Set(val *AbilityTooltipDetailsV2) {
	v.value = val
	v.isSet = true
}

func (v NullableAbilityTooltipDetailsV2) IsSet() bool {
	return v.isSet
}

func (v *NullableAbilityTooltipDetailsV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbilityTooltipDetailsV2(val *AbilityTooltipDetailsV2) *NullableAbilityTooltipDetailsV2 {
	return &NullableAbilityTooltipDetailsV2{value: val, isSet: true}
}

func (v NullableAbilityTooltipDetailsV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbilityTooltipDetailsV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


