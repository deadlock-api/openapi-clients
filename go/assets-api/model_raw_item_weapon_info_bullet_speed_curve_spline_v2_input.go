/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawItemWeaponInfoBulletSpeedCurveSplineV2Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawItemWeaponInfoBulletSpeedCurveSplineV2Input{}

// RawItemWeaponInfoBulletSpeedCurveSplineV2Input struct for RawItemWeaponInfoBulletSpeedCurveSplineV2Input
type RawItemWeaponInfoBulletSpeedCurveSplineV2Input struct {
	MFlSlopeIncoming float32 `json:"m_flSlopeIncoming"`
	MFlSlopeOutgoing float32 `json:"m_flSlopeOutgoing"`
	X float32 `json:"x"`
	Y float32 `json:"y"`
}

type _RawItemWeaponInfoBulletSpeedCurveSplineV2Input RawItemWeaponInfoBulletSpeedCurveSplineV2Input

// NewRawItemWeaponInfoBulletSpeedCurveSplineV2Input instantiates a new RawItemWeaponInfoBulletSpeedCurveSplineV2Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawItemWeaponInfoBulletSpeedCurveSplineV2Input(mFlSlopeIncoming float32, mFlSlopeOutgoing float32, x float32, y float32) *RawItemWeaponInfoBulletSpeedCurveSplineV2Input {
	this := RawItemWeaponInfoBulletSpeedCurveSplineV2Input{}
	this.MFlSlopeIncoming = mFlSlopeIncoming
	this.MFlSlopeOutgoing = mFlSlopeOutgoing
	this.X = x
	this.Y = y
	return &this
}

// NewRawItemWeaponInfoBulletSpeedCurveSplineV2InputWithDefaults instantiates a new RawItemWeaponInfoBulletSpeedCurveSplineV2Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawItemWeaponInfoBulletSpeedCurveSplineV2InputWithDefaults() *RawItemWeaponInfoBulletSpeedCurveSplineV2Input {
	this := RawItemWeaponInfoBulletSpeedCurveSplineV2Input{}
	return &this
}

// GetMFlSlopeIncoming returns the MFlSlopeIncoming field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetMFlSlopeIncoming() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MFlSlopeIncoming
}

// GetMFlSlopeIncomingOk returns a tuple with the MFlSlopeIncoming field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetMFlSlopeIncomingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MFlSlopeIncoming, true
}

// SetMFlSlopeIncoming sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) SetMFlSlopeIncoming(v float32) {
	o.MFlSlopeIncoming = v
}

// GetMFlSlopeOutgoing returns the MFlSlopeOutgoing field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetMFlSlopeOutgoing() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MFlSlopeOutgoing
}

// GetMFlSlopeOutgoingOk returns a tuple with the MFlSlopeOutgoing field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetMFlSlopeOutgoingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MFlSlopeOutgoing, true
}

// SetMFlSlopeOutgoing sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) SetMFlSlopeOutgoing(v float32) {
	o.MFlSlopeOutgoing = v
}

// GetX returns the X field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetX() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetXOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) SetX(v float32) {
	o.X = v
}

// GetY returns the Y field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetY() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) GetYOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) SetY(v float32) {
	o.Y = v
}

func (o RawItemWeaponInfoBulletSpeedCurveSplineV2Input) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawItemWeaponInfoBulletSpeedCurveSplineV2Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["m_flSlopeIncoming"] = o.MFlSlopeIncoming
	toSerialize["m_flSlopeOutgoing"] = o.MFlSlopeOutgoing
	toSerialize["x"] = o.X
	toSerialize["y"] = o.Y
	return toSerialize, nil
}

func (o *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"m_flSlopeIncoming",
		"m_flSlopeOutgoing",
		"x",
		"y",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawItemWeaponInfoBulletSpeedCurveSplineV2Input := _RawItemWeaponInfoBulletSpeedCurveSplineV2Input{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawItemWeaponInfoBulletSpeedCurveSplineV2Input)

	if err != nil {
		return err
	}

	*o = RawItemWeaponInfoBulletSpeedCurveSplineV2Input(varRawItemWeaponInfoBulletSpeedCurveSplineV2Input)

	return err
}

type NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input struct {
	value *RawItemWeaponInfoBulletSpeedCurveSplineV2Input
	isSet bool
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) Get() *RawItemWeaponInfoBulletSpeedCurveSplineV2Input {
	return v.value
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) Set(val *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) {
	v.value = val
	v.isSet = true
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) IsSet() bool {
	return v.isSet
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input(val *RawItemWeaponInfoBulletSpeedCurveSplineV2Input) *NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input {
	return &NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input{value: val, isSet: true}
}

func (v NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawItemWeaponInfoBulletSpeedCurveSplineV2Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


