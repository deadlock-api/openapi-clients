/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HeroShopStatDisplayV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeroShopStatDisplayV2Output{}

// HeroShopStatDisplayV2Output struct for HeroShopStatDisplayV2Output
type HeroShopStatDisplayV2Output struct {
	SpiritStatsDisplay RawHeroShopSpiritStatsDisplayV2Output `json:"spirit_stats_display"`
	VitalityStatsDisplay RawHeroShopVitalityStatsDisplayV2Output `json:"vitality_stats_display"`
	WeaponStatsDisplay HeroShopWeaponStatsDisplayV2Output `json:"weapon_stats_display"`
}

type _HeroShopStatDisplayV2Output HeroShopStatDisplayV2Output

// NewHeroShopStatDisplayV2Output instantiates a new HeroShopStatDisplayV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeroShopStatDisplayV2Output(spiritStatsDisplay RawHeroShopSpiritStatsDisplayV2Output, vitalityStatsDisplay RawHeroShopVitalityStatsDisplayV2Output, weaponStatsDisplay HeroShopWeaponStatsDisplayV2Output) *HeroShopStatDisplayV2Output {
	this := HeroShopStatDisplayV2Output{}
	this.SpiritStatsDisplay = spiritStatsDisplay
	this.VitalityStatsDisplay = vitalityStatsDisplay
	this.WeaponStatsDisplay = weaponStatsDisplay
	return &this
}

// NewHeroShopStatDisplayV2OutputWithDefaults instantiates a new HeroShopStatDisplayV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeroShopStatDisplayV2OutputWithDefaults() *HeroShopStatDisplayV2Output {
	this := HeroShopStatDisplayV2Output{}
	return &this
}

// GetSpiritStatsDisplay returns the SpiritStatsDisplay field value
func (o *HeroShopStatDisplayV2Output) GetSpiritStatsDisplay() RawHeroShopSpiritStatsDisplayV2Output {
	if o == nil {
		var ret RawHeroShopSpiritStatsDisplayV2Output
		return ret
	}

	return o.SpiritStatsDisplay
}

// GetSpiritStatsDisplayOk returns a tuple with the SpiritStatsDisplay field value
// and a boolean to check if the value has been set.
func (o *HeroShopStatDisplayV2Output) GetSpiritStatsDisplayOk() (*RawHeroShopSpiritStatsDisplayV2Output, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpiritStatsDisplay, true
}

// SetSpiritStatsDisplay sets field value
func (o *HeroShopStatDisplayV2Output) SetSpiritStatsDisplay(v RawHeroShopSpiritStatsDisplayV2Output) {
	o.SpiritStatsDisplay = v
}

// GetVitalityStatsDisplay returns the VitalityStatsDisplay field value
func (o *HeroShopStatDisplayV2Output) GetVitalityStatsDisplay() RawHeroShopVitalityStatsDisplayV2Output {
	if o == nil {
		var ret RawHeroShopVitalityStatsDisplayV2Output
		return ret
	}

	return o.VitalityStatsDisplay
}

// GetVitalityStatsDisplayOk returns a tuple with the VitalityStatsDisplay field value
// and a boolean to check if the value has been set.
func (o *HeroShopStatDisplayV2Output) GetVitalityStatsDisplayOk() (*RawHeroShopVitalityStatsDisplayV2Output, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VitalityStatsDisplay, true
}

// SetVitalityStatsDisplay sets field value
func (o *HeroShopStatDisplayV2Output) SetVitalityStatsDisplay(v RawHeroShopVitalityStatsDisplayV2Output) {
	o.VitalityStatsDisplay = v
}

// GetWeaponStatsDisplay returns the WeaponStatsDisplay field value
func (o *HeroShopStatDisplayV2Output) GetWeaponStatsDisplay() HeroShopWeaponStatsDisplayV2Output {
	if o == nil {
		var ret HeroShopWeaponStatsDisplayV2Output
		return ret
	}

	return o.WeaponStatsDisplay
}

// GetWeaponStatsDisplayOk returns a tuple with the WeaponStatsDisplay field value
// and a boolean to check if the value has been set.
func (o *HeroShopStatDisplayV2Output) GetWeaponStatsDisplayOk() (*HeroShopWeaponStatsDisplayV2Output, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeaponStatsDisplay, true
}

// SetWeaponStatsDisplay sets field value
func (o *HeroShopStatDisplayV2Output) SetWeaponStatsDisplay(v HeroShopWeaponStatsDisplayV2Output) {
	o.WeaponStatsDisplay = v
}

func (o HeroShopStatDisplayV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeroShopStatDisplayV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["spirit_stats_display"] = o.SpiritStatsDisplay
	toSerialize["vitality_stats_display"] = o.VitalityStatsDisplay
	toSerialize["weapon_stats_display"] = o.WeaponStatsDisplay
	return toSerialize, nil
}

func (o *HeroShopStatDisplayV2Output) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"spirit_stats_display",
		"vitality_stats_display",
		"weapon_stats_display",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeroShopStatDisplayV2Output := _HeroShopStatDisplayV2Output{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHeroShopStatDisplayV2Output)

	if err != nil {
		return err
	}

	*o = HeroShopStatDisplayV2Output(varHeroShopStatDisplayV2Output)

	return err
}

type NullableHeroShopStatDisplayV2Output struct {
	value *HeroShopStatDisplayV2Output
	isSet bool
}

func (v NullableHeroShopStatDisplayV2Output) Get() *HeroShopStatDisplayV2Output {
	return v.value
}

func (v *NullableHeroShopStatDisplayV2Output) Set(val *HeroShopStatDisplayV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableHeroShopStatDisplayV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableHeroShopStatDisplayV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeroShopStatDisplayV2Output(val *HeroShopStatDisplayV2Output) *NullableHeroShopStatDisplayV2Output {
	return &NullableHeroShopStatDisplayV2Output{value: val, isSet: true}
}

func (v NullableHeroShopStatDisplayV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeroShopStatDisplayV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


