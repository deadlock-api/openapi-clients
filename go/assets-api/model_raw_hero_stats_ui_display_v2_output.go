/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawHeroStatsUIDisplayV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawHeroStatsUIDisplayV2Output{}

// RawHeroStatsUIDisplayV2Output struct for RawHeroStatsUIDisplayV2Output
type RawHeroStatsUIDisplayV2Output struct {
	Category string `json:"category"`
	StatType string `json:"stat_type"`
}

type _RawHeroStatsUIDisplayV2Output RawHeroStatsUIDisplayV2Output

// NewRawHeroStatsUIDisplayV2Output instantiates a new RawHeroStatsUIDisplayV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawHeroStatsUIDisplayV2Output(category string, statType string) *RawHeroStatsUIDisplayV2Output {
	this := RawHeroStatsUIDisplayV2Output{}
	this.Category = category
	this.StatType = statType
	return &this
}

// NewRawHeroStatsUIDisplayV2OutputWithDefaults instantiates a new RawHeroStatsUIDisplayV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawHeroStatsUIDisplayV2OutputWithDefaults() *RawHeroStatsUIDisplayV2Output {
	this := RawHeroStatsUIDisplayV2Output{}
	return &this
}

// GetCategory returns the Category field value
func (o *RawHeroStatsUIDisplayV2Output) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsUIDisplayV2Output) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *RawHeroStatsUIDisplayV2Output) SetCategory(v string) {
	o.Category = v
}

// GetStatType returns the StatType field value
func (o *RawHeroStatsUIDisplayV2Output) GetStatType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatType
}

// GetStatTypeOk returns a tuple with the StatType field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsUIDisplayV2Output) GetStatTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatType, true
}

// SetStatType sets field value
func (o *RawHeroStatsUIDisplayV2Output) SetStatType(v string) {
	o.StatType = v
}

func (o RawHeroStatsUIDisplayV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawHeroStatsUIDisplayV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["stat_type"] = o.StatType
	return toSerialize, nil
}

func (o *RawHeroStatsUIDisplayV2Output) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"stat_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawHeroStatsUIDisplayV2Output := _RawHeroStatsUIDisplayV2Output{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawHeroStatsUIDisplayV2Output)

	if err != nil {
		return err
	}

	*o = RawHeroStatsUIDisplayV2Output(varRawHeroStatsUIDisplayV2Output)

	return err
}

type NullableRawHeroStatsUIDisplayV2Output struct {
	value *RawHeroStatsUIDisplayV2Output
	isSet bool
}

func (v NullableRawHeroStatsUIDisplayV2Output) Get() *RawHeroStatsUIDisplayV2Output {
	return v.value
}

func (v *NullableRawHeroStatsUIDisplayV2Output) Set(val *RawHeroStatsUIDisplayV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableRawHeroStatsUIDisplayV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableRawHeroStatsUIDisplayV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawHeroStatsUIDisplayV2Output(val *RawHeroStatsUIDisplayV2Output) *NullableRawHeroStatsUIDisplayV2Output {
	return &NullableRawHeroStatsUIDisplayV2Output{value: val, isSet: true}
}

func (v NullableRawHeroStatsUIDisplayV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawHeroStatsUIDisplayV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


