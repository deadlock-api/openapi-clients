/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
)

// checks if the RawWeaponInfoHorizontalRecoilV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawWeaponInfoHorizontalRecoilV2Output{}

// RawWeaponInfoHorizontalRecoilV2Output struct for RawWeaponInfoHorizontalRecoilV2Output
type RawWeaponInfoHorizontalRecoilV2Output struct {
	Range NullableRange `json:"range,omitempty"`
	BurstExponent NullableFloat32 `json:"burst_exponent,omitempty"`
}

// NewRawWeaponInfoHorizontalRecoilV2Output instantiates a new RawWeaponInfoHorizontalRecoilV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawWeaponInfoHorizontalRecoilV2Output() *RawWeaponInfoHorizontalRecoilV2Output {
	this := RawWeaponInfoHorizontalRecoilV2Output{}
	return &this
}

// NewRawWeaponInfoHorizontalRecoilV2OutputWithDefaults instantiates a new RawWeaponInfoHorizontalRecoilV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawWeaponInfoHorizontalRecoilV2OutputWithDefaults() *RawWeaponInfoHorizontalRecoilV2Output {
	this := RawWeaponInfoHorizontalRecoilV2Output{}
	return &this
}

// GetRange returns the Range field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RawWeaponInfoHorizontalRecoilV2Output) GetRange() Range {
	if o == nil || IsNil(o.Range.Get()) {
		var ret Range
		return ret
	}
	return *o.Range.Get()
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RawWeaponInfoHorizontalRecoilV2Output) GetRangeOk() (*Range, bool) {
	if o == nil {
		return nil, false
	}
	return o.Range.Get(), o.Range.IsSet()
}

// HasRange returns a boolean if a field has been set.
func (o *RawWeaponInfoHorizontalRecoilV2Output) HasRange() bool {
	if o != nil && o.Range.IsSet() {
		return true
	}

	return false
}

// SetRange gets a reference to the given NullableRange and assigns it to the Range field.
func (o *RawWeaponInfoHorizontalRecoilV2Output) SetRange(v Range) {
	o.Range.Set(&v)
}
// SetRangeNil sets the value for Range to be an explicit nil
func (o *RawWeaponInfoHorizontalRecoilV2Output) SetRangeNil() {
	o.Range.Set(nil)
}

// UnsetRange ensures that no value is present for Range, not even an explicit nil
func (o *RawWeaponInfoHorizontalRecoilV2Output) UnsetRange() {
	o.Range.Unset()
}

// GetBurstExponent returns the BurstExponent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RawWeaponInfoHorizontalRecoilV2Output) GetBurstExponent() float32 {
	if o == nil || IsNil(o.BurstExponent.Get()) {
		var ret float32
		return ret
	}
	return *o.BurstExponent.Get()
}

// GetBurstExponentOk returns a tuple with the BurstExponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RawWeaponInfoHorizontalRecoilV2Output) GetBurstExponentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BurstExponent.Get(), o.BurstExponent.IsSet()
}

// HasBurstExponent returns a boolean if a field has been set.
func (o *RawWeaponInfoHorizontalRecoilV2Output) HasBurstExponent() bool {
	if o != nil && o.BurstExponent.IsSet() {
		return true
	}

	return false
}

// SetBurstExponent gets a reference to the given NullableFloat32 and assigns it to the BurstExponent field.
func (o *RawWeaponInfoHorizontalRecoilV2Output) SetBurstExponent(v float32) {
	o.BurstExponent.Set(&v)
}
// SetBurstExponentNil sets the value for BurstExponent to be an explicit nil
func (o *RawWeaponInfoHorizontalRecoilV2Output) SetBurstExponentNil() {
	o.BurstExponent.Set(nil)
}

// UnsetBurstExponent ensures that no value is present for BurstExponent, not even an explicit nil
func (o *RawWeaponInfoHorizontalRecoilV2Output) UnsetBurstExponent() {
	o.BurstExponent.Unset()
}

func (o RawWeaponInfoHorizontalRecoilV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawWeaponInfoHorizontalRecoilV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Range.IsSet() {
		toSerialize["range"] = o.Range.Get()
	}
	if o.BurstExponent.IsSet() {
		toSerialize["burst_exponent"] = o.BurstExponent.Get()
	}
	return toSerialize, nil
}

type NullableRawWeaponInfoHorizontalRecoilV2Output struct {
	value *RawWeaponInfoHorizontalRecoilV2Output
	isSet bool
}

func (v NullableRawWeaponInfoHorizontalRecoilV2Output) Get() *RawWeaponInfoHorizontalRecoilV2Output {
	return v.value
}

func (v *NullableRawWeaponInfoHorizontalRecoilV2Output) Set(val *RawWeaponInfoHorizontalRecoilV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableRawWeaponInfoHorizontalRecoilV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableRawWeaponInfoHorizontalRecoilV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawWeaponInfoHorizontalRecoilV2Output(val *RawWeaponInfoHorizontalRecoilV2Output) *NullableRawWeaponInfoHorizontalRecoilV2Output {
	return &NullableRawWeaponInfoHorizontalRecoilV2Output{value: val, isSet: true}
}

func (v NullableRawWeaponInfoHorizontalRecoilV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawWeaponInfoHorizontalRecoilV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


