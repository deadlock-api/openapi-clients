/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
)

// checks if the RawItemWeaponInfoV2Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawItemWeaponInfoV2Input{}

// RawItemWeaponInfoV2Input struct for RawItemWeaponInfoV2Input
type RawItemWeaponInfoV2Input struct {
	MBulletSpeedCurve NullableRawItemWeaponInfoBulletSpeedCurveV2Input `json:"m_BulletSpeedCurve,omitempty"`
}

// NewRawItemWeaponInfoV2Input instantiates a new RawItemWeaponInfoV2Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawItemWeaponInfoV2Input() *RawItemWeaponInfoV2Input {
	this := RawItemWeaponInfoV2Input{}
	return &this
}

// NewRawItemWeaponInfoV2InputWithDefaults instantiates a new RawItemWeaponInfoV2Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawItemWeaponInfoV2InputWithDefaults() *RawItemWeaponInfoV2Input {
	this := RawItemWeaponInfoV2Input{}
	return &this
}

// GetMBulletSpeedCurve returns the MBulletSpeedCurve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RawItemWeaponInfoV2Input) GetMBulletSpeedCurve() RawItemWeaponInfoBulletSpeedCurveV2Input {
	if o == nil || IsNil(o.MBulletSpeedCurve.Get()) {
		var ret RawItemWeaponInfoBulletSpeedCurveV2Input
		return ret
	}
	return *o.MBulletSpeedCurve.Get()
}

// GetMBulletSpeedCurveOk returns a tuple with the MBulletSpeedCurve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RawItemWeaponInfoV2Input) GetMBulletSpeedCurveOk() (*RawItemWeaponInfoBulletSpeedCurveV2Input, bool) {
	if o == nil {
		return nil, false
	}
	return o.MBulletSpeedCurve.Get(), o.MBulletSpeedCurve.IsSet()
}

// HasMBulletSpeedCurve returns a boolean if a field has been set.
func (o *RawItemWeaponInfoV2Input) HasMBulletSpeedCurve() bool {
	if o != nil && o.MBulletSpeedCurve.IsSet() {
		return true
	}

	return false
}

// SetMBulletSpeedCurve gets a reference to the given NullableRawItemWeaponInfoBulletSpeedCurveV2Input and assigns it to the MBulletSpeedCurve field.
func (o *RawItemWeaponInfoV2Input) SetMBulletSpeedCurve(v RawItemWeaponInfoBulletSpeedCurveV2Input) {
	o.MBulletSpeedCurve.Set(&v)
}
// SetMBulletSpeedCurveNil sets the value for MBulletSpeedCurve to be an explicit nil
func (o *RawItemWeaponInfoV2Input) SetMBulletSpeedCurveNil() {
	o.MBulletSpeedCurve.Set(nil)
}

// UnsetMBulletSpeedCurve ensures that no value is present for MBulletSpeedCurve, not even an explicit nil
func (o *RawItemWeaponInfoV2Input) UnsetMBulletSpeedCurve() {
	o.MBulletSpeedCurve.Unset()
}

func (o RawItemWeaponInfoV2Input) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawItemWeaponInfoV2Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MBulletSpeedCurve.IsSet() {
		toSerialize["m_BulletSpeedCurve"] = o.MBulletSpeedCurve.Get()
	}
	return toSerialize, nil
}

type NullableRawItemWeaponInfoV2Input struct {
	value *RawItemWeaponInfoV2Input
	isSet bool
}

func (v NullableRawItemWeaponInfoV2Input) Get() *RawItemWeaponInfoV2Input {
	return v.value
}

func (v *NullableRawItemWeaponInfoV2Input) Set(val *RawItemWeaponInfoV2Input) {
	v.value = val
	v.isSet = true
}

func (v NullableRawItemWeaponInfoV2Input) IsSet() bool {
	return v.isSet
}

func (v *NullableRawItemWeaponInfoV2Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawItemWeaponInfoV2Input(val *RawItemWeaponInfoV2Input) *NullableRawItemWeaponInfoV2Input {
	return &NullableRawItemWeaponInfoV2Input{value: val, isSet: true}
}

func (v NullableRawItemWeaponInfoV2Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawItemWeaponInfoV2Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


