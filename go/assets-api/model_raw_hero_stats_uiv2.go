/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawHeroStatsUIV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawHeroStatsUIV2{}

// RawHeroStatsUIV2 struct for RawHeroStatsUIV2
type RawHeroStatsUIV2 struct {
	WeaponStatDisplay string `json:"weapon_stat_display"`
	DisplayStats []RawHeroStatsUIDisplayV2 `json:"display_stats"`
}

type _RawHeroStatsUIV2 RawHeroStatsUIV2

// NewRawHeroStatsUIV2 instantiates a new RawHeroStatsUIV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawHeroStatsUIV2(weaponStatDisplay string, displayStats []RawHeroStatsUIDisplayV2) *RawHeroStatsUIV2 {
	this := RawHeroStatsUIV2{}
	this.WeaponStatDisplay = weaponStatDisplay
	this.DisplayStats = displayStats
	return &this
}

// NewRawHeroStatsUIV2WithDefaults instantiates a new RawHeroStatsUIV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawHeroStatsUIV2WithDefaults() *RawHeroStatsUIV2 {
	this := RawHeroStatsUIV2{}
	return &this
}

// GetWeaponStatDisplay returns the WeaponStatDisplay field value
func (o *RawHeroStatsUIV2) GetWeaponStatDisplay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WeaponStatDisplay
}

// GetWeaponStatDisplayOk returns a tuple with the WeaponStatDisplay field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsUIV2) GetWeaponStatDisplayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeaponStatDisplay, true
}

// SetWeaponStatDisplay sets field value
func (o *RawHeroStatsUIV2) SetWeaponStatDisplay(v string) {
	o.WeaponStatDisplay = v
}

// GetDisplayStats returns the DisplayStats field value
func (o *RawHeroStatsUIV2) GetDisplayStats() []RawHeroStatsUIDisplayV2 {
	if o == nil {
		var ret []RawHeroStatsUIDisplayV2
		return ret
	}

	return o.DisplayStats
}

// GetDisplayStatsOk returns a tuple with the DisplayStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsUIV2) GetDisplayStatsOk() ([]RawHeroStatsUIDisplayV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayStats, true
}

// SetDisplayStats sets field value
func (o *RawHeroStatsUIV2) SetDisplayStats(v []RawHeroStatsUIDisplayV2) {
	o.DisplayStats = v
}

func (o RawHeroStatsUIV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawHeroStatsUIV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["weapon_stat_display"] = o.WeaponStatDisplay
	toSerialize["display_stats"] = o.DisplayStats
	return toSerialize, nil
}

func (o *RawHeroStatsUIV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"weapon_stat_display",
		"display_stats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawHeroStatsUIV2 := _RawHeroStatsUIV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawHeroStatsUIV2)

	if err != nil {
		return err
	}

	*o = RawHeroStatsUIV2(varRawHeroStatsUIV2)

	return err
}

type NullableRawHeroStatsUIV2 struct {
	value *RawHeroStatsUIV2
	isSet bool
}

func (v NullableRawHeroStatsUIV2) Get() *RawHeroStatsUIV2 {
	return v.value
}

func (v *NullableRawHeroStatsUIV2) Set(val *RawHeroStatsUIV2) {
	v.value = val
	v.isSet = true
}

func (v NullableRawHeroStatsUIV2) IsSet() bool {
	return v.isSet
}

func (v *NullableRawHeroStatsUIV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawHeroStatsUIV2(val *RawHeroStatsUIV2) *NullableRawHeroStatsUIV2 {
	return &NullableRawHeroStatsUIV2{value: val, isSet: true}
}

func (v NullableRawHeroStatsUIV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawHeroStatsUIV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


