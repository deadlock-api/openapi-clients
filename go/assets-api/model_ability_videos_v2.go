/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
)

// checks if the AbilityVideosV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AbilityVideosV2{}

// AbilityVideosV2 struct for AbilityVideosV2
type AbilityVideosV2 struct {
	Webm NullableString `json:"webm,omitempty"`
	Mp4 NullableString `json:"mp4,omitempty"`
}

// NewAbilityVideosV2 instantiates a new AbilityVideosV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbilityVideosV2() *AbilityVideosV2 {
	this := AbilityVideosV2{}
	return &this
}

// NewAbilityVideosV2WithDefaults instantiates a new AbilityVideosV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbilityVideosV2WithDefaults() *AbilityVideosV2 {
	this := AbilityVideosV2{}
	return &this
}

// GetWebm returns the Webm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityVideosV2) GetWebm() string {
	if o == nil || IsNil(o.Webm.Get()) {
		var ret string
		return ret
	}
	return *o.Webm.Get()
}

// GetWebmOk returns a tuple with the Webm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityVideosV2) GetWebmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Webm.Get(), o.Webm.IsSet()
}

// HasWebm returns a boolean if a field has been set.
func (o *AbilityVideosV2) HasWebm() bool {
	if o != nil && o.Webm.IsSet() {
		return true
	}

	return false
}

// SetWebm gets a reference to the given NullableString and assigns it to the Webm field.
func (o *AbilityVideosV2) SetWebm(v string) {
	o.Webm.Set(&v)
}
// SetWebmNil sets the value for Webm to be an explicit nil
func (o *AbilityVideosV2) SetWebmNil() {
	o.Webm.Set(nil)
}

// UnsetWebm ensures that no value is present for Webm, not even an explicit nil
func (o *AbilityVideosV2) UnsetWebm() {
	o.Webm.Unset()
}

// GetMp4 returns the Mp4 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AbilityVideosV2) GetMp4() string {
	if o == nil || IsNil(o.Mp4.Get()) {
		var ret string
		return ret
	}
	return *o.Mp4.Get()
}

// GetMp4Ok returns a tuple with the Mp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AbilityVideosV2) GetMp4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mp4.Get(), o.Mp4.IsSet()
}

// HasMp4 returns a boolean if a field has been set.
func (o *AbilityVideosV2) HasMp4() bool {
	if o != nil && o.Mp4.IsSet() {
		return true
	}

	return false
}

// SetMp4 gets a reference to the given NullableString and assigns it to the Mp4 field.
func (o *AbilityVideosV2) SetMp4(v string) {
	o.Mp4.Set(&v)
}
// SetMp4Nil sets the value for Mp4 to be an explicit nil
func (o *AbilityVideosV2) SetMp4Nil() {
	o.Mp4.Set(nil)
}

// UnsetMp4 ensures that no value is present for Mp4, not even an explicit nil
func (o *AbilityVideosV2) UnsetMp4() {
	o.Mp4.Unset()
}

func (o AbilityVideosV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AbilityVideosV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Webm.IsSet() {
		toSerialize["webm"] = o.Webm.Get()
	}
	if o.Mp4.IsSet() {
		toSerialize["mp4"] = o.Mp4.Get()
	}
	return toSerialize, nil
}

type NullableAbilityVideosV2 struct {
	value *AbilityVideosV2
	isSet bool
}

func (v NullableAbilityVideosV2) Get() *AbilityVideosV2 {
	return v.value
}

func (v *NullableAbilityVideosV2) Set(val *AbilityVideosV2) {
	v.value = val
	v.isSet = true
}

func (v NullableAbilityVideosV2) IsSet() bool {
	return v.isSet
}

func (v *NullableAbilityVideosV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbilityVideosV2(val *AbilityVideosV2) *NullableAbilityVideosV2 {
	return &NullableAbilityVideosV2{value: val, isSet: true}
}

func (v NullableAbilityVideosV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbilityVideosV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


