/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"fmt"
)

// DeadlockAssetsApiRoutesRawValidClientVersions the model 'DeadlockAssetsApiRoutesRawValidClientVersions'
type DeadlockAssetsApiRoutesRawValidClientVersions int32

// List of deadlock_assets_api__routes__raw__ValidClientVersions
const (
	_5959 DeadlockAssetsApiRoutesRawValidClientVersions = 5959
	_5945 DeadlockAssetsApiRoutesRawValidClientVersions = 5945
	_5920 DeadlockAssetsApiRoutesRawValidClientVersions = 5920
	_5902 DeadlockAssetsApiRoutesRawValidClientVersions = 5902
	_5885 DeadlockAssetsApiRoutesRawValidClientVersions = 5885
	_5878 DeadlockAssetsApiRoutesRawValidClientVersions = 5878
	_5869 DeadlockAssetsApiRoutesRawValidClientVersions = 5869
	_5852 DeadlockAssetsApiRoutesRawValidClientVersions = 5852
	_5831 DeadlockAssetsApiRoutesRawValidClientVersions = 5831
	_5826 DeadlockAssetsApiRoutesRawValidClientVersions = 5826
	_5818 DeadlockAssetsApiRoutesRawValidClientVersions = 5818
	_5789 DeadlockAssetsApiRoutesRawValidClientVersions = 5789
	_5748 DeadlockAssetsApiRoutesRawValidClientVersions = 5748
	_5723 DeadlockAssetsApiRoutesRawValidClientVersions = 5723
	_5712 DeadlockAssetsApiRoutesRawValidClientVersions = 5712
	_5710 DeadlockAssetsApiRoutesRawValidClientVersions = 5710
	_5690 DeadlockAssetsApiRoutesRawValidClientVersions = 5690
	_5675 DeadlockAssetsApiRoutesRawValidClientVersions = 5675
	_5668 DeadlockAssetsApiRoutesRawValidClientVersions = 5668
	_5664 DeadlockAssetsApiRoutesRawValidClientVersions = 5664
	_5658 DeadlockAssetsApiRoutesRawValidClientVersions = 5658
	_5650 DeadlockAssetsApiRoutesRawValidClientVersions = 5650
	_5636 DeadlockAssetsApiRoutesRawValidClientVersions = 5636
	_5624 DeadlockAssetsApiRoutesRawValidClientVersions = 5624
	_5615 DeadlockAssetsApiRoutesRawValidClientVersions = 5615
	_5602 DeadlockAssetsApiRoutesRawValidClientVersions = 5602
	_5583 DeadlockAssetsApiRoutesRawValidClientVersions = 5583
	_5554 DeadlockAssetsApiRoutesRawValidClientVersions = 5554
	_5538 DeadlockAssetsApiRoutesRawValidClientVersions = 5538
	_5533 DeadlockAssetsApiRoutesRawValidClientVersions = 5533
	_5529 DeadlockAssetsApiRoutesRawValidClientVersions = 5529
	_5527 DeadlockAssetsApiRoutesRawValidClientVersions = 5527
)

// All allowed values of DeadlockAssetsApiRoutesRawValidClientVersions enum
var AllowedDeadlockAssetsApiRoutesRawValidClientVersionsEnumValues = []DeadlockAssetsApiRoutesRawValidClientVersions{
	5959,
	5945,
	5920,
	5902,
	5885,
	5878,
	5869,
	5852,
	5831,
	5826,
	5818,
	5789,
	5748,
	5723,
	5712,
	5710,
	5690,
	5675,
	5668,
	5664,
	5658,
	5650,
	5636,
	5624,
	5615,
	5602,
	5583,
	5554,
	5538,
	5533,
	5529,
	5527,
}

func (v *DeadlockAssetsApiRoutesRawValidClientVersions) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeadlockAssetsApiRoutesRawValidClientVersions(value)
	for _, existing := range AllowedDeadlockAssetsApiRoutesRawValidClientVersionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeadlockAssetsApiRoutesRawValidClientVersions", value)
}

// NewDeadlockAssetsApiRoutesRawValidClientVersionsFromValue returns a pointer to a valid DeadlockAssetsApiRoutesRawValidClientVersions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeadlockAssetsApiRoutesRawValidClientVersionsFromValue(v int32) (*DeadlockAssetsApiRoutesRawValidClientVersions, error) {
	ev := DeadlockAssetsApiRoutesRawValidClientVersions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeadlockAssetsApiRoutesRawValidClientVersions: valid values are %v", v, AllowedDeadlockAssetsApiRoutesRawValidClientVersionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeadlockAssetsApiRoutesRawValidClientVersions) IsValid() bool {
	for _, existing := range AllowedDeadlockAssetsApiRoutesRawValidClientVersionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to deadlock_assets_api__routes__raw__ValidClientVersions value
func (v DeadlockAssetsApiRoutesRawValidClientVersions) Ptr() *DeadlockAssetsApiRoutesRawValidClientVersions {
	return &v
}

type NullableDeadlockAssetsApiRoutesRawValidClientVersions struct {
	value *DeadlockAssetsApiRoutesRawValidClientVersions
	isSet bool
}

func (v NullableDeadlockAssetsApiRoutesRawValidClientVersions) Get() *DeadlockAssetsApiRoutesRawValidClientVersions {
	return v.value
}

func (v *NullableDeadlockAssetsApiRoutesRawValidClientVersions) Set(val *DeadlockAssetsApiRoutesRawValidClientVersions) {
	v.value = val
	v.isSet = true
}

func (v NullableDeadlockAssetsApiRoutesRawValidClientVersions) IsSet() bool {
	return v.isSet
}

func (v *NullableDeadlockAssetsApiRoutesRawValidClientVersions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeadlockAssetsApiRoutesRawValidClientVersions(val *DeadlockAssetsApiRoutesRawValidClientVersions) *NullableDeadlockAssetsApiRoutesRawValidClientVersions {
	return &NullableDeadlockAssetsApiRoutesRawValidClientVersions{value: val, isSet: true}
}

func (v NullableDeadlockAssetsApiRoutesRawValidClientVersions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeadlockAssetsApiRoutesRawValidClientVersions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

