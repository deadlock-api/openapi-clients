/*
Assets - Deadlock API

Testing ItemsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package assets-deadlock-api-client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_assets-deadlock-api-client_ItemsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ItemsAPIService GetItemV2ItemsIdOrClassNameGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var idOrClassName string

		resp, httpRes, err := apiClient.ItemsAPI.GetItemV2ItemsIdOrClassNameGet(context.Background(), idOrClassName).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ItemsAPIService GetItemsByHeroIdV2ItemsByHeroIdIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int32

		resp, httpRes, err := apiClient.ItemsAPI.GetItemsByHeroIdV2ItemsByHeroIdIdGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ItemsAPIService GetItemsBySlotTypeV2ItemsBySlotTypeSlotTypeGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var slotType openapiclient.ItemSlotTypeV2

		resp, httpRes, err := apiClient.ItemsAPI.GetItemsBySlotTypeV2ItemsBySlotTypeSlotTypeGet(context.Background(), slotType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ItemsAPIService GetItemsByTypeV2ItemsByTypeTypeGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var type_ openapiclient.ItemTypeV2

		resp, httpRes, err := apiClient.ItemsAPI.GetItemsByTypeV2ItemsByTypeTypeGet(context.Background(), type_).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ItemsAPIService GetItemsV2ItemsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ItemsAPI.GetItemsV2ItemsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
