/*
Assets - Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_ 

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package assets-deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RawHeroStatsDisplayV2Output type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RawHeroStatsDisplayV2Output{}

// RawHeroStatsDisplayV2Output struct for RawHeroStatsDisplayV2Output
type RawHeroStatsDisplayV2Output struct {
	HealthHeaderStats []string `json:"health_header_stats"`
	HealthStats []string `json:"health_stats"`
	MagicHeaderStats []string `json:"magic_header_stats"`
	MagicStats []string `json:"magic_stats"`
	WeaponHeaderStats []string `json:"weapon_header_stats"`
	WeaponStats []string `json:"weapon_stats"`
}

type _RawHeroStatsDisplayV2Output RawHeroStatsDisplayV2Output

// NewRawHeroStatsDisplayV2Output instantiates a new RawHeroStatsDisplayV2Output object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawHeroStatsDisplayV2Output(healthHeaderStats []string, healthStats []string, magicHeaderStats []string, magicStats []string, weaponHeaderStats []string, weaponStats []string) *RawHeroStatsDisplayV2Output {
	this := RawHeroStatsDisplayV2Output{}
	this.HealthHeaderStats = healthHeaderStats
	this.HealthStats = healthStats
	this.MagicHeaderStats = magicHeaderStats
	this.MagicStats = magicStats
	this.WeaponHeaderStats = weaponHeaderStats
	this.WeaponStats = weaponStats
	return &this
}

// NewRawHeroStatsDisplayV2OutputWithDefaults instantiates a new RawHeroStatsDisplayV2Output object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawHeroStatsDisplayV2OutputWithDefaults() *RawHeroStatsDisplayV2Output {
	this := RawHeroStatsDisplayV2Output{}
	return &this
}

// GetHealthHeaderStats returns the HealthHeaderStats field value
func (o *RawHeroStatsDisplayV2Output) GetHealthHeaderStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HealthHeaderStats
}

// GetHealthHeaderStatsOk returns a tuple with the HealthHeaderStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetHealthHeaderStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthHeaderStats, true
}

// SetHealthHeaderStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetHealthHeaderStats(v []string) {
	o.HealthHeaderStats = v
}

// GetHealthStats returns the HealthStats field value
func (o *RawHeroStatsDisplayV2Output) GetHealthStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.HealthStats
}

// GetHealthStatsOk returns a tuple with the HealthStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetHealthStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HealthStats, true
}

// SetHealthStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetHealthStats(v []string) {
	o.HealthStats = v
}

// GetMagicHeaderStats returns the MagicHeaderStats field value
func (o *RawHeroStatsDisplayV2Output) GetMagicHeaderStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MagicHeaderStats
}

// GetMagicHeaderStatsOk returns a tuple with the MagicHeaderStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetMagicHeaderStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MagicHeaderStats, true
}

// SetMagicHeaderStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetMagicHeaderStats(v []string) {
	o.MagicHeaderStats = v
}

// GetMagicStats returns the MagicStats field value
func (o *RawHeroStatsDisplayV2Output) GetMagicStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MagicStats
}

// GetMagicStatsOk returns a tuple with the MagicStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetMagicStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MagicStats, true
}

// SetMagicStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetMagicStats(v []string) {
	o.MagicStats = v
}

// GetWeaponHeaderStats returns the WeaponHeaderStats field value
func (o *RawHeroStatsDisplayV2Output) GetWeaponHeaderStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WeaponHeaderStats
}

// GetWeaponHeaderStatsOk returns a tuple with the WeaponHeaderStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetWeaponHeaderStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeaponHeaderStats, true
}

// SetWeaponHeaderStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetWeaponHeaderStats(v []string) {
	o.WeaponHeaderStats = v
}

// GetWeaponStats returns the WeaponStats field value
func (o *RawHeroStatsDisplayV2Output) GetWeaponStats() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WeaponStats
}

// GetWeaponStatsOk returns a tuple with the WeaponStats field value
// and a boolean to check if the value has been set.
func (o *RawHeroStatsDisplayV2Output) GetWeaponStatsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeaponStats, true
}

// SetWeaponStats sets field value
func (o *RawHeroStatsDisplayV2Output) SetWeaponStats(v []string) {
	o.WeaponStats = v
}

func (o RawHeroStatsDisplayV2Output) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RawHeroStatsDisplayV2Output) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["health_header_stats"] = o.HealthHeaderStats
	toSerialize["health_stats"] = o.HealthStats
	toSerialize["magic_header_stats"] = o.MagicHeaderStats
	toSerialize["magic_stats"] = o.MagicStats
	toSerialize["weapon_header_stats"] = o.WeaponHeaderStats
	toSerialize["weapon_stats"] = o.WeaponStats
	return toSerialize, nil
}

func (o *RawHeroStatsDisplayV2Output) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"health_header_stats",
		"health_stats",
		"magic_header_stats",
		"magic_stats",
		"weapon_header_stats",
		"weapon_stats",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRawHeroStatsDisplayV2Output := _RawHeroStatsDisplayV2Output{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRawHeroStatsDisplayV2Output)

	if err != nil {
		return err
	}

	*o = RawHeroStatsDisplayV2Output(varRawHeroStatsDisplayV2Output)

	return err
}

type NullableRawHeroStatsDisplayV2Output struct {
	value *RawHeroStatsDisplayV2Output
	isSet bool
}

func (v NullableRawHeroStatsDisplayV2Output) Get() *RawHeroStatsDisplayV2Output {
	return v.value
}

func (v *NullableRawHeroStatsDisplayV2Output) Set(val *RawHeroStatsDisplayV2Output) {
	v.value = val
	v.isSet = true
}

func (v NullableRawHeroStatsDisplayV2Output) IsSet() bool {
	return v.isSet
}

func (v *NullableRawHeroStatsDisplayV2Output) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawHeroStatsDisplayV2Output(val *RawHeroStatsDisplayV2Output) *NullableRawHeroStatsDisplayV2Output {
	return &NullableRawHeroStatsDisplayV2Output{value: val, isSet: true}
}

func (v NullableRawHeroStatsDisplayV2Output) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawHeroStatsDisplayV2Output) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


