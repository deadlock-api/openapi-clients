/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BuildHero type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildHero{}

// BuildHero struct for BuildHero
type BuildHero struct {
	AuthorAccountId int32 `json:"author_account_id"`
	Description NullableString `json:"description,omitempty"`
	Details BuildHeroDetails `json:"details"`
	DevelopmentBuild NullableBool `json:"development_build,omitempty"`
	HeroBuildId int32 `json:"hero_build_id"`
	// See more: <https://assets.deadlock-api.com/v2/heroes>
	HeroId int32 `json:"hero_id"`
	Language int32 `json:"language"`
	LastUpdatedTimestamp NullableInt64 `json:"last_updated_timestamp,omitempty"`
	Name string `json:"name"`
	OriginBuildId int32 `json:"origin_build_id"`
	PublishTimestamp NullableInt64 `json:"publish_timestamp,omitempty"`
	Tags []int32 `json:"tags,omitempty"`
	Version int32 `json:"version"`
}

type _BuildHero BuildHero

// NewBuildHero instantiates a new BuildHero object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildHero(authorAccountId int32, details BuildHeroDetails, heroBuildId int32, heroId int32, language int32, name string, originBuildId int32, version int32) *BuildHero {
	this := BuildHero{}
	this.AuthorAccountId = authorAccountId
	this.Details = details
	this.HeroBuildId = heroBuildId
	this.HeroId = heroId
	this.Language = language
	this.Name = name
	this.OriginBuildId = originBuildId
	this.Version = version
	return &this
}

// NewBuildHeroWithDefaults instantiates a new BuildHero object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildHeroWithDefaults() *BuildHero {
	this := BuildHero{}
	return &this
}

// GetAuthorAccountId returns the AuthorAccountId field value
func (o *BuildHero) GetAuthorAccountId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AuthorAccountId
}

// GetAuthorAccountIdOk returns a tuple with the AuthorAccountId field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetAuthorAccountIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorAccountId, true
}

// SetAuthorAccountId sets field value
func (o *BuildHero) SetAuthorAccountId(v int32) {
	o.AuthorAccountId = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildHero) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildHero) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BuildHero) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BuildHero) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BuildHero) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BuildHero) UnsetDescription() {
	o.Description.Unset()
}

// GetDetails returns the Details field value
func (o *BuildHero) GetDetails() BuildHeroDetails {
	if o == nil {
		var ret BuildHeroDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetDetailsOk() (*BuildHeroDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *BuildHero) SetDetails(v BuildHeroDetails) {
	o.Details = v
}

// GetDevelopmentBuild returns the DevelopmentBuild field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildHero) GetDevelopmentBuild() bool {
	if o == nil || IsNil(o.DevelopmentBuild.Get()) {
		var ret bool
		return ret
	}
	return *o.DevelopmentBuild.Get()
}

// GetDevelopmentBuildOk returns a tuple with the DevelopmentBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildHero) GetDevelopmentBuildOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DevelopmentBuild.Get(), o.DevelopmentBuild.IsSet()
}

// HasDevelopmentBuild returns a boolean if a field has been set.
func (o *BuildHero) HasDevelopmentBuild() bool {
	if o != nil && o.DevelopmentBuild.IsSet() {
		return true
	}

	return false
}

// SetDevelopmentBuild gets a reference to the given NullableBool and assigns it to the DevelopmentBuild field.
func (o *BuildHero) SetDevelopmentBuild(v bool) {
	o.DevelopmentBuild.Set(&v)
}
// SetDevelopmentBuildNil sets the value for DevelopmentBuild to be an explicit nil
func (o *BuildHero) SetDevelopmentBuildNil() {
	o.DevelopmentBuild.Set(nil)
}

// UnsetDevelopmentBuild ensures that no value is present for DevelopmentBuild, not even an explicit nil
func (o *BuildHero) UnsetDevelopmentBuild() {
	o.DevelopmentBuild.Unset()
}

// GetHeroBuildId returns the HeroBuildId field value
func (o *BuildHero) GetHeroBuildId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HeroBuildId
}

// GetHeroBuildIdOk returns a tuple with the HeroBuildId field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetHeroBuildIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeroBuildId, true
}

// SetHeroBuildId sets field value
func (o *BuildHero) SetHeroBuildId(v int32) {
	o.HeroBuildId = v
}

// GetHeroId returns the HeroId field value
func (o *BuildHero) GetHeroId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HeroId
}

// GetHeroIdOk returns a tuple with the HeroId field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetHeroIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeroId, true
}

// SetHeroId sets field value
func (o *BuildHero) SetHeroId(v int32) {
	o.HeroId = v
}

// GetLanguage returns the Language field value
func (o *BuildHero) GetLanguage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetLanguageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *BuildHero) SetLanguage(v int32) {
	o.Language = v
}

// GetLastUpdatedTimestamp returns the LastUpdatedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildHero) GetLastUpdatedTimestamp() int64 {
	if o == nil || IsNil(o.LastUpdatedTimestamp.Get()) {
		var ret int64
		return ret
	}
	return *o.LastUpdatedTimestamp.Get()
}

// GetLastUpdatedTimestampOk returns a tuple with the LastUpdatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildHero) GetLastUpdatedTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdatedTimestamp.Get(), o.LastUpdatedTimestamp.IsSet()
}

// HasLastUpdatedTimestamp returns a boolean if a field has been set.
func (o *BuildHero) HasLastUpdatedTimestamp() bool {
	if o != nil && o.LastUpdatedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetLastUpdatedTimestamp gets a reference to the given NullableInt64 and assigns it to the LastUpdatedTimestamp field.
func (o *BuildHero) SetLastUpdatedTimestamp(v int64) {
	o.LastUpdatedTimestamp.Set(&v)
}
// SetLastUpdatedTimestampNil sets the value for LastUpdatedTimestamp to be an explicit nil
func (o *BuildHero) SetLastUpdatedTimestampNil() {
	o.LastUpdatedTimestamp.Set(nil)
}

// UnsetLastUpdatedTimestamp ensures that no value is present for LastUpdatedTimestamp, not even an explicit nil
func (o *BuildHero) UnsetLastUpdatedTimestamp() {
	o.LastUpdatedTimestamp.Unset()
}

// GetName returns the Name field value
func (o *BuildHero) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BuildHero) SetName(v string) {
	o.Name = v
}

// GetOriginBuildId returns the OriginBuildId field value
func (o *BuildHero) GetOriginBuildId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OriginBuildId
}

// GetOriginBuildIdOk returns a tuple with the OriginBuildId field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetOriginBuildIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginBuildId, true
}

// SetOriginBuildId sets field value
func (o *BuildHero) SetOriginBuildId(v int32) {
	o.OriginBuildId = v
}

// GetPublishTimestamp returns the PublishTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildHero) GetPublishTimestamp() int64 {
	if o == nil || IsNil(o.PublishTimestamp.Get()) {
		var ret int64
		return ret
	}
	return *o.PublishTimestamp.Get()
}

// GetPublishTimestampOk returns a tuple with the PublishTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildHero) GetPublishTimestampOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublishTimestamp.Get(), o.PublishTimestamp.IsSet()
}

// HasPublishTimestamp returns a boolean if a field has been set.
func (o *BuildHero) HasPublishTimestamp() bool {
	if o != nil && o.PublishTimestamp.IsSet() {
		return true
	}

	return false
}

// SetPublishTimestamp gets a reference to the given NullableInt64 and assigns it to the PublishTimestamp field.
func (o *BuildHero) SetPublishTimestamp(v int64) {
	o.PublishTimestamp.Set(&v)
}
// SetPublishTimestampNil sets the value for PublishTimestamp to be an explicit nil
func (o *BuildHero) SetPublishTimestampNil() {
	o.PublishTimestamp.Set(nil)
}

// UnsetPublishTimestamp ensures that no value is present for PublishTimestamp, not even an explicit nil
func (o *BuildHero) UnsetPublishTimestamp() {
	o.PublishTimestamp.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BuildHero) GetTags() []int32 {
	if o == nil || IsNil(o.Tags) {
		var ret []int32
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildHero) GetTagsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BuildHero) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []int32 and assigns it to the Tags field.
func (o *BuildHero) SetTags(v []int32) {
	o.Tags = v
}

// GetVersion returns the Version field value
func (o *BuildHero) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *BuildHero) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *BuildHero) SetVersion(v int32) {
	o.Version = v
}

func (o BuildHero) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildHero) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["author_account_id"] = o.AuthorAccountId
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["details"] = o.Details
	if o.DevelopmentBuild.IsSet() {
		toSerialize["development_build"] = o.DevelopmentBuild.Get()
	}
	toSerialize["hero_build_id"] = o.HeroBuildId
	toSerialize["hero_id"] = o.HeroId
	toSerialize["language"] = o.Language
	if o.LastUpdatedTimestamp.IsSet() {
		toSerialize["last_updated_timestamp"] = o.LastUpdatedTimestamp.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["origin_build_id"] = o.OriginBuildId
	if o.PublishTimestamp.IsSet() {
		toSerialize["publish_timestamp"] = o.PublishTimestamp.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *BuildHero) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"author_account_id",
		"details",
		"hero_build_id",
		"hero_id",
		"language",
		"name",
		"origin_build_id",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBuildHero := _BuildHero{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBuildHero)

	if err != nil {
		return err
	}

	*o = BuildHero(varBuildHero)

	return err
}

type NullableBuildHero struct {
	value *BuildHero
	isSet bool
}

func (v NullableBuildHero) Get() *BuildHero {
	return v.value
}

func (v *NullableBuildHero) Set(val *BuildHero) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildHero) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildHero) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildHero(val *BuildHero) *NullableBuildHero {
	return &NullableBuildHero{value: val, isSet: true}
}

func (v NullableBuildHero) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildHero) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


