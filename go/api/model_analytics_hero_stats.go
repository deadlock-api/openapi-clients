/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AnalyticsHeroStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsHeroStats{}

// AnalyticsHeroStats struct for AnalyticsHeroStats
type AnalyticsHeroStats struct {
	Bucket NullableInt32 `json:"bucket,omitempty"`
	// See more: <https://assets.deadlock-api.com/v2/heroes>
	HeroId int32 `json:"hero_id"`
	Losses int64 `json:"losses"`
	Matches int64 `json:"matches"`
	MatchesPerBucket int64 `json:"matches_per_bucket"`
	Players int64 `json:"players"`
	TotalAssists int64 `json:"total_assists"`
	TotalBossDamage int64 `json:"total_boss_damage"`
	TotalCreepDamage int64 `json:"total_creep_damage"`
	TotalDeaths int64 `json:"total_deaths"`
	TotalDenies int64 `json:"total_denies"`
	TotalKills int64 `json:"total_kills"`
	TotalLastHits int64 `json:"total_last_hits"`
	TotalMaxHealth int64 `json:"total_max_health"`
	TotalNetWorth int64 `json:"total_net_worth"`
	TotalNeutralDamage int64 `json:"total_neutral_damage"`
	TotalPlayerDamage int64 `json:"total_player_damage"`
	TotalPlayerDamageTaken int64 `json:"total_player_damage_taken"`
	TotalShotsHit int64 `json:"total_shots_hit"`
	TotalShotsMissed int64 `json:"total_shots_missed"`
	Wins int64 `json:"wins"`
}

type _AnalyticsHeroStats AnalyticsHeroStats

// NewAnalyticsHeroStats instantiates a new AnalyticsHeroStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsHeroStats(heroId int32, losses int64, matches int64, matchesPerBucket int64, players int64, totalAssists int64, totalBossDamage int64, totalCreepDamage int64, totalDeaths int64, totalDenies int64, totalKills int64, totalLastHits int64, totalMaxHealth int64, totalNetWorth int64, totalNeutralDamage int64, totalPlayerDamage int64, totalPlayerDamageTaken int64, totalShotsHit int64, totalShotsMissed int64, wins int64) *AnalyticsHeroStats {
	this := AnalyticsHeroStats{}
	this.HeroId = heroId
	this.Losses = losses
	this.Matches = matches
	this.MatchesPerBucket = matchesPerBucket
	this.Players = players
	this.TotalAssists = totalAssists
	this.TotalBossDamage = totalBossDamage
	this.TotalCreepDamage = totalCreepDamage
	this.TotalDeaths = totalDeaths
	this.TotalDenies = totalDenies
	this.TotalKills = totalKills
	this.TotalLastHits = totalLastHits
	this.TotalMaxHealth = totalMaxHealth
	this.TotalNetWorth = totalNetWorth
	this.TotalNeutralDamage = totalNeutralDamage
	this.TotalPlayerDamage = totalPlayerDamage
	this.TotalPlayerDamageTaken = totalPlayerDamageTaken
	this.TotalShotsHit = totalShotsHit
	this.TotalShotsMissed = totalShotsMissed
	this.Wins = wins
	return &this
}

// NewAnalyticsHeroStatsWithDefaults instantiates a new AnalyticsHeroStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsHeroStatsWithDefaults() *AnalyticsHeroStats {
	this := AnalyticsHeroStats{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AnalyticsHeroStats) GetBucket() int32 {
	if o == nil || IsNil(o.Bucket.Get()) {
		var ret int32
		return ret
	}
	return *o.Bucket.Get()
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AnalyticsHeroStats) GetBucketOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bucket.Get(), o.Bucket.IsSet()
}

// HasBucket returns a boolean if a field has been set.
func (o *AnalyticsHeroStats) HasBucket() bool {
	if o != nil && o.Bucket.IsSet() {
		return true
	}

	return false
}

// SetBucket gets a reference to the given NullableInt32 and assigns it to the Bucket field.
func (o *AnalyticsHeroStats) SetBucket(v int32) {
	o.Bucket.Set(&v)
}
// SetBucketNil sets the value for Bucket to be an explicit nil
func (o *AnalyticsHeroStats) SetBucketNil() {
	o.Bucket.Set(nil)
}

// UnsetBucket ensures that no value is present for Bucket, not even an explicit nil
func (o *AnalyticsHeroStats) UnsetBucket() {
	o.Bucket.Unset()
}

// GetHeroId returns the HeroId field value
func (o *AnalyticsHeroStats) GetHeroId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HeroId
}

// GetHeroIdOk returns a tuple with the HeroId field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetHeroIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeroId, true
}

// SetHeroId sets field value
func (o *AnalyticsHeroStats) SetHeroId(v int32) {
	o.HeroId = v
}

// GetLosses returns the Losses field value
func (o *AnalyticsHeroStats) GetLosses() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Losses
}

// GetLossesOk returns a tuple with the Losses field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetLossesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Losses, true
}

// SetLosses sets field value
func (o *AnalyticsHeroStats) SetLosses(v int64) {
	o.Losses = v
}

// GetMatches returns the Matches field value
func (o *AnalyticsHeroStats) GetMatches() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetMatchesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Matches, true
}

// SetMatches sets field value
func (o *AnalyticsHeroStats) SetMatches(v int64) {
	o.Matches = v
}

// GetMatchesPerBucket returns the MatchesPerBucket field value
func (o *AnalyticsHeroStats) GetMatchesPerBucket() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MatchesPerBucket
}

// GetMatchesPerBucketOk returns a tuple with the MatchesPerBucket field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetMatchesPerBucketOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchesPerBucket, true
}

// SetMatchesPerBucket sets field value
func (o *AnalyticsHeroStats) SetMatchesPerBucket(v int64) {
	o.MatchesPerBucket = v
}

// GetPlayers returns the Players field value
func (o *AnalyticsHeroStats) GetPlayers() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Players
}

// GetPlayersOk returns a tuple with the Players field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetPlayersOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Players, true
}

// SetPlayers sets field value
func (o *AnalyticsHeroStats) SetPlayers(v int64) {
	o.Players = v
}

// GetTotalAssists returns the TotalAssists field value
func (o *AnalyticsHeroStats) GetTotalAssists() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalAssists
}

// GetTotalAssistsOk returns a tuple with the TotalAssists field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalAssistsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAssists, true
}

// SetTotalAssists sets field value
func (o *AnalyticsHeroStats) SetTotalAssists(v int64) {
	o.TotalAssists = v
}

// GetTotalBossDamage returns the TotalBossDamage field value
func (o *AnalyticsHeroStats) GetTotalBossDamage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalBossDamage
}

// GetTotalBossDamageOk returns a tuple with the TotalBossDamage field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalBossDamageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBossDamage, true
}

// SetTotalBossDamage sets field value
func (o *AnalyticsHeroStats) SetTotalBossDamage(v int64) {
	o.TotalBossDamage = v
}

// GetTotalCreepDamage returns the TotalCreepDamage field value
func (o *AnalyticsHeroStats) GetTotalCreepDamage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalCreepDamage
}

// GetTotalCreepDamageOk returns a tuple with the TotalCreepDamage field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalCreepDamageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCreepDamage, true
}

// SetTotalCreepDamage sets field value
func (o *AnalyticsHeroStats) SetTotalCreepDamage(v int64) {
	o.TotalCreepDamage = v
}

// GetTotalDeaths returns the TotalDeaths field value
func (o *AnalyticsHeroStats) GetTotalDeaths() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalDeaths
}

// GetTotalDeathsOk returns a tuple with the TotalDeaths field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalDeathsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDeaths, true
}

// SetTotalDeaths sets field value
func (o *AnalyticsHeroStats) SetTotalDeaths(v int64) {
	o.TotalDeaths = v
}

// GetTotalDenies returns the TotalDenies field value
func (o *AnalyticsHeroStats) GetTotalDenies() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalDenies
}

// GetTotalDeniesOk returns a tuple with the TotalDenies field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalDeniesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalDenies, true
}

// SetTotalDenies sets field value
func (o *AnalyticsHeroStats) SetTotalDenies(v int64) {
	o.TotalDenies = v
}

// GetTotalKills returns the TotalKills field value
func (o *AnalyticsHeroStats) GetTotalKills() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalKills
}

// GetTotalKillsOk returns a tuple with the TotalKills field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalKillsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalKills, true
}

// SetTotalKills sets field value
func (o *AnalyticsHeroStats) SetTotalKills(v int64) {
	o.TotalKills = v
}

// GetTotalLastHits returns the TotalLastHits field value
func (o *AnalyticsHeroStats) GetTotalLastHits() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalLastHits
}

// GetTotalLastHitsOk returns a tuple with the TotalLastHits field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalLastHitsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalLastHits, true
}

// SetTotalLastHits sets field value
func (o *AnalyticsHeroStats) SetTotalLastHits(v int64) {
	o.TotalLastHits = v
}

// GetTotalMaxHealth returns the TotalMaxHealth field value
func (o *AnalyticsHeroStats) GetTotalMaxHealth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalMaxHealth
}

// GetTotalMaxHealthOk returns a tuple with the TotalMaxHealth field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalMaxHealthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalMaxHealth, true
}

// SetTotalMaxHealth sets field value
func (o *AnalyticsHeroStats) SetTotalMaxHealth(v int64) {
	o.TotalMaxHealth = v
}

// GetTotalNetWorth returns the TotalNetWorth field value
func (o *AnalyticsHeroStats) GetTotalNetWorth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNetWorth
}

// GetTotalNetWorthOk returns a tuple with the TotalNetWorth field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalNetWorthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNetWorth, true
}

// SetTotalNetWorth sets field value
func (o *AnalyticsHeroStats) SetTotalNetWorth(v int64) {
	o.TotalNetWorth = v
}

// GetTotalNeutralDamage returns the TotalNeutralDamage field value
func (o *AnalyticsHeroStats) GetTotalNeutralDamage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNeutralDamage
}

// GetTotalNeutralDamageOk returns a tuple with the TotalNeutralDamage field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalNeutralDamageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNeutralDamage, true
}

// SetTotalNeutralDamage sets field value
func (o *AnalyticsHeroStats) SetTotalNeutralDamage(v int64) {
	o.TotalNeutralDamage = v
}

// GetTotalPlayerDamage returns the TotalPlayerDamage field value
func (o *AnalyticsHeroStats) GetTotalPlayerDamage() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalPlayerDamage
}

// GetTotalPlayerDamageOk returns a tuple with the TotalPlayerDamage field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalPlayerDamageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPlayerDamage, true
}

// SetTotalPlayerDamage sets field value
func (o *AnalyticsHeroStats) SetTotalPlayerDamage(v int64) {
	o.TotalPlayerDamage = v
}

// GetTotalPlayerDamageTaken returns the TotalPlayerDamageTaken field value
func (o *AnalyticsHeroStats) GetTotalPlayerDamageTaken() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalPlayerDamageTaken
}

// GetTotalPlayerDamageTakenOk returns a tuple with the TotalPlayerDamageTaken field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalPlayerDamageTakenOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPlayerDamageTaken, true
}

// SetTotalPlayerDamageTaken sets field value
func (o *AnalyticsHeroStats) SetTotalPlayerDamageTaken(v int64) {
	o.TotalPlayerDamageTaken = v
}

// GetTotalShotsHit returns the TotalShotsHit field value
func (o *AnalyticsHeroStats) GetTotalShotsHit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalShotsHit
}

// GetTotalShotsHitOk returns a tuple with the TotalShotsHit field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalShotsHitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalShotsHit, true
}

// SetTotalShotsHit sets field value
func (o *AnalyticsHeroStats) SetTotalShotsHit(v int64) {
	o.TotalShotsHit = v
}

// GetTotalShotsMissed returns the TotalShotsMissed field value
func (o *AnalyticsHeroStats) GetTotalShotsMissed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalShotsMissed
}

// GetTotalShotsMissedOk returns a tuple with the TotalShotsMissed field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetTotalShotsMissedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalShotsMissed, true
}

// SetTotalShotsMissed sets field value
func (o *AnalyticsHeroStats) SetTotalShotsMissed(v int64) {
	o.TotalShotsMissed = v
}

// GetWins returns the Wins field value
func (o *AnalyticsHeroStats) GetWins() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Wins
}

// GetWinsOk returns a tuple with the Wins field value
// and a boolean to check if the value has been set.
func (o *AnalyticsHeroStats) GetWinsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wins, true
}

// SetWins sets field value
func (o *AnalyticsHeroStats) SetWins(v int64) {
	o.Wins = v
}

func (o AnalyticsHeroStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsHeroStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Bucket.IsSet() {
		toSerialize["bucket"] = o.Bucket.Get()
	}
	toSerialize["hero_id"] = o.HeroId
	toSerialize["losses"] = o.Losses
	toSerialize["matches"] = o.Matches
	toSerialize["matches_per_bucket"] = o.MatchesPerBucket
	toSerialize["players"] = o.Players
	toSerialize["total_assists"] = o.TotalAssists
	toSerialize["total_boss_damage"] = o.TotalBossDamage
	toSerialize["total_creep_damage"] = o.TotalCreepDamage
	toSerialize["total_deaths"] = o.TotalDeaths
	toSerialize["total_denies"] = o.TotalDenies
	toSerialize["total_kills"] = o.TotalKills
	toSerialize["total_last_hits"] = o.TotalLastHits
	toSerialize["total_max_health"] = o.TotalMaxHealth
	toSerialize["total_net_worth"] = o.TotalNetWorth
	toSerialize["total_neutral_damage"] = o.TotalNeutralDamage
	toSerialize["total_player_damage"] = o.TotalPlayerDamage
	toSerialize["total_player_damage_taken"] = o.TotalPlayerDamageTaken
	toSerialize["total_shots_hit"] = o.TotalShotsHit
	toSerialize["total_shots_missed"] = o.TotalShotsMissed
	toSerialize["wins"] = o.Wins
	return toSerialize, nil
}

func (o *AnalyticsHeroStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hero_id",
		"losses",
		"matches",
		"matches_per_bucket",
		"players",
		"total_assists",
		"total_boss_damage",
		"total_creep_damage",
		"total_deaths",
		"total_denies",
		"total_kills",
		"total_last_hits",
		"total_max_health",
		"total_net_worth",
		"total_neutral_damage",
		"total_player_damage",
		"total_player_damage_taken",
		"total_shots_hit",
		"total_shots_missed",
		"wins",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAnalyticsHeroStats := _AnalyticsHeroStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAnalyticsHeroStats)

	if err != nil {
		return err
	}

	*o = AnalyticsHeroStats(varAnalyticsHeroStats)

	return err
}

type NullableAnalyticsHeroStats struct {
	value *AnalyticsHeroStats
	isSet bool
}

func (v NullableAnalyticsHeroStats) Get() *AnalyticsHeroStats {
	return v.value
}

func (v *NullableAnalyticsHeroStats) Set(val *AnalyticsHeroStats) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsHeroStats) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsHeroStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsHeroStats(val *AnalyticsHeroStats) *NullableAnalyticsHeroStats {
	return &NullableAnalyticsHeroStats{value: val, isSet: true}
}

func (v NullableAnalyticsHeroStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsHeroStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


