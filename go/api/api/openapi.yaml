openapi: 3.1.0
info:
  contact:
    name: Deadlock API - Discord
    url: https://discord.gg/XMF9Xrgfqu
  description: "\n## Support the Deadlock API\n\nWhether you're building your own\
    \ database, developing data science projects, or enhancing your website with game\
    \ and player analytics, the Deadlock API has the data you need.\n\nYour sponsorship\
    \ helps keep this resource open, free and future-proof for everyone. By supporting\
    \ the Deadlock API, you will enable continued development, new features and reliable\
    \ access for developers, analysts and streamers worldwide.\n\nHelp us continue\
    \ to provide the data you need - sponsor the Deadlock API today!\n\n**-> You can\
    \ Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896)\
    \ or [GitHub](https://github.com/sponsors/raimannma)**\n\n## Disclaimer\n_deadlock-api.com\
    \ is not endorsed by Valve and does not reflect the views or opinions of Valve\
    \ or anyone officially involved in producing or managing Valve properties. Valve\
    \ and all associated properties are trademarks or registered trademarks of Valve\
    \ Corporation_\n        "
  license:
    name: MIT
    url: https://github.com/deadlock-api/deadlock-api-rust/blob/master/LICENSE
  title: Deadlock API
  version: 0.1.0
externalDocs:
  description: Source Code
  url: https://github.com/deadlock-api/deadlock-api-rust
servers:
- url: https://api.deadlock-api.com
tags:
- description: |2

    Comprehensive match data endpoints for retrieving detailed information about games.
    Provides access to active matches, match metadata, replay salts, and more.
  name: Matches
- description: Custom Match related endpoints
  name: Custom Matches
- description: Player related endpoints
  name: Players
- description: "\n# STOP! READ THIS FIRST!\n\nPlease be very careful when using this\
    \ endpoint and make yourself familiar with the way we calculate the MMR.\n\nThis\
    \ is how we calculate a player MMR.\n\n1. We take the average badge of the team\
    \ the player was on in a match.\n2. We convert the badge to a MMR score using\
    \ the formula: `(intDiv(badge, 10) - 1) * 6 + (badge % 10)`\n3. We do a exponential\
    \ moving average (EMA) of the last 50 matches to get the player's MMR score.\n\
    4. We convert the MMR score back to a badge using the formula: `10 * intDiv(mmr_score,\
    \ 6) + 1 + mmr_score % 6`\n\n### Rate Limits:\n| Type | Limit |\n| ---- | -----\
    \ |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    "
  name: MMR
- description: Steam related endpoints
  name: Steam
- description: |2

    Endpoints for retrieving global and hero-specific leaderboards.
    Supports filtering by region and provides data in both JSON and protobuf formats.
  name: Leaderboard
- description: |2

    Comprehensive game statistics and analysis endpoints.
    Provides detailed performance metrics for heroes, items, and players, including hero synergies, counters, and combinations.
    Features scoreboards for both heroes and players.
  name: Analytics
- description: |2

    Search and retrieve hero builds with comprehensive filtering options.
  name: Builds
- description: Endpoints that return data about game patches.
  name: Patches
- description: |2

    Integration endpoints for the [Deadlock Streamkit](https://streamkit.deadlock-api.com/).
    Provides functionality to resolve dynamic command templates and variables for streaming overlays and chat commands.
    Includes endpoints to retrieve available variables, resolve specific variables or command templates, and get widget version information.
  name: Commands
- description: |2

    System status and info endpoints.
    Provides health checks for monitoring service availability (Clickhouse, Postgres, Redis) and API statistics including database table sizes, match fetching rates, and missed matches.
  name: Info
- name: E-Sports
- description: |2

    Database exploration endpoints for direct SQL access.
    Provides functionality to execute custom SQL queries with rate limiting protection, list available tables, and inspect table schemas.
  name: SQL
paths:
  /v1/analytics/ability-order-stats:
    get:
      description: "\nRetrieves statistics for the ability order of a hero.\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: ability_order_stats
      parameters:
      - description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their minimum number of ability upgrades
          over the whole match.
        explode: true
        in: query
        name: min_ability_upgrades
        required: false
        schema:
          format: int64
          maximum: 16
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their maximum number of ability upgrades
          over the whole match.
        explode: true
        in: query
        name: max_ability_upgrades
        required: false
        schema:
          format: int64
          maximum: 16
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The minimum number of matches played for an ability order to
          be included in the response.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AnalyticsAbilityOrderStats"
                type: array
          description: Ability Order Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch ability order stats
      summary: Ability Order Stats
      tags:
      - Analytics
  /v1/analytics/badge-distribution:
    get:
      description: "\nThis endpoint returns the player badge distribution.\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: badge_distribution
      parameters:
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on whether they are in the high skill range.
        explode: true
        in: query
        name: is_high_skill_range_parties
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches based on whether they are in the low priority
          pool.
        explode: true
        in: query
        name: is_low_pri_pool
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches based on whether they are in the new player pool.
        explode: true
        in: query
        name: is_new_player_pool
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BadgeDistribution"
                type: array
          description: Badge Distribution
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch badge distribution
      summary: Badge Distribution
      tags:
      - Analytics
  /v1/analytics/build-item-stats:
    get:
      description: "\nRetrieves item statistics from hero builds.\n\nResults are cached\
        \ for **1 hour** based on the unique combination of query parameters provided.\
        \ Subsequent identical requests within this timeframe will receive the cached\
        \ response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP\
        \ | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: build_item_stats
      parameters:
      - description: "Filter builds based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter builds based on their last updated time (Unix timestamp).
          **Default:** 30 days ago.
        explode: true
        in: query
        name: min_last_updated_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter builds based on their last updated time (Unix timestamp).
        explode: true
        in: query
        name: max_last_updated_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BuildItemStats"
                type: array
          description: Build Item Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch build item stats
      summary: Build Item Stats
      tags:
      - Analytics
  /v1/analytics/hero-comb-stats:
    get:
      description: "\nRetrieves overall statistics for each hero combination.\n\n\
        Results are cached for **1 hour**. The cache key is determined by the specific\
        \ combination of filter parameters used in the query. Subsequent requests\
        \ using the exact same filters within this timeframe will receive the cached\
        \ response.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP\
        \ | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: hero_comb_stats
      parameters:
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Comma separated list of hero ids to include. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: include_hero_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: "Comma separated list of hero ids to exclude. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: exclude_hero_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: The minimum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The combination size to return.
        explode: true
        in: query
        name: comb_size
        required: false
        schema:
          default: 6
          format: int32
          maximum: 6
          minimum: 2
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HeroCombStats"
                type: array
          description: Hero Comb Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero comb stats
      summary: Hero Comb Stats
      tags:
      - Analytics
  /v1/analytics/hero-counter-stats:
    get:
      description: "\nRetrieves hero-versus-hero matchup statistics based on historical\
        \ match data.\n\nThis endpoint analyzes completed matches to calculate how\
        \ often a specific hero (`hero_id`) wins against an enemy hero (`enemy_hero_id`)\
        \ and the total number of times they have faced each other under the specified\
        \ filter conditions.\n\nResults are cached for **1 hour** based on the combination\
        \ of query parameters provided. Subsequent identical requests within this\
        \ timeframe will receive the cached response.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global |\
        \ - |\n    "
      operationId: hero_counters_stats
      parameters:
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter enemy players based on their net worth.
        explode: true
        in: query
        name: min_enemy_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter enemy players based on their net worth.
        explode: true
        in: query
        name: max_enemy_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "When `true`, only considers matchups where both `hero_id` and\
          \ `enemy_hero_id` were assigned to the same lane (e.g., both Mid Lane).\
          \ When `false`, considers all matchups regardless of assigned lane."
        explode: true
        in: query
        name: same_lane_filter
        required: false
        schema:
          default: true
          nullable: true
          type: boolean
        style: form
      - description: The minimum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int64
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HeroCounterStats"
                type: array
          description: Hero Counter Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero counter stats
      summary: Hero Counter Stats
      tags:
      - Analytics
  /v1/analytics/hero-stats:
    get:
      description: "\nRetrieves performance statistics for each hero based on historical\
        \ match data.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP\
        \ | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: hero_stats
      parameters:
      - description: Bucket allows you to group the stats by a specific field.
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          enum:
          - no_bucket
          - start_time_hour
          - start_time_day
          - start_time_week
          - start_time_month
          type: string
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on the number of matches they have played
          with a specific hero within the filtered time range.
        explode: true
        in: query
        name: min_hero_matches
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on the number of matches they have played
          with a specific hero within the filtered time range.
        explode: true
        in: query
        name: max_hero_matches
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on the number of matches they have played
          with a specific hero in their entire history.
        explode: true
        in: query
        name: min_hero_matches_total
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on the number of matches they have played
          with a specific hero in their entire history.
        explode: true
        in: query
        name: max_hero_matches_total
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Comma separated list of item ids to include (only heroes who\
          \ have purchased these items). See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: include_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: "Comma separated list of item ids to exclude (only heroes who\
          \ have not purchased these items). See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: exclude_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AnalyticsHeroStats"
                type: array
          description: Hero Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero stats
      summary: Hero Stats
      tags:
      - Analytics
  /v1/analytics/hero-synergy-stats:
    get:
      description: "\nRetrieves hero pair synergy statistics based on historical match\
        \ data.\n\nThis endpoint analyzes completed matches to calculate how often\
        \ a specific pair of heroes (`hero_id1` and `hero_id2`) won when playing *together\
        \ on the same team*, and the total number of times they have played together\
        \ under the specified filter conditions.\n\nResults are cached for **1 hour**\
        \ based on the combination of query parameters provided. Subsequent identical\
        \ requests within this timeframe will receive the cached response.\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: hero_synergies_stats
      parameters:
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "When `true`, only considers matchups where both `hero_id1` and\
          \ `hero_id2` were assigned to the same lane (e.g., both Mid Lane). When\
          \ `false`, considers all matchups regardless of assigned lane."
        explode: true
        in: query
        name: same_lane_filter
        required: false
        schema:
          default: true
          nullable: true
          type: boolean
        style: form
      - description: "When `true`, only considers matchups where both `hero_id` and\
          \ `hero_id2` were on the same party. When `false`, considers all matchups\
          \ regardless of party affiliation."
        explode: true
        in: query
        name: same_party_filter
        required: false
        schema:
          default: true
          nullable: true
          type: boolean
        style: form
      - description: The minimum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int64
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HeroSynergyStats"
                type: array
          description: Hero Synergy Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero synergy stats
      summary: Hero Synergy Stats
      tags:
      - Analytics
  /v1/analytics/item-permutation-stats:
    get:
      description: "\nRetrieves item permutation statistics based on historical match\
        \ data.\n\nResults are cached for **1 hour** based on the unique combination\
        \ of query parameters provided. Subsequent identical requests within this\
        \ timeframe will receive the cached response.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global |\
        \ - |\n    "
      operationId: item_permutation_stats
      parameters:
      - description: "Comma separated list of item ids. See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: The combination size to return.
        explode: true
        in: query
        name: comb_size
        required: false
        schema:
          default: 2
          format: int32
          maximum: 12
          minimum: 2
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_ids
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: "Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ItemPermutationStats"
                type: array
          description: Item Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch item stats
      summary: Item Permutation Stats
      tags:
      - Analytics
  /v1/analytics/item-stats:
    get:
      description: "\nRetrieves item statistics based on historical match data.\n\n\
        Results are cached for **1 hour** based on the unique combination of query\
        \ parameters provided. Subsequent identical requests within this timeframe\
        \ will receive the cached response.\n\n### Rate Limits:\n| Type | Limit |\n\
        | ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: item_stats
      parameters:
      - description: Bucket allows you to group the stats by a specific field.
        explode: true
        in: query
        name: bucket
        required: false
        schema:
          enum:
          - no_bucket
          - hero
          - team
          - start_time_hour
          - start_time_day
          - start_time_week
          - start_time_month
          - game_time_min
          - game_time_normalized_percentage
          - net_worth_by_1000
          - net_worth_by_2000
          - net_worth_by_3000
          - net_worth_by_5000
          - net_worth_by_10000
          type: string
        style: form
      - description: "Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_ids
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - deprecated: true
        description: "Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Comma separated list of item ids to include. See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: include_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: "Comma separated list of item ids to exclude. See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: exclude_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: The minimum number of matches played for an item to be included
          in the response.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ItemStats"
                type: array
          description: Item Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch item stats
      summary: Item Stats
      tags:
      - Analytics
  /v1/analytics/player-stats/metrics:
    get:
      description: "\nReturns comprehensive statistical analysis of player performance.\n\
        \nResults are cached for **1 hour** based on the unique combination of query\
        \ parameters provided. Subsequent identical requests within this timeframe\
        \ will receive the cached response.\n\n> Note: Quantiles are calculated using\
        \ the [DDSketch](https://www.vldb.org/pvldb/vol12/p2195-masson.pdf) algorithm,\
        \ so they are not exact but have a maximum relative error of 0.01.\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: player_stats_metrics
      parameters:
      - description: "Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_ids
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches to analyze.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: "Comma separated list of item ids to include (only heroes who\
          \ have purchased these items). See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: include_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: "Comma separated list of item ids to exclude (only heroes who\
          \ have not purchased these items). See more: <https://assets.deadlock-api.com/v2/items>"
        explode: true
        in: query
        name: exclude_item_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HashMap"
          description: Hero Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch player stats metrics
      summary: Player Stats Metrics
      tags:
      - Analytics
  /v1/analytics/scoreboards/heroes:
    get:
      description: "\nThis endpoint returns the hero scoreboard.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: hero_scoreboard
      parameters:
      - description: The field to sort by.
        explode: true
        in: query
        name: sort_by
        required: true
        schema:
          enum:
          - matches
          - wins
          - losses
          - winrate
          - max_kills_per_match
          - avg_kills_per_match
          - kills
          - max_deaths_per_match
          - avg_deaths_per_match
          - deaths
          - max_damage_taken_per_match
          - avg_damage_taken_per_match
          - damage_taken
          - max_assists_per_match
          - avg_assists_per_match
          - assists
          - max_net_worth_per_match
          - avg_net_worth_per_match
          - net_worth
          - max_last_hits_per_match
          - avg_last_hits_per_match
          - last_hits
          - max_denies_per_match
          - avg_denies_per_match
          - denies
          - max_player_level_per_match
          - avg_player_level_per_match
          - player_level
          - max_creep_kills_per_match
          - avg_creep_kills_per_match
          - creep_kills
          - max_neutral_kills_per_match
          - avg_neutral_kills_per_match
          - neutral_kills
          - max_creep_damage_per_match
          - avg_creep_damage_per_match
          - creep_damage
          - max_player_damage_per_match
          - avg_player_damage_per_match
          - player_damage
          - max_neutral_damage_per_match
          - avg_neutral_damage_per_match
          - neutral_damage
          - max_boss_damage_per_match
          - avg_boss_damage_per_match
          - boss_damage
          - max_max_health_per_match
          - avg_max_health_per_match
          - max_health
          - max_shots_hit_per_match
          - avg_shots_hit_per_match
          - shots_hit
          - max_shots_missed_per_match
          - avg_shots_missed_per_match
          - shots_missed
          - max_hero_bullets_hit_per_match
          - avg_hero_bullets_hit_per_match
          - hero_bullets_hit
          - max_hero_bullets_hit_crit_per_match
          - avg_hero_bullets_hit_crit_per_match
          - hero_bullets_hit_crit
          type: string
        style: form
      - description: The direction to sort heroes in.
        explode: true
        in: query
        name: sort_direction
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      - description: Filter by min number of matches played.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp). **Default:**
          30 days ago.
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          default: 1758153600
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - deprecated: true
        description: Filter for matches with a specific player account ID.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Entry"
                type: array
          description: Hero Scoreboard
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero scoreboard
      summary: Hero Scoreboard
      tags:
      - Analytics
  /v1/analytics/scoreboards/players:
    get:
      description: "\nThis endpoint returns the player scoreboard.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: player_scoreboard
      parameters:
      - description: The field to sort by.
        explode: true
        in: query
        name: sort_by
        required: true
        schema:
          enum:
          - matches
          - wins
          - losses
          - winrate
          - max_kills_per_match
          - avg_kills_per_match
          - kills
          - max_deaths_per_match
          - avg_deaths_per_match
          - deaths
          - max_damage_taken_per_match
          - avg_damage_taken_per_match
          - damage_taken
          - max_assists_per_match
          - avg_assists_per_match
          - assists
          - max_net_worth_per_match
          - avg_net_worth_per_match
          - net_worth
          - max_last_hits_per_match
          - avg_last_hits_per_match
          - last_hits
          - max_denies_per_match
          - avg_denies_per_match
          - denies
          - max_player_level_per_match
          - avg_player_level_per_match
          - player_level
          - max_creep_kills_per_match
          - avg_creep_kills_per_match
          - creep_kills
          - max_neutral_kills_per_match
          - avg_neutral_kills_per_match
          - neutral_kills
          - max_creep_damage_per_match
          - avg_creep_damage_per_match
          - creep_damage
          - max_player_damage_per_match
          - avg_player_damage_per_match
          - player_damage
          - max_neutral_damage_per_match
          - avg_neutral_damage_per_match
          - neutral_damage
          - max_boss_damage_per_match
          - avg_boss_damage_per_match
          - boss_damage
          - max_max_health_per_match
          - avg_max_health_per_match
          - max_health
          - max_shots_hit_per_match
          - avg_shots_hit_per_match
          - shots_hit
          - max_shots_missed_per_match
          - avg_shots_missed_per_match
          - shots_missed
          - max_hero_bullets_hit_per_match
          - avg_hero_bullets_hit_per_match
          - hero_bullets_hit
          - max_hero_bullets_hit_crit_per_match
          - avg_hero_bullets_hit_crit_per_match
          - hero_bullets_hit_crit
          type: string
        style: form
      - description: The direction to sort players in.
        explode: true
        in: query
        name: sort_direction
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      - description: "Filter matches based on the hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The minimum number of matches played for a player to be included
          in the scoreboard.
        explode: true
        in: query
        name: min_matches
        required: false
        schema:
          default: 20
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The maximum number of matches played for a hero combination to
          be included in the response.
        explode: true
        in: query
        name: max_matches
        required: false
        schema:
          format: int32
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The offset to start fetching players from.
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: The maximum number of players to fetch.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 10000
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Entry"
                type: array
          description: Player Scoreboard
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch player scoreboard
      summary: Player Scoreboard
      tags:
      - Analytics
  /v1/builds:
    get:
      description: "\nSearch for builds based on various criteria.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: search_builds
      parameters:
      - description: Filter builds based on their `last_updated` time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter builds based on their `last_updated` time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter builds based on their published time (Unix timestamp).
        explode: true
        in: query
        name: min_published_unix_timestamp
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filter builds based on their published time (Unix timestamp).
        explode: true
        in: query
        name: max_published_unix_timestamp
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: The field to sort the builds by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - weekly_favorites
          - favorites
          - ignores
          - reports
          - updated_at
          - published_at
          - version
          type: string
        style: form
      - description: The index of the first build to return.
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of builds to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: The direction to sort the builds in.
        explode: true
        in: query
        name: sort_direction
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      - description: Search for builds with a name containing this string.
        explode: true
        in: query
        name: search_name
        required: false
        schema:
          type: string
        style: form
      - description: Search for builds with a description containing this string.
        explode: true
        in: query
        name: search_description
        required: false
        schema:
          type: string
        style: form
      - description: Only return the latest version of each build.
        explode: true
        in: query
        name: only_latest
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter builds by language.
        explode: true
        in: query
        name: language
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter builds by ID.
        explode: true
        in: query
        name: build_id
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter builds by version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Filter builds by hero ID. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_id
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter builds by tag.
        explode: true
        in: query
        name: tag
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: Filter builds by rollup category.
        explode: true
        in: query
        name: rollup_category
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: The author's `SteamID3`
        explode: true
        in: query
        name: author_id
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Build"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Internal server error
      summary: Search
      tags:
      - Builds
  /v1/commands/resolve:
    get:
      description: "\n    Resolves a command and returns the resolved command.\n\n\
        ### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 60req/60s |\n\
        | Key | - |\n| Global | 300req/60s |\n    "
      operationId: command_resolve
      parameters:
      - description: The players region
        explode: true
        in: query
        name: region
        required: false
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: form
      - description: The players `SteamID3`
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: The command template to resolve
        explode: true
        in: query
        name: template
        required: false
        schema:
          type: string
        style: form
      - description: Hero name to check for hero specific stats
        explode: true
        in: query
        name: hero_name
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: ""
        "400":
          description: Provided parameters are invalid.
      summary: Resolve Command
      tags:
      - Commands
  /v1/commands/variables/available:
    get:
      description: "\nReturns a list of available variables that can be used in the\
        \ command endpoint.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | -----\
        \ |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: available_variables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VariableDescription"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
      summary: Available Variables
      tags:
      - Commands
  /v1/commands/variables/resolve:
    get:
      description: "\nResolves variables and returns a map of variable name to resolved\
        \ value.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 60req/min\
        \ |\n| Key | - |\n| Global | 300req/min |\n    "
      operationId: variables_resolve
      parameters:
      - explode: true
        in: query
        name: region
        required: false
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: form
      - explode: true
        in: query
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: form
      - description: "Variables to resolve, separated by commas."
        explode: true
        in: query
        name: variables
        required: false
        schema:
          type: string
        style: form
      - description: Hero name to check for hero specific stats
        explode: true
        in: query
        name: hero_name
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
          description: ""
        "400":
          description: Provided parameters are invalid.
      summary: Resolve Variables
      tags:
      - Commands
  /v1/commands/widgets/versions:
    get:
      description: |2

        Returns a map of str->int of widget versions.

        ### Rate Limits:
        | Type | Limit |
        | ---- | ----- |
        | IP | 100req/s |
        | Key | - |
        | Global | - |
      operationId: widget_versions
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
          description: ""
        "400":
          description: Provided parameters are invalid.
      summary: Widget Versions
      tags:
      - Commands
  /v1/esports/ingest/match:
    post:
      description: "\nTo use this Endpoint you need to have special permissions.\n\
        Please contact us if you organize E-Sports Matches and want to ingest them\
        \ to us.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 1000req/h\
        \ |\n| Key | - |\n| Global | 10000req/h |\n    "
      operationId: ingest_match
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ESportsMatch"
        required: true
      responses:
        "200":
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Ingest failed
      summary: Ingest
      tags:
      - E-Sports
  /v1/esports/matches:
    get:
      description: "\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP |\
        \ 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: matches
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ESportsMatch"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Internal server error
      summary: List Matches
      tags:
      - E-Sports
  /v1/info:
    get:
      description: "\nReturns information about the API.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global |\
        \ - |\n    "
      operationId: info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIInfo"
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: API Info
      tags:
      - Info
  /v1/info/health:
    get:
      description: "\nChecks the health of the services.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global |\
        \ - |\n    "
      operationId: health_check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: Health Check
      tags:
      - Info
  /v1/leaderboard/{region}:
    get:
      description: "\nReturns the leaderboard.\n\n### Rate Limits:\n| Type | Limit\
        \ |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n  \
        \  "
      operationId: leaderboard
      parameters:
      - description: The region to fetch the leaderboard for.
        explode: false
        in: path
        name: region
        required: true
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leaderboard"
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Fetching or parsing the leaderboard failed
      summary: Leaderboard
      tags:
      - Leaderboard
  /v1/leaderboard/{region}/raw:
    get:
      description: "\nReturns the leaderboard, serialized as protobuf message.\n\n\
        You have to decode the protobuf message.\n\nProtobuf definitions can be found\
        \ here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Message:\n- CMsgClientToGcGetLeaderboardResponse\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: leaderboard_raw
      parameters:
      - description: The region to fetch the leaderboard for.
        explode: false
        in: path
        name: region
        required: true
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: int32
                  minimum: 0
                  type: integer
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Fetching the leaderboard failed
      summary: Leaderboard as Protobuf
      tags:
      - Leaderboard
  /v1/leaderboard/{region}/{hero_id}:
    get:
      description: "\nReturns the leaderboard for a specific hero.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: leaderboard_hero
      parameters:
      - description: The region to fetch the leaderboard for.
        explode: false
        in: path
        name: region
        required: true
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: simple
      - description: "The hero ID to fetch the leaderboard for. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: false
        in: path
        name: hero_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Leaderboard"
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Fetching or parsing the hero leaderboard failed
      summary: Hero Leaderboard
      tags:
      - Leaderboard
  /v1/leaderboard/{region}/{hero_id}/raw:
    get:
      description: "\nReturns the leaderboard for a specific hero, serialized as protobuf\
        \ message.\n\nYou have to decode the protobuf message.\n\nProtobuf definitions\
        \ can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Message:\n- CMsgClientToGcGetLeaderboardResponse\n\n###\
        \ Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key\
        \ | - |\n| Global | - |\n    "
      operationId: leaderboard_hero_raw
      parameters:
      - description: The region to fetch the leaderboard for.
        explode: false
        in: path
        name: region
        required: true
        schema:
          enum:
          - Europe
          - Asia
          - NAmerica
          - SAmerica
          - Oceania
          type: string
        style: simple
      - description: "The hero ID to fetch the leaderboard for. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: false
        in: path
        name: hero_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: int32
                  minimum: 0
                  type: integer
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Fetching the hero leaderboard failed
      summary: Hero Leaderboard as Protobuf
      tags:
      - Leaderboard
  /v1/matches/active:
    get:
      description: "\nReturns active matches that are currently being played.\n\n\
        Fetched from the watch tab in game, which is limited to the **top 200 matches**.\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n\
        | Key | - |\n| Global | - |\n    "
      operationId: active_matches
      parameters:
      - deprecated: true
        description: The account ID to filter active matches by (`SteamID3`)
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Comma separated list of account ids to include
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveMatch"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Fetching or parsing active matches failed
      summary: Active
      tags:
      - Matches
  /v1/matches/active/raw:
    get:
      description: "\nReturns active matches that are currently being played, serialized\
        \ as protobuf message.\n\nFetched from the watch tab in game, which is limited\
        \ to the **top 200 matches**.\n\nYou have to decode the protobuf message.\n\
        \nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Message:\n- CMsgClientToGcGetActiveMatchesResponse\n\n\
        ### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n\
        | Key | - |\n| Global | - |\n    "
      operationId: active_matches_raw
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: int32
                  minimum: 0
                  type: integer
                type: array
          description: ""
        "500":
          description: Fetching active matches failed
      summary: Active as Protobuf
      tags:
      - Matches
  /v1/matches/custom/create:
    post:
      description: |2

        This endpoint creates a custom match using a bot account.

        **Process:**
        1. A party is created with your provided settings.
        2. The system waits for the party code to be generated.
        3. The party code is returned in the response.
        4. The bot switches to spectator mode.
        5. The bot marks itself as ready.
        6. You and other players join, ready up, and start the match.

        **Callbacks:**
        If a callback URL is provided, POST requests will be sent to it:
        - **settings:** When lobby settings change, a POST is sent to `{callback_url}/settings` with the `CsoCitadelParty` protobuf message as JSON.
        - **match start:** When the match starts, a POST is sent to `{callback_url}` with the match ID.

        _Protobuf definitions: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)_

        **Note:**
        The bot will leave the match 15 minutes after creation, regardless of match state.

        ### Rate Limits:
        | Type | Limit |
        | ---- | ----- |
        | IP | API-Key ONLY |
        | Key | 100req/30min |
        | Global | 1000req/h |
      operationId: create_custom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCustomResponse"
          description: Successfully fetched custom match id.
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Creating custom match failed
      summary: Create Match
      tags:
      - Custom Matches
  /v1/matches/custom/{lobby_id}/ready:
    post:
      description: |2

        This endpoint allows you to ready up for a custom match.

        ### Rate Limits:
        | Type | Limit |
        | ---- | ----- |
        | IP | API-Key ONLY |
        | Key | 100req/30min |
        | Global | 1000req/h |
      operationId: ready_up
      responses:
        "200":
          description: Successfully ready up.
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Ready up failed
      summary: Ready Up
      tags:
      - Custom Matches
  /v1/matches/custom/{party_id}/match-id:
    get:
      description: |2

        This endpoint allows you to get the match id of a custom match.

        ### Rate Limits:
        | Type | Limit |
        | ---- | ----- |
        | IP | 100req/s |
        | Key | - |
        | Global | - |
      operationId: get_custom
      parameters:
      - explode: false
        in: path
        name: party_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomMatchIdResponse"
          description: Successfully fetched custom match id.
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetch Custom Match ID failed
      summary: Get Match ID
      tags:
      - Custom Matches
  /v1/matches/metadata:
    get:
      description: "\nThis endpoints lets you fetch multiple match metadata at once.\
        \ The response is a JSON array of match metadata.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 4req/s |\n| Key | - |\n| Global | 10req/s\
        \ |\n    "
      operationId: bulk_metadata
      parameters:
      - description: Include match info in the response.
        explode: true
        in: query
        name: include_info
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Include objectives in the response.
        explode: true
        in: query
        name: include_objectives
        required: false
        schema:
          type: boolean
        style: form
      - description: Include midboss in the response.
        explode: true
        in: query
        name: include_mid_boss
        required: false
        schema:
          type: boolean
        style: form
      - description: Include player info in the response.
        explode: true
        in: query
        name: include_player_info
        required: false
        schema:
          type: boolean
        style: form
      - description: Include player items in the response.
        explode: true
        in: query
        name: include_player_items
        required: false
        schema:
          type: boolean
        style: form
      - description: Include player stats in the response.
        explode: true
        in: query
        name: include_player_stats
        required: false
        schema:
          type: boolean
        style: form
      - description: Include player death details in the response.
        explode: true
        in: query
        name: include_player_death_details
        required: false
        schema:
          type: boolean
        style: form
      - description: "Comma separated list of match ids, limited by `limit`"
        explode: true
        in: query
        name: match_ids
        required: false
        schema:
          items:
            format: int64
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on whether they are in the high skill range.
        explode: true
        in: query
        name: is_high_skill_range_parties
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches based on whether they are in the low priority
          pool.
        explode: true
        in: query
        name: is_low_pri_pool
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches based on whether they are in the new player pool.
        explode: true
        in: query
        name: is_new_player_pool
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      - description: Filter matches by account IDs of players that participated in
          the match.
        explode: true
        in: query
        name: account_ids
        required: false
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          nullable: true
          type: array
        style: form
      - description: "Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_ids
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: The field to order the results by.
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - match_id
          - start_time
          type: string
        style: form
      - description: The direction to order the results by.
        explode: true
        in: query
        name: order_direction
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      - description: The maximum number of matches to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: int32
                  minimum: 0
                  type: integer
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
      summary: Bulk Metadata
      tags:
      - Matches
  /v1/matches/recently-fetched:
    get:
      description: "\nThis endpoint returns a list of match ids that have been fetched\
        \ within the last 10 minutes.\n\n### Rate Limits:\n| Type | Limit |\n| ----\
        \ | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: recently_fetched
      parameters:
      - description: "If true, only return matches that have been ingested by players."
        explode: true
        in: query
        name: player_ingested_only
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ClickhouseMatchInfo"
                type: array
          description: Recently fetched match info
        "500":
          description: Failed to fetch recently fetched matches
      summary: Recently Fetched
      tags:
      - Matches
  /v1/matches/salts:
    post:
      description: "\nYou can use this endpoint to help us collecting data.\n\nThe\
        \ endpoint accepts a list of MatchSalts objects, which contain the following\
        \ fields:\n\n- `match_id`: The match ID\n- `cluster_id`: The cluster ID\n\
        - `metadata_salt`: The metadata salt\n- `replay_salt`: The replay salt\n-\
        \ `username`: The username of the person who submitted the match\n\n### Rate\
        \ Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key |\
        \ - |\n| Global | - |\n    "
      operationId: ingest_salts
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/ClickhouseSalts"
              type: array
        required: true
      responses:
        "200":
          description: ""
        "400":
          description: Provided parameters are invalid or the salt check failed.
        "500":
          description: Ingest failed
      summary: Match Salts Ingest
      tags:
      - Internal
  /v1/matches/{match_id}/live/url:
    get:
      description: "\nThis endpoints spectates a match and returns the live URL to\
        \ be used in any demofile broadcast parser.\n\nExample Parsers:\n- [Demofile-Net](https://github.com/saul/demofile-net)\n\
        - [Haste](https://github.com/blukai/haste/)\n\n### Rate Limits:\n| Type |\
        \ Limit |\n| ---- | ----- |\n| IP | 10req/30mins |\n| Key | 60req/min |\n\
        | Global | 100req/10s |\n    "
      operationId: url
      parameters:
      - description: The match ID
        explode: false
        in: path
        name: match_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchSpectateResponse"
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Spectating match failed
      summary: Live Broadcast URL
      tags:
      - Matches
  /v1/matches/{match_id}/metadata:
    get:
      description: "\nThis endpoint returns the match metadata for the given `match_id`\
        \ parsed into JSON.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Messages:\n- CMsgMatchMetaData\n- CMsgMatchMetaDataContents\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | From Cache:\
        \ 100req/s<br>From S3: 100req/10s<br>From Steam: 10req/30mins |\n| Key | From\
        \ Cache: 100req/s<br>From S3: 100req/s<br>From Steam: 10req/min |\n| Global\
        \ | From Cache: 100req/s<br>From S3: 700req/s<br>From Steam: 10req/10s |\n\
        \    "
      operationId: metadata
      parameters:
      - description: The match ID
        explode: false
        in: path
        name: match_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - explode: true
        in: query
        name: is_custom
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          description: "Match metadata, see protobuf type: CMsgMatchMetaDataContents"
        "400":
          description: Provided parameters are invalid.
        "404":
          description: Match metadata not found
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetching or parsing match metadata failed
      summary: Metadata
      tags:
      - Matches
  /v1/matches/{match_id}/metadata/raw:
    get:
      description: "\nThis endpoints returns the raw .meta.bz2 file for the given\
        \ `match_id`.\n\nYou have to decompress it and decode the protobuf message.\n\
        \nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Messages:\n- CMsgMatchMetaData\n- CMsgMatchMetaDataContents\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | From Cache:\
        \ 100req/s<br>From S3: 100req/10s<br>From Steam: 10req/30mins |\n| Key | From\
        \ Cache: 100req/s<br>From S3: 100req/s<br>From Steam: 10req/min |\n| Global\
        \ | From Cache: 100req/s<br>From S3: 700req/s<br>From Steam: 10req/10s |\n\
        \    "
      operationId: metadata_raw
      parameters:
      - description: The match ID
        explode: false
        in: path
        name: match_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      - explode: true
        in: query
        name: is_custom
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                items:
                  format: int32
                  minimum: 0
                  type: integer
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "404":
          description: Match metadata not found
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetching match metadata failed
      summary: Metadata as Protobuf
      tags:
      - Matches
  /v1/matches/{match_id}/salts:
    get:
      description: "\nThis endpoints returns salts that can be used to fetch metadata\
        \ and demofile for a match.\n\n**Note:** We currently fetch many matches without\
        \ salts, so for these matches we do not have salts stored.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | From DB: 100req/s<br>From Steam:\
        \ 10req/30mins |\n| Key | From DB: -<br>From Steam: 10req/min |\n| Global\
        \ | From DB: -<br>From Steam: 10req/10s |\n    "
      operationId: salts
      parameters:
      - description: The match ID
        explode: false
        in: path
        name: match_id
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchSaltsResponse"
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetching match salts failed
      summary: Salts
      tags:
      - Matches
  /v1/patches:
    get:
      description: "\nReturns the parsed result of the RSS Feed from the official\
        \ Forum.\n\nRSS-Feed: https://forums.playdeadlock.com/forums/changelog.10/index.rss\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n\
        | Key | - |\n| Global | - |\n    "
      operationId: feed
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Patch"
                type: array
          description: ""
        "500":
          description: Fetching or parsing the RSS-Feed failed
      summary: Notes
      tags:
      - Patches
  /v1/patches/big-days:
    get:
      description: "\nReturns a list of dates where Deadlock's \"big\" patch days\
        \ were, usually bi-weekly.\nThe exact date is the time when the announcement\
        \ forum post was published.\n\nThis list is manually maintained, and so new\
        \ patch dates may be delayed by a few hours.\n\n### Rate Limits:\n| Type |\
        \ Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | -\
        \ |\n    "
      operationId: big_patch_days
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: ""
      summary: Big Days
      tags:
      - Patches
  /v1/players/hero-stats:
    get:
      description: "\nThis endpoint returns statistics for each hero played by a given\
        \ player account.\n\n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n\
        | IP | 100req/s |\n| Key | - |\n| Global | - |\n    "
      operationId: player_hero_stats
      parameters:
      - description: "Comma separated list of account ids, Account IDs are in `SteamID3`\
          \ format."
        explode: true
        in: query
        name: account_ids
        required: true
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
        style: form
      - description: "Filter matches based on the hero IDs. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: true
        in: query
        name: hero_ids
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: min_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter players based on their net worth.
        explode: true
        in: query
        name: max_networth
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HeroStats"
                type: array
          description: Hero Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero stats
      summary: Hero Stats
      tags:
      - Players
  /v1/players/mmr:
    get:
      description: |2

        Batch Player MMR

        Filters for the last 90 days if no `max_match_id` is provided.
      operationId: mmr
      parameters:
      - description: "Comma separated list of account ids, Account IDs are in `SteamID3`\
          \ format."
        explode: true
        in: query
        name: account_ids
        required: true
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MMRHistory"
                type: array
          description: MMR
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch mmr
      summary: MMR
      tags:
      - MMR
  /v1/players/mmr/{hero_id}:
    get:
      description: |2

        Batch Player Hero MMR

        Filters for the last 90 days if no `max_match_id` is provided.
      operationId: hero_mmr
      parameters:
      - description: "Comma separated list of account ids, Account IDs are in `SteamID3`\
          \ format."
        explode: true
        in: query
        name: account_ids
        required: true
        schema:
          items:
            format: int32
            minimum: 0
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "The hero ID to fetch the MMR history for. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: false
        in: path
        name: hero_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MMRHistory"
                type: array
          description: Hero MMR
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero mmr
      summary: Hero MMR
      tags:
      - MMR
  /v1/players/steam:
    get:
      description: "\nThis endpoint returns Steam profiles of players.\n\nSee: https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_(v0002)\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n\
        | Key | - |\n| Global | - |\n    "
      operationId: steam
      parameters:
      - description: "Comma separated list of account ids, Account IDs are in `SteamID3`\
          \ format."
        explode: true
        in: query
        name: account_ids
        required: true
        schema:
          items:
            format: int64
            minimum: 0
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SteamProfile"
                type: array
          description: Steam Profiles
        "400":
          description: Provided parameters are invalid.
        "404":
          description: No Steam profile found.
        "500":
          description: Failed to fetch steam profiles.
      summary: Batch Steam Profile
      tags:
      - Players
  /v1/players/steam-search:
    get:
      description: "\nThis endpoint lets you search for Steam profiles by account_id\
        \ or personaname.\n\nSee: https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_(v0002)\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n\
        | Key | - |\n| Global | - |\n    "
      operationId: steam_search
      parameters:
      - description: Search query for Steam profiles.
        explode: true
        in: query
        name: search_query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SteamProfile"
                type: array
          description: Steam Profile Search
        "400":
          description: Provided parameters are invalid.
        "404":
          description: No Steam profiles found.
        "500":
          description: Failed to fetch steam profiles.
      summary: Steam Profile Search
      tags:
      - Players
  /v1/players/{account_id}/card:
    get:
      description: "\nThis endpoint returns the player card for the given `account_id`.\n\
        \nYou have to be friend with one of the bots to use this endpoint.\nOn first\
        \ use this endpoint will return an error with a list of invite links to add\
        \ the bot as friend.\nFrom then on you can use this endpoint.\n\nProtobuf\
        \ definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Messages:\n- CMsgClientToGcGetProfileCard\n- CMsgCitadelProfileCard\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 5req/min |\n\
        | Key | 20req/min & 800req/h |\n| Global | 200req/min |\n    "
      operationId: card
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlayerCard"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetching match history failed
      summary: Card
      tags:
      - Players
  /v1/players/{account_id}/enemy-stats:
    get:
      description: "\nThis endpoint returns the enemy stats.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: enemy_stats
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter based on the number of matches played.
        explode: true
        in: query
        name: min_matches_played
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter based on the number of matches played.
        explode: true
        in: query
        name: max_matches_played
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EnemyStats"
                type: array
          description: Enemy Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch enemy stats
      summary: Enemy Stats
      tags:
      - Players
  /v1/players/{account_id}/match-history:
    get:
      description: "\nThis endpoint returns the player match history for the given\
        \ `account_id`.\n\nThe player match history is a combination of the data from\
        \ **Steam** and **ClickHouse**, so you always get the most up-to-date data\
        \ and full history.\n\nProtobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)\n\
        \nRelevant Protobuf Messages:\n- CMsgClientToGcGetMatchHistory\n- CMsgClientToGcGetMatchHistoryResponse\n\
        \n### Rate Limits:\n| Type | Limit |\n| ---- | ----- |\n| IP | 5req/min<br>With\
        \ `only_stored_history=true`: 100req/s<br>With `force_refetch=true`: 5req/h\
        \ |\n| Key | 50req/min & 1000req/h<br>With `only_stored_history=true`: -<br>With\
        \ `force_refetch=true`: 5req/h |\n| Global | 2000req/h<br>With `only_stored_history=true`:\
        \ -<br>With `force_refetch=true`: 10req/h |\n    "
      operationId: match_history
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      - description: |-
          Refetch the match history from Steam, even if it is already cached in `ClickHouse`.
          Only use this if you are sure that the data in `ClickHouse` is outdated.
          Enabling this flag results in a strict rate limit.
        explode: true
        in: query
        name: force_refetch
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Return only the already stored match history from `ClickHouse`.
          There is no rate limit for this option, so if you need a lot of data, you can use this option.
          This option is not compatible with `force_refetch`.
        explode: true
        in: query
        name: only_stored_history
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlayerMatchHistoryEntry"
                type: array
          description: ""
        "400":
          description: Provided parameters are invalid.
        "429":
          description: Rate limit exceeded
        "500":
          description: Fetching player match history failed
      summary: Match History
      tags:
      - Players
  /v1/players/{account_id}/mate-stats:
    get:
      description: "\nThis endpoint returns the mate stats.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: mate_stats
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter based on the number of matches played.
        explode: true
        in: query
        name: min_matches_played
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter based on the number of matches played.
        explode: true
        in: query
        name: max_matches_played
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter based on whether the mates were on the same party.
        explode: true
        in: query
        name: same_party
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MateStats"
                type: array
          description: Mate Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch mate stats
      summary: Mate Stats
      tags:
      - Players
  /v1/players/{account_id}/mmr-history:
    get:
      description: Player MMR History
      operationId: mmr_history
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MMRHistory"
                type: array
          description: MMR History
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch mmr history
      summary: MMR History
      tags:
      - MMR
  /v1/players/{account_id}/mmr-history/{hero_id}:
    get:
      description: Player Hero MMR History
      operationId: hero_mmr_history
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      - description: "The hero ID to fetch the MMR history for. See more: <https://assets.deadlock-api.com/v2/heroes>"
        explode: false
        in: path
        name: hero_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MMRHistory"
                type: array
          description: Hero MMR History
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch hero mmr history
      summary: Hero MMR History
      tags:
      - MMR
  /v1/players/{account_id}/party-stats:
    get:
      description: "\nThis endpoint returns the party stats.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global\
        \ | - |\n    "
      operationId: party_stats
      parameters:
      - description: The players `SteamID3`
        explode: false
        in: path
        name: account_id
        required: true
        schema:
          format: int32
          minimum: 0
          type: integer
        style: simple
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: min_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their start time (Unix timestamp).
        explode: true
        in: query
        name: max_unix_timestamp
        required: false
        schema:
          format: int64
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: min_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their duration in seconds (up to 7000s).
        explode: true
        in: query
        name: max_duration_s
        required: false
        schema:
          format: int64
          maximum: 7000
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: min_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: "Filter matches based on the average badge level (0-116) of *both*\
          \ teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>"
        explode: true
        in: query
        name: max_average_badge
        required: false
        schema:
          format: int32
          maximum: 116
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: min_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      - description: Filter matches based on their ID.
        explode: true
        in: query
        name: max_match_id
        required: false
        schema:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PartyStats"
                type: array
          description: Party Stats
        "400":
          description: Provided parameters are invalid.
        "500":
          description: Failed to fetch party stats
      summary: Party Stats
      tags:
      - Players
  /v1/sql:
    get:
      description: "\nExecutes a SQL query on the database.\n\n### Rate Limits:\n\
        | Type | Limit |\n| ---- | ----- |\n| IP | 300req/5min |\n| Key | 300req/5min\
        \ |\n| Global | 600req/60s |\n    "
      operationId: sql
      parameters:
      - description: The SQL query to execute. It must follow the Clickhouse SQL syntax.
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: Query
      tags:
      - SQL
  /v1/sql/tables:
    get:
      description: "\nLists all tables in the database.\n\n### Rate Limits:\n| Type\
        \ | Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global |\
        \ - |\n    "
      operationId: list_tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: List Tables
      tags:
      - SQL
  /v1/sql/tables/{table}/schema:
    get:
      description: "\nReturns the schema of a table.\n\n### Rate Limits:\n| Type |\
        \ Limit |\n| ---- | ----- |\n| IP | 100req/s |\n| Key | - |\n| Global | -\
        \ |\n    "
      operationId: table_schema
      parameters:
      - description: The name of the table to fetch the schema for.
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
          description: ""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: Table Schema
      tags:
      - SQL
components:
  schemas:
    APIInfo:
      example:
        fetched_matches_per_day: 0
        missed_matches: 0
        table_sizes:
          key:
            data_compressed_bytes: 0
            is_view: true
            data_uncompressed_bytes: 0
            rows: 0
      properties:
        fetched_matches_per_day:
          description: The number of matches fetched in the last 24 hours.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        missed_matches:
          description: The number of matches that have not been fetched.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        table_sizes:
          additionalProperties:
            $ref: "#/components/schemas/TableSize"
          description: The sizes of all tables in the database.
    ActiveMatch:
      example:
        objectives_mask_team0: 0
        game_mode_version: 0
        objectives_mask_team1: 0
        region_mode: 7
        winning_team_parsed: null
        game_mode_parsed: KECitadelGameModeInvalid
        match_mode_parsed: Invalid
        players:
        - account_id: 0
          team_parsed: Team0
          hero_id: 0
          team: 6
          abandoned: true
        - account_id: 0
          team_parsed: Team0
          hero_id: 0
          team: 6
          abandoned: true
        match_id: 0
        net_worth_team_1: 0
        spectators: 0
        match_score: 0
        net_worth_team_0: 0
        lobby_id: 0
        duration_s: 0
        region_mode_parsed: Row
        start_time: 0
        open_spectator_slots: 0
        match_mode: 7
        winning_team: 5
        game_mode: 1
        compat_version: 0
      properties:
        compat_version:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        duration_s:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        game_mode:
          format: int32
          nullable: true
          type: integer
        game_mode_parsed:
          $ref: "#/components/schemas/ActiveMatchGameMode"
        game_mode_version:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        lobby_id:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        match_id:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        match_mode:
          format: int32
          nullable: true
          type: integer
        match_mode_parsed:
          $ref: "#/components/schemas/ActiveMatchMode"
        match_score:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        net_worth_team_0:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        net_worth_team_1:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        objectives_mask_team0:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        objectives_mask_team1:
          format: int64
          minimum: 0
          nullable: true
          type: integer
        open_spectator_slots:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        players:
          items:
            $ref: "#/components/schemas/ActiveMatchPlayer"
          type: array
        region_mode:
          format: int32
          nullable: true
          type: integer
        region_mode_parsed:
          $ref: "#/components/schemas/ActiveMatchRegionMode"
        spectators:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        start_time:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        winning_team:
          format: int32
          nullable: true
          type: integer
        winning_team_parsed:
          $ref: "#/components/schemas/ActiveMatchTeam"
      required:
      - players
    ActiveMatchGameMode:
      enum:
      - KECitadelGameModeInvalid
      - KECitadelGameModeNormal
      - KECitadelGameMode1v1Test
      - KECitadelGameModeSandbox
      type: string
    ActiveMatchMode:
      enum:
      - Invalid
      - Unranked
      - PrivateLobby
      - CoopBot
      - Ranked
      - ServerTest
      - Tutorial
      - HeroLabs
      type: string
    ActiveMatchPlayer:
      example:
        account_id: 0
        team_parsed: Team0
        hero_id: 0
        team: 6
        abandoned: true
      properties:
        abandoned:
          nullable: true
          type: boolean
        account_id:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        team:
          format: int32
          nullable: true
          type: integer
        team_parsed:
          $ref: "#/components/schemas/ActiveMatchTeam"
    ActiveMatchRegionMode:
      enum:
      - Row
      - Europe
      - SeAsia
      - SAmerica
      - Russia
      - Oceania
      type: string
    ActiveMatchTeam:
      enum:
      - Team0
      - Team1
      - Spectator
      type: string
    AnalyticsAbilityOrderStats:
      example:
        abilities:
        - 0
        - 0
        wins: 0
        total_deaths: 0
        total_kills: 0
        players: 0
        total_assists: 0
        losses: 0
        matches: 0
      properties:
        abilities:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
        losses:
          format: int64
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        players:
          format: int64
          minimum: 0
          type: integer
        total_assists:
          format: int64
          minimum: 0
          type: integer
        total_deaths:
          format: int64
          minimum: 0
          type: integer
        total_kills:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - abilities
      - losses
      - matches
      - players
      - total_assists
      - total_deaths
      - total_kills
      - wins
    AnalyticsHeroStats:
      example:
        wins: 0
        total_net_worth: 0
        total_kills: 0
        total_player_damage_taken: 0
        players: 0
        total_assists: 0
        total_max_health: 0
        total_player_damage: 0
        losses: 0
        matches: 0
        matches_per_bucket: 0
        total_boss_damage: 0
        total_shots_missed: 0
        bucket: 0
        total_neutral_damage: 0
        total_denies: 0
        total_last_hits: 0
        total_shots_hit: 0
        total_deaths: 0
        hero_id: 0
        total_creep_damage: 0
      properties:
        bucket:
          format: int32
          minimum: 0
          type: integer
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        losses:
          format: int64
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        matches_per_bucket:
          format: int64
          minimum: 0
          type: integer
        players:
          format: int64
          minimum: 0
          type: integer
        total_assists:
          format: int64
          minimum: 0
          type: integer
        total_boss_damage:
          format: int64
          minimum: 0
          type: integer
        total_creep_damage:
          format: int64
          minimum: 0
          type: integer
        total_deaths:
          format: int64
          minimum: 0
          type: integer
        total_denies:
          format: int64
          minimum: 0
          type: integer
        total_kills:
          format: int64
          minimum: 0
          type: integer
        total_last_hits:
          format: int64
          minimum: 0
          type: integer
        total_max_health:
          format: int64
          minimum: 0
          type: integer
        total_net_worth:
          format: int64
          minimum: 0
          type: integer
        total_neutral_damage:
          format: int64
          minimum: 0
          type: integer
        total_player_damage:
          format: int64
          minimum: 0
          type: integer
        total_player_damage_taken:
          format: int64
          minimum: 0
          type: integer
        total_shots_hit:
          format: int64
          minimum: 0
          type: integer
        total_shots_missed:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - bucket
      - hero_id
      - losses
      - matches
      - matches_per_bucket
      - players
      - total_assists
      - total_boss_damage
      - total_creep_damage
      - total_deaths
      - total_denies
      - total_kills
      - total_last_hits
      - total_max_health
      - total_net_worth
      - total_neutral_damage
      - total_player_damage
      - total_player_damage_taken
      - total_shots_hit
      - total_shots_missed
      - wins
    BadgeDistribution:
      example:
        badge_level: 0
        total_matches: 0
      properties:
        badge_level:
          description: "The badge level. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          type: integer
        total_matches:
          description: The total number of matches.
          format: int64
          minimum: 0
          type: integer
      required:
      - badge_level
      - total_matches
    Build:
      example:
        num_reports: 0
        rollup_category: 0
        num_ignores: 0
        num_weekly_favorites: 0
        num_favorites: 0
        hero_build:
          description: description
          language: 0
          version: 0
          hero_build_id: 0
          publish_timestamp: 6
          tags:
          - 0
          - 0
          author_account_id: 0
          last_updated_timestamp: 1
          name: name
          details:
            ability_order:
              currency_changes:
              - annotation: annotation
                currency_type: 1
                delta: 5
                ability_id: 0
              - annotation: annotation
                currency_type: 1
                delta: 5
                ability_id: 0
            mod_categories:
            - mods:
              - annotation: annotation
                sell_priority: 0
                ability_id: 0
                imbue_target_ability_id: 0
                required_flex_slots: 0
              - annotation: annotation
                sell_priority: 0
                ability_id: 0
                imbue_target_ability_id: 0
                required_flex_slots: 0
              name: name
              width: 2.027123
              description: description
              optional: true
              height: 5.637377
            - mods:
              - annotation: annotation
                sell_priority: 0
                ability_id: 0
                imbue_target_ability_id: 0
                required_flex_slots: 0
              - annotation: annotation
                sell_priority: 0
                ability_id: 0
                imbue_target_ability_id: 0
                required_flex_slots: 0
              name: name
              width: 2.027123
              description: description
              optional: true
              height: 5.637377
          hero_id: 0
          origin_build_id: 0
          development_build: true
      properties:
        hero_build:
          $ref: "#/components/schemas/BuildHero"
        num_favorites:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        num_ignores:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        num_reports:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        num_weekly_favorites:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        rollup_category:
          format: int32
          minimum: 0
          nullable: true
          type: integer
      required:
      - hero_build
    BuildHero:
      example:
        description: description
        language: 0
        version: 0
        hero_build_id: 0
        publish_timestamp: 6
        tags:
        - 0
        - 0
        author_account_id: 0
        last_updated_timestamp: 1
        name: name
        details:
          ability_order:
            currency_changes:
            - annotation: annotation
              currency_type: 1
              delta: 5
              ability_id: 0
            - annotation: annotation
              currency_type: 1
              delta: 5
              ability_id: 0
          mod_categories:
          - mods:
            - annotation: annotation
              sell_priority: 0
              ability_id: 0
              imbue_target_ability_id: 0
              required_flex_slots: 0
            - annotation: annotation
              sell_priority: 0
              ability_id: 0
              imbue_target_ability_id: 0
              required_flex_slots: 0
            name: name
            width: 2.027123
            description: description
            optional: true
            height: 5.637377
          - mods:
            - annotation: annotation
              sell_priority: 0
              ability_id: 0
              imbue_target_ability_id: 0
              required_flex_slots: 0
            - annotation: annotation
              sell_priority: 0
              ability_id: 0
              imbue_target_ability_id: 0
              required_flex_slots: 0
            name: name
            width: 2.027123
            description: description
            optional: true
            height: 5.637377
        hero_id: 0
        origin_build_id: 0
        development_build: true
      properties:
        author_account_id:
          format: int32
          minimum: 0
          type: integer
        description:
          nullable: true
          type: string
        details:
          $ref: "#/components/schemas/BuildHeroDetails"
        development_build:
          nullable: true
          type: boolean
        hero_build_id:
          format: int32
          minimum: 0
          type: integer
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        language:
          format: int32
          minimum: 0
          type: integer
        last_updated_timestamp:
          format: int64
          nullable: true
          type: integer
        name:
          type: string
        origin_build_id:
          format: int32
          minimum: 0
          type: integer
        publish_timestamp:
          format: int64
          nullable: true
          type: integer
        tags:
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
        version:
          format: int32
          minimum: 0
          type: integer
      required:
      - author_account_id
      - details
      - hero_build_id
      - hero_id
      - language
      - name
      - origin_build_id
      - version
    BuildHeroDetails:
      example:
        ability_order:
          currency_changes:
          - annotation: annotation
            currency_type: 1
            delta: 5
            ability_id: 0
          - annotation: annotation
            currency_type: 1
            delta: 5
            ability_id: 0
        mod_categories:
        - mods:
          - annotation: annotation
            sell_priority: 0
            ability_id: 0
            imbue_target_ability_id: 0
            required_flex_slots: 0
          - annotation: annotation
            sell_priority: 0
            ability_id: 0
            imbue_target_ability_id: 0
            required_flex_slots: 0
          name: name
          width: 2.027123
          description: description
          optional: true
          height: 5.637377
        - mods:
          - annotation: annotation
            sell_priority: 0
            ability_id: 0
            imbue_target_ability_id: 0
            required_flex_slots: 0
          - annotation: annotation
            sell_priority: 0
            ability_id: 0
            imbue_target_ability_id: 0
            required_flex_slots: 0
          name: name
          width: 2.027123
          description: description
          optional: true
          height: 5.637377
      properties:
        ability_order:
          $ref: "#/components/schemas/BuildHeroDetailsAbilityOrder"
        mod_categories:
          items:
            $ref: "#/components/schemas/BuildHeroDetailsCategory"
          type: array
      required:
      - mod_categories
    BuildHeroDetailsAbilityOrder:
      example:
        currency_changes:
        - annotation: annotation
          currency_type: 1
          delta: 5
          ability_id: 0
        - annotation: annotation
          currency_type: 1
          delta: 5
          ability_id: 0
      properties:
        currency_changes:
          items:
            $ref: "#/components/schemas/BuildHeroDetailsAbilityOrderCurrencyChange"
          nullable: true
          type: array
    BuildHeroDetailsAbilityOrderCurrencyChange:
      example:
        annotation: annotation
        currency_type: 1
        delta: 5
        ability_id: 0
      properties:
        ability_id:
          format: int32
          minimum: 0
          type: integer
        annotation:
          nullable: true
          type: string
        currency_type:
          format: int32
          type: integer
        delta:
          format: int32
          type: integer
      required:
      - ability_id
      - currency_type
      - delta
    BuildHeroDetailsCategory:
      example:
        mods:
        - annotation: annotation
          sell_priority: 0
          ability_id: 0
          imbue_target_ability_id: 0
          required_flex_slots: 0
        - annotation: annotation
          sell_priority: 0
          ability_id: 0
          imbue_target_ability_id: 0
          required_flex_slots: 0
        name: name
        width: 2.027123
        description: description
        optional: true
        height: 5.637377
      properties:
        description:
          nullable: true
          type: string
        height:
          format: float
          nullable: true
          type: number
        mods:
          items:
            $ref: "#/components/schemas/BuildHeroDetailsCategoryAbility"
          nullable: true
          type: array
        name:
          type: string
        optional:
          nullable: true
          type: boolean
        width:
          format: float
          nullable: true
          type: number
      required:
      - name
    BuildHeroDetailsCategoryAbility:
      example:
        annotation: annotation
        sell_priority: 0
        ability_id: 0
        imbue_target_ability_id: 0
        required_flex_slots: 0
      properties:
        ability_id:
          format: int32
          minimum: 0
          type: integer
        annotation:
          nullable: true
          type: string
        imbue_target_ability_id:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        required_flex_slots:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        sell_priority:
          format: int32
          minimum: 0
          nullable: true
          type: integer
      required:
      - ability_id
    BuildItemStats:
      example:
        item_id: 6
        builds: 0
      properties:
        builds:
          format: int64
          type: integer
        item_id:
          description: "See more: <https://assets.deadlock-api.com/v2/items>"
          format: int64
          type: integer
      required:
      - builds
      - item_id
    ClickhouseMatchInfo:
      example:
        start_time: 0
        match_id: 0
        match_mode: 5
        average_badge_team0: 0
        average_badge_team1: 0
        duration_s: 0
      properties:
        average_badge_team0:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        average_badge_team1:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        duration_s:
          format: int32
          minimum: 0
          type: integer
        match_id:
          format: int64
          minimum: 0
          type: integer
        match_mode:
          format: int32
          type: integer
        start_time:
          format: int32
          minimum: 0
          type: integer
      required:
      - duration_s
      - match_id
      - match_mode
      - start_time
    ClickhouseSalts:
      example:
        cluster_id: 0
        replay_salt: 0
        match_id: 0
        metadata_salt: 0
        username: username
      properties:
        cluster_id:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        match_id:
          format: int64
          minimum: 0
          type: integer
        metadata_salt:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        replay_salt:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        username:
          nullable: true
          type: string
      required:
      - match_id
    CreateCustomRequest:
      example:
        callback_url: callback_url
        is_publicly_visible: true
        region_mode: row
        cheats_enabled: true
        disable_auto_ready: true
        randomize_lanes: true
        min_roster_size: 0
        duplicate_heroes_enabled: true
        experimental_heroes_enabled: true
      properties:
        callback_url:
          description: "If a callback url is provided, we will send a POST request\
            \ to this url when the match starts."
          nullable: true
          type: string
        cheats_enabled:
          nullable: true
          type: boolean
        disable_auto_ready:
          description: |-
            If auto-ready is disabled, the bot will not automatically ready up.
            You need to call the `ready` endpoint to ready up.
          nullable: true
          type: boolean
        duplicate_heroes_enabled:
          nullable: true
          type: boolean
        experimental_heroes_enabled:
          nullable: true
          type: boolean
        is_publicly_visible:
          nullable: true
          type: boolean
        min_roster_size:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        randomize_lanes:
          nullable: true
          type: boolean
        region_mode:
          $ref: "#/components/schemas/RegionMode"
    CreateCustomResponse:
      example:
        callback_secret: callback_secret
        party_id: party_id
        party_code: party_code
      properties:
        callback_secret:
          description: |-
            If a callback url is provided, this is the secret that should be used to verify the callback.
            The secret is a base64 encoded random string. To verify it you should compare it with the X-Callback-Secret header.
            If no callback url is provided, this will be None.
          nullable: true
          type: string
        party_code:
          type: string
        party_id:
          type: string
      required:
      - party_code
      - party_id
    ESportsMatch:
      example:
        team0_name: team0_name
        update_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        provider: provider
        tournament_name: tournament_name
        tournament_stage: tournament_stage
        match_id: 0
        scheduled_date: 2000-01-23T04:56:07.000+00:00
        team1_name: team1_name
        status: Live
      properties:
        match_id:
          description: Valve's match id of the match.
          format: int64
          nullable: true
          type: integer
        provider:
          description: The provider of the match data. Some string that identifies
            the source of the data.
          type: string
        scheduled_date:
          description: The scheduled date of the match.
          format: date-time
          nullable: true
          type: string
        status:
          $ref: "#/components/schemas/ESportsMatchStatus"
        team0_name:
          description: The name of the first team.
          nullable: true
          type: string
        team1_name:
          description: The name of the second team.
          nullable: true
          type: string
        tournament_name:
          description: The name of the tournament.
          nullable: true
          type: string
        tournament_stage:
          description: The stage of the tournament.
          nullable: true
          type: string
        update_id:
          description: "If you want to update an existing match, you can provide an\
            \ update id."
          format: uuid
          nullable: true
          type: string
      required:
      - provider
    ESportsMatchStatus:
      enum:
      - Live
      - Completed
      - Scheduled
      - Cancelled
      type: string
    EnemyStats:
      example:
        matches_played: 0
        wins: 0
        enemy_id: 0
        matches:
        - 0
        - 0
      properties:
        enemy_id:
          format: int32
          minimum: 0
          type: integer
        matches:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        matches_played:
          format: int64
          minimum: 0
          type: integer
        wins:
          description: The amount of matches won against the enemy.
          format: int64
          minimum: 0
          type: integer
      required:
      - enemy_id
      - matches
      - matches_played
      - wins
    Entry:
      example:
        rank: 0
        hero_id: 0
        matches: 0
        value: 5.962133916683182
      properties:
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        rank:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int64
          minimum: 0
          type: integer
        value:
          format: double
          type: number
      required:
      - hero_id
      - matches
      - rank
      - value
    GetCustomMatchIdResponse:
      example:
        match_id: 0
      properties:
        match_id:
          format: int64
          minimum: 0
          type: integer
      required:
      - match_id
    HashMap:
      additionalProperties:
        $ref: "#/components/schemas/HashMap_value"
    HeroCombStats:
      example:
        wins: 0
        hero_ids:
        - 0
        - 0
        losses: 0
        matches: 0
      properties:
        hero_ids:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
        losses:
          format: int64
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - hero_ids
      - losses
      - matches
      - wins
    HeroCounterStats:
      example:
        kills: 0
        wins: 0
        enemy_deaths: 0
        enemy_networth: 0
        enemy_hero_id: 0
        denies: 0
        matches_played: 0
        enemy_creeps: 0
        enemy_kills: 0
        last_hits: 0
        obj_damage: 0
        assists: 0
        enemy_last_hits: 0
        creeps: 0
        enemy_obj_damage: 0
        networth: 0
        hero_id: 0
        enemy_denies: 0
        enemy_assists: 0
        deaths: 0
      properties:
        assists:
          description: The number of assists by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        creeps:
          description: The number of creeps killed by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        deaths:
          description: The number of deaths by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        denies:
          description: The number of denies by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_assists:
          description: The number of assists by `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_creeps:
          description: The number of creeps killed by `enemy_hero_id` when facing
            `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_deaths:
          description: The number of deaths by `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_denies:
          description: The number of denies by `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_hero_id:
          description: "The ID of the opposing hero. See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        enemy_kills:
          description: The number of kills by `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_last_hits:
          description: The number of last hits by `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_networth:
          description: The net worth of `enemy_hero_id` when facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        enemy_obj_damage:
          description: The amount of objective damage dealt by `enemy_hero_id` when
            facing `hero_id`.
          format: int64
          minimum: 0
          type: integer
        hero_id:
          description: "The ID of the hero. See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        kills:
          description: The number of kills by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        last_hits:
          description: The number of last hits by `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        matches_played:
          description: The total number of matches played between `hero_id` and `enemy_hero_id`
            that meet the filter criteria.
          format: int64
          minimum: 0
          type: integer
        networth:
          description: The net worth of `hero_id` when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        obj_damage:
          description: The amount of objective damage dealt by `hero_id` when facing
            `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
        wins:
          description: The number of times `hero_id` won the match when facing `enemy_hero_id`.
          format: int64
          minimum: 0
          type: integer
      required:
      - assists
      - creeps
      - deaths
      - denies
      - enemy_assists
      - enemy_creeps
      - enemy_deaths
      - enemy_denies
      - enemy_hero_id
      - enemy_kills
      - enemy_last_hits
      - enemy_networth
      - enemy_obj_damage
      - hero_id
      - kills
      - last_hits
      - matches_played
      - networth
      - obj_damage
      - wins
    HeroStats:
      example:
        kills: 0
        damage_taken_per_soul: 4.145608029883936
        last_hits_per_min: 5.025004791520295
        accuracy: 6.027456183070403
        assists_per_min: 5.962133916683182
        denies_per_match: 1.0246457001441578
        ending_level: 6.84685269835264
        assists: 0
        damage_per_min: 9.301444243932576
        last_played: 0
        hero_id: 0
        deaths: 0
        deaths_per_min: 1.2315135367772556
        denies_per_min: 1.4894159098541704
        obj_damage_per_soul: 6.438423552598547
        wins: 0
        damage_taken_per_min: 2.027123023002322
        creeps_per_min: 5.637376656633329
        damage_per_soul: 3.616076749251911
        crit_shot_rate: 2.3021358869347655
        networth_per_min: 8.762042012749001
        damage_mitigated_per_min: 7.061401241503109
        kills_per_min: 4.965218492984954
        matches:
        - 0
        - 0
        time_played: 0
        matches_played: 0
        account_id: 0
        obj_damage_per_min: 9.018348186070783
      properties:
        account_id:
          format: int32
          minimum: 0
          type: integer
        accuracy:
          format: double
          type: number
        assists:
          format: int64
          minimum: 0
          type: integer
        assists_per_min:
          format: double
          type: number
        creeps_per_min:
          format: double
          type: number
        crit_shot_rate:
          format: double
          type: number
        damage_mitigated_per_min:
          deprecated: true
          format: double
          type: number
        damage_per_min:
          format: double
          type: number
        damage_per_soul:
          format: double
          type: number
        damage_taken_per_min:
          format: double
          type: number
        damage_taken_per_soul:
          format: double
          type: number
        deaths:
          format: int64
          minimum: 0
          type: integer
        deaths_per_min:
          format: double
          type: number
        denies_per_match:
          format: double
          type: number
        denies_per_min:
          format: double
          type: number
        ending_level:
          format: double
          type: number
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        kills:
          format: int64
          minimum: 0
          type: integer
        kills_per_min:
          format: double
          type: number
        last_hits_per_min:
          format: double
          type: number
        last_played:
          format: int32
          minimum: 0
          type: integer
        matches:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        matches_played:
          format: int64
          minimum: 0
          type: integer
        networth_per_min:
          format: double
          type: number
        obj_damage_per_min:
          format: double
          type: number
        obj_damage_per_soul:
          format: double
          type: number
        time_played:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - account_id
      - accuracy
      - assists
      - assists_per_min
      - creeps_per_min
      - crit_shot_rate
      - damage_mitigated_per_min
      - damage_per_min
      - damage_per_soul
      - damage_taken_per_min
      - damage_taken_per_soul
      - deaths
      - deaths_per_min
      - denies_per_match
      - denies_per_min
      - ending_level
      - hero_id
      - kills
      - kills_per_min
      - last_hits_per_min
      - last_played
      - matches
      - matches_played
      - networth_per_min
      - obj_damage_per_min
      - obj_damage_per_soul
      - time_played
      - wins
    HeroSynergyStats:
      example:
        denies1: 0
        wins: 0
        last_hits2: 0
        last_hits1: 0
        deaths2: 0
        deaths1: 0
        kills1: 0
        kills2: 0
        creeps1: 0
        denies2: 0
        creeps2: 0
        hero_id1: 0
        matches_played: 0
        assists2: 0
        networth2: 0
        hero_id2: 0
        networth1: 0
        obj_damage2: 0
        obj_damage1: 0
        assists1: 0
      properties:
        assists1:
          description: The number of assists by `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        assists2:
          description: The number of assists by `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        creeps1:
          description: The number of creeps killed by `hero_id1` when playing with
            `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        creeps2:
          description: The number of creeps killed by `hero_id2` when playing with
            `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        deaths1:
          description: The number of deaths by `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        deaths2:
          description: The number of deaths by `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        denies1:
          description: The number of denies by `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        denies2:
          description: The number of denies by `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        hero_id1:
          description: The ID of the first hero in the pair.
          format: int32
          minimum: 0
          type: integer
        hero_id2:
          description: The ID of the second hero in the pair.
          format: int32
          minimum: 0
          type: integer
        kills1:
          description: The number of kills by `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        kills2:
          description: The number of kills by `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        last_hits1:
          description: The number of last hits by `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        last_hits2:
          description: The number of last hits by `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        matches_played:
          description: "The total number of matches played where `hero_id1` and `hero_id2`\
            \ were on the same team, meeting the filter criteria."
          format: int64
          minimum: 0
          type: integer
        networth1:
          description: The net worth of `hero_id1` when playing with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        networth2:
          description: The net worth of `hero_id2` when playing with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        obj_damage1:
          description: The amount of objective damage dealt by `hero_id1` when playing
            with `hero_id2`.
          format: int64
          minimum: 0
          type: integer
        obj_damage2:
          description: The amount of objective damage dealt by `hero_id2` when playing
            with `hero_id1`.
          format: int64
          minimum: 0
          type: integer
        wins:
          description: The number of times the team won when both `hero_id1` and `hero_id2`
            were on the same team.
          format: int64
          minimum: 0
          type: integer
      required:
      - assists1
      - assists2
      - creeps1
      - creeps2
      - deaths1
      - deaths2
      - denies1
      - denies2
      - hero_id1
      - hero_id2
      - kills1
      - kills2
      - last_hits1
      - last_hits2
      - matches_played
      - networth1
      - networth2
      - obj_damage1
      - obj_damage2
      - wins
    ItemPermutationStats:
      example:
        wins: 0
        item_ids:
        - 0
        - 0
        losses: 0
        matches: 0
      properties:
        item_ids:
          description: "See more: <https://assets.deadlock-api.com/v2/items>"
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
        losses:
          format: int64
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - item_ids
      - losses
      - matches
      - wins
    ItemStats:
      example:
        bucket: 0
        wins: 0
        item_id: 0
        players: 0
        losses: 0
        matches: 0
      properties:
        bucket:
          format: int32
          minimum: 0
          type: integer
        item_id:
          description: "See more: <https://assets.deadlock-api.com/v2/items>"
          format: int32
          minimum: 0
          type: integer
        losses:
          format: int64
          minimum: 0
          type: integer
        matches:
          format: int64
          minimum: 0
          type: integer
        players:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - bucket
      - item_id
      - losses
      - matches
      - players
      - wins
    Leaderboard:
      example:
        entries:
        - badge_level: 0
          possible_account_ids:
          - 0
          - 0
          account_name: account_name
          rank: 0
          ranked_rank: 0
          top_hero_ids:
          - 0
          - 0
          ranked_subrank: 0
        - badge_level: 0
          possible_account_ids:
          - 0
          - 0
          account_name: account_name
          rank: 0
          ranked_rank: 0
          top_hero_ids:
          - 0
          - 0
          ranked_subrank: 0
      properties:
        entries:
          description: The leaderboard entries.
          items:
            $ref: "#/components/schemas/LeaderboardEntry"
          type: array
      required:
      - entries
    LeaderboardEntry:
      example:
        badge_level: 0
        possible_account_ids:
        - 0
        - 0
        account_name: account_name
        rank: 0
        ranked_rank: 0
        top_hero_ids:
        - 0
        - 0
        ranked_subrank: 0
      properties:
        account_name:
          description: The account name of the player.
          nullable: true
          type: string
        badge_level:
          description: "The badge level of the player. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        possible_account_ids:
          description: "The possible account IDs of the player. **CAVEAT: This is\
            \ not always correct, as Steam account names are not unique.**"
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
        rank:
          description: "The rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        ranked_rank:
          description: "The ranked rank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        ranked_subrank:
          description: "The ranked subrank of the player. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        top_hero_ids:
          description: "The top hero IDs of the player. See more: <https://assets.deadlock-api.com/v2/heroes>"
          items:
            format: int32
            minimum: 0
            type: integer
          type: array
    MMRHistory:
      example:
        division: 0
        start_time: 0
        account_id: 0
        match_id: 0
        player_score: 5.637376656633329
        rank: 0
        division_tier: 0
      properties:
        account_id:
          format: int32
          minimum: 0
          type: integer
        division:
          description: Extracted from the rank the division (rank // 10)
          format: int32
          minimum: 0
          type: integer
        division_tier:
          description: Extracted from the rank the division tier (rank % 10)
          format: int32
          minimum: 0
          type: integer
        match_id:
          format: int64
          minimum: 0
          type: integer
        player_score:
          description: Player Score is the index for the rank array (internally used
            for the rank regression)
          format: double
          type: number
        rank:
          description: "The Player Rank. See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          type: integer
        start_time:
          description: Start time of the match
          format: int32
          minimum: 0
          type: integer
      required:
      - account_id
      - division
      - division_tier
      - match_id
      - player_score
      - rank
      - start_time
    MatchSaltsResponse:
      example:
        cluster_id: 0
        metadata_url: metadata_url
        replay_salt: 0
        demo_url: demo_url
        match_id: 0
        metadata_salt: 0
      properties:
        cluster_id:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        demo_url:
          nullable: true
          type: string
        match_id:
          format: int64
          minimum: 0
          type: integer
        metadata_salt:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        metadata_url:
          nullable: true
          type: string
        replay_salt:
          format: int32
          minimum: 0
          nullable: true
          type: integer
      required:
      - match_id
    MatchSpectateResponse:
      example:
        broadcast_url: broadcast_url
        lobby_id: 0
      properties:
        broadcast_url:
          type: string
        lobby_id:
          format: int64
          minimum: 0
          nullable: true
          type: integer
      required:
      - broadcast_url
    MateStats:
      example:
        matches_played: 0
        wins: 0
        mate_id: 0
        matches:
        - 0
        - 0
      properties:
        matches:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        matches_played:
          format: int64
          minimum: 0
          type: integer
        mate_id:
          format: int32
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - matches
      - matches_played
      - mate_id
      - wins
    PartyStats:
      example:
        matches_played: 0
        wins: 0
        party_size: 0
        matches:
        - 0
        - 0
      properties:
        matches:
          items:
            format: int64
            minimum: 0
            type: integer
          type: array
        matches_played:
          format: int64
          minimum: 0
          type: integer
        party_size:
          format: int64
          minimum: 0
          type: integer
        wins:
          format: int64
          minimum: 0
          type: integer
      required:
      - matches
      - matches_played
      - party_size
      - wins
    Patch:
      example:
        pub_date: 2000-01-23T04:56:07.000+00:00
        slash_comments: slash_comments
        content_encoded: content_encoded
        author: author
        link: link
        dc_creator: dc_creator
        guid:
          is_perma_link: true
          text: text
        category:
          domain: domain
          text: text
        title: title
      properties:
        author:
          type: string
        category:
          $ref: "#/components/schemas/PatchCategory"
        content_encoded:
          type: string
        dc_creator:
          type: string
        guid:
          $ref: "#/components/schemas/PatchGuid"
        link:
          type: string
        pub_date:
          format: date-time
          type: string
        slash_comments:
          type: string
        title:
          type: string
      required:
      - author
      - category
      - content_encoded
      - dc_creator
      - guid
      - link
      - pub_date
      - slash_comments
      - title
    PatchCategory:
      example:
        domain: domain
        text: text
      properties:
        domain:
          type: string
        text:
          type: string
      required:
      - domain
      - text
    PatchGuid:
      example:
        is_perma_link: true
        text: text
      properties:
        is_perma_link:
          type: boolean
        text:
          type: string
      required:
      - is_perma_link
      - text
    PlayerCard:
      example:
        slots:
        - stat:
            stat_score: 0
            stat_id: 3
          slot_id: 0
          hero:
            kills: 0
            wins: 0
            id: 0
        - stat:
            stat_score: 0
            stat_id: 3
          slot_id: 0
          hero:
            kills: 0
            wins: 0
            id: 0
        account_id: 0
        ranked_rank: 0
        ranked_badge_level: 0
        ranked_subrank: 0
      properties:
        account_id:
          format: int32
          minimum: 0
          type: integer
        ranked_badge_level:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        ranked_rank:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        ranked_subrank:
          description: "See more: <https://assets.deadlock-api.com/v2/ranks>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        slots:
          items:
            $ref: "#/components/schemas/PlayerCardSlot"
          type: array
      required:
      - account_id
      - slots
    PlayerCardSlot:
      example:
        stat:
          stat_score: 0
          stat_id: 3
        slot_id: 0
        hero:
          kills: 0
          wins: 0
          id: 0
      properties:
        hero:
          $ref: "#/components/schemas/PlayerCardSlotHero"
        slot_id:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        stat:
          $ref: "#/components/schemas/PlayerCardSlotStat"
    PlayerCardSlotHero:
      example:
        kills: 0
        wins: 0
        id: 0
      properties:
        id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          nullable: true
          type: integer
        kills:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        wins:
          format: int32
          minimum: 0
          nullable: true
          type: integer
    PlayerCardSlotStat:
      example:
        stat_score: 0
        stat_id: 3
      properties:
        stat_id:
          format: int32
          nullable: true
          type: integer
        stat_score:
          format: int32
          minimum: 0
          nullable: true
          type: integer
    PlayerMatchHistoryEntry:
      example:
        objectives_mask_team0: 0
        net_worth: 0
        objectives_mask_team1: 0
        abandoned_time_s: 0
        match_id: 0
        player_deaths: 0
        denies: 0
        player_team: 1
        start_time: 0
        hero_level: 0
        last_hits: 0
        account_id: 0
        player_assists: 0
        match_result: 0
        match_mode: 2
        match_duration_s: 0
        game_mode: 5
        player_kills: 0
        hero_id: 0
        team_abandoned: true
        username: username
      properties:
        abandoned_time_s:
          format: int32
          minimum: 0
          nullable: true
          type: integer
        account_id:
          format: int32
          minimum: 0
          type: integer
        denies:
          format: int32
          minimum: 0
          type: integer
        game_mode:
          format: int32
          type: integer
        hero_id:
          description: "See more: <https://assets.deadlock-api.com/v2/heroes>"
          format: int32
          minimum: 0
          type: integer
        hero_level:
          format: int32
          minimum: 0
          type: integer
        last_hits:
          format: int32
          minimum: 0
          type: integer
        match_duration_s:
          format: int32
          minimum: 0
          type: integer
        match_id:
          format: int64
          minimum: 0
          type: integer
        match_mode:
          format: int32
          type: integer
        match_result:
          format: int32
          minimum: 0
          type: integer
        net_worth:
          format: int32
          minimum: 0
          type: integer
        objectives_mask_team0:
          format: int32
          minimum: 0
          type: integer
        objectives_mask_team1:
          format: int32
          minimum: 0
          type: integer
        player_assists:
          format: int32
          minimum: 0
          type: integer
        player_deaths:
          format: int32
          minimum: 0
          type: integer
        player_kills:
          format: int32
          minimum: 0
          type: integer
        player_team:
          format: int32
          type: integer
        start_time:
          format: int32
          minimum: 0
          type: integer
        team_abandoned:
          nullable: true
          type: boolean
        username:
          nullable: true
          type: string
      required:
      - account_id
      - denies
      - game_mode
      - hero_id
      - hero_level
      - last_hits
      - match_duration_s
      - match_id
      - match_mode
      - match_result
      - net_worth
      - objectives_mask_team0
      - objectives_mask_team1
      - player_assists
      - player_deaths
      - player_kills
      - player_team
      - start_time
    RegionMode:
      enum:
      - row
      - europe
      - se_asia
      - s_america
      - russia
      - oceania
      type: string
    Status:
      example:
        services:
          clickhouse: true
          postgres: true
          redis: true
      properties:
        services:
          $ref: "#/components/schemas/StatusServices"
      required:
      - services
    StatusServices:
      example:
        clickhouse: true
        postgres: true
        redis: true
      properties:
        clickhouse:
          description: Whether Clickhouse is reachable.
          type: boolean
        postgres:
          description: Whether Postgres is reachable.
          type: boolean
        redis:
          description: Whether Redis is reachable.
          type: boolean
      required:
      - clickhouse
      - postgres
      - redis
    SteamProfile:
      example:
        profileurl: profileurl
        last_updated: 2000-01-23T04:56:07.000+00:00
        account_id: 0
        countrycode: countrycode
        avatarfull: avatarfull
        avatarmedium: avatarmedium
        avatar: avatar
        personaname: personaname
        realname: realname
      properties:
        account_id:
          format: int32
          minimum: 0
          type: integer
        avatar:
          type: string
        avatarfull:
          type: string
        avatarmedium:
          type: string
        countrycode:
          nullable: true
          type: string
        last_updated:
          format: date-time
          type: string
        personaname:
          type: string
        profileurl:
          type: string
        realname:
          nullable: true
          type: string
      required:
      - account_id
      - avatar
      - avatarfull
      - avatarmedium
      - last_updated
      - personaname
      - profileurl
    TableSize:
      example:
        data_compressed_bytes: 0
        is_view: true
        data_uncompressed_bytes: 0
        rows: 0
      properties:
        data_compressed_bytes:
          description: Compressed size of the table in bytes.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        data_uncompressed_bytes:
          description: Uncompressed size of the table in bytes.
          format: int64
          minimum: 0
          nullable: true
          type: integer
        is_view:
          description: Whether the table is a view.
          type: boolean
        rows:
          description: Number of rows in the table.
          format: int64
          minimum: 0
          nullable: true
          type: integer
      required:
      - is_view
    VariableCategory:
      enum:
      - General
      - Daily
      - Hero
      - Item
      - Leaderboard
      - Overall
      type: string
    VariableDescription:
      example:
        extra_args:
        - extra_args
        - extra_args
        name: name
        description: description
        default_label: default_label
        category: General
      properties:
        category:
          $ref: "#/components/schemas/VariableCategory"
        default_label:
          description: The default label for the variable.
          nullable: true
          type: string
        description:
          description: The description of the variable.
          type: string
        extra_args:
          description: Extra arguments that can be passed to the variable.
          items:
            type: string
          type: array
        name:
          description: The name of the variable.
          type: string
      required:
      - category
      - description
      - extra_args
      - name
    HashMap_value:
      properties:
        avg:
          format: double
          type: number
        percentile1:
          format: double
          type: number
        percentile10:
          format: double
          type: number
        percentile25:
          format: double
          type: number
        percentile5:
          format: double
          type: number
        percentile50:
          format: double
          type: number
        percentile75:
          format: double
          type: number
        percentile90:
          format: double
          type: number
        percentile95:
          format: double
          type: number
        percentile99:
          format: double
          type: number
        std:
          format: double
          type: number
      required:
      - avg
      - percentile1
      - percentile10
      - percentile25
      - percentile5
      - percentile50
      - percentile75
      - percentile90
      - percentile95
      - percentile99
      - std
  securitySchemes:
    api_key_header:
      in: header
      name: X-API-KEY
      type: apiKey
    api_key_query:
      in: query
      name: api_key
      type: apiKey
