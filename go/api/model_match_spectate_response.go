/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MatchSpectateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchSpectateResponse{}

// MatchSpectateResponse struct for MatchSpectateResponse
type MatchSpectateResponse struct {
	BroadcastUrl string `json:"broadcast_url"`
	LobbyId NullableInt64 `json:"lobby_id,omitempty"`
}

type _MatchSpectateResponse MatchSpectateResponse

// NewMatchSpectateResponse instantiates a new MatchSpectateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchSpectateResponse(broadcastUrl string) *MatchSpectateResponse {
	this := MatchSpectateResponse{}
	this.BroadcastUrl = broadcastUrl
	return &this
}

// NewMatchSpectateResponseWithDefaults instantiates a new MatchSpectateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchSpectateResponseWithDefaults() *MatchSpectateResponse {
	this := MatchSpectateResponse{}
	return &this
}

// GetBroadcastUrl returns the BroadcastUrl field value
func (o *MatchSpectateResponse) GetBroadcastUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BroadcastUrl
}

// GetBroadcastUrlOk returns a tuple with the BroadcastUrl field value
// and a boolean to check if the value has been set.
func (o *MatchSpectateResponse) GetBroadcastUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BroadcastUrl, true
}

// SetBroadcastUrl sets field value
func (o *MatchSpectateResponse) SetBroadcastUrl(v string) {
	o.BroadcastUrl = v
}

// GetLobbyId returns the LobbyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MatchSpectateResponse) GetLobbyId() int64 {
	if o == nil || IsNil(o.LobbyId.Get()) {
		var ret int64
		return ret
	}
	return *o.LobbyId.Get()
}

// GetLobbyIdOk returns a tuple with the LobbyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MatchSpectateResponse) GetLobbyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LobbyId.Get(), o.LobbyId.IsSet()
}

// HasLobbyId returns a boolean if a field has been set.
func (o *MatchSpectateResponse) HasLobbyId() bool {
	if o != nil && o.LobbyId.IsSet() {
		return true
	}

	return false
}

// SetLobbyId gets a reference to the given NullableInt64 and assigns it to the LobbyId field.
func (o *MatchSpectateResponse) SetLobbyId(v int64) {
	o.LobbyId.Set(&v)
}
// SetLobbyIdNil sets the value for LobbyId to be an explicit nil
func (o *MatchSpectateResponse) SetLobbyIdNil() {
	o.LobbyId.Set(nil)
}

// UnsetLobbyId ensures that no value is present for LobbyId, not even an explicit nil
func (o *MatchSpectateResponse) UnsetLobbyId() {
	o.LobbyId.Unset()
}

func (o MatchSpectateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchSpectateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["broadcast_url"] = o.BroadcastUrl
	if o.LobbyId.IsSet() {
		toSerialize["lobby_id"] = o.LobbyId.Get()
	}
	return toSerialize, nil
}

func (o *MatchSpectateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"broadcast_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMatchSpectateResponse := _MatchSpectateResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMatchSpectateResponse)

	if err != nil {
		return err
	}

	*o = MatchSpectateResponse(varMatchSpectateResponse)

	return err
}

type NullableMatchSpectateResponse struct {
	value *MatchSpectateResponse
	isSet bool
}

func (v NullableMatchSpectateResponse) Get() *MatchSpectateResponse {
	return v.value
}

func (v *NullableMatchSpectateResponse) Set(val *MatchSpectateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchSpectateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchSpectateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchSpectateResponse(val *MatchSpectateResponse) *NullableMatchSpectateResponse {
	return &NullableMatchSpectateResponse{value: val, isSet: true}
}

func (v NullableMatchSpectateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchSpectateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


