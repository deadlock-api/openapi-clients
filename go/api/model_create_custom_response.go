/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCustomResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomResponse{}

// CreateCustomResponse struct for CreateCustomResponse
type CreateCustomResponse struct {
	// If a callback url is provided, this is the secret that should be used to verify the callback. The secret is a base64 encoded random string. To verify it you should compare it with the X-Callback-Secret header. If no callback url is provided, this will be None.
	CallbackSecret NullableString `json:"callback_secret,omitempty"`
	PartyCode string `json:"party_code"`
	PartyId string `json:"party_id"`
}

type _CreateCustomResponse CreateCustomResponse

// NewCreateCustomResponse instantiates a new CreateCustomResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomResponse(partyCode string, partyId string) *CreateCustomResponse {
	this := CreateCustomResponse{}
	this.PartyCode = partyCode
	this.PartyId = partyId
	return &this
}

// NewCreateCustomResponseWithDefaults instantiates a new CreateCustomResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomResponseWithDefaults() *CreateCustomResponse {
	this := CreateCustomResponse{}
	return &this
}

// GetCallbackSecret returns the CallbackSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateCustomResponse) GetCallbackSecret() string {
	if o == nil || IsNil(o.CallbackSecret.Get()) {
		var ret string
		return ret
	}
	return *o.CallbackSecret.Get()
}

// GetCallbackSecretOk returns a tuple with the CallbackSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateCustomResponse) GetCallbackSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CallbackSecret.Get(), o.CallbackSecret.IsSet()
}

// HasCallbackSecret returns a boolean if a field has been set.
func (o *CreateCustomResponse) HasCallbackSecret() bool {
	if o != nil && o.CallbackSecret.IsSet() {
		return true
	}

	return false
}

// SetCallbackSecret gets a reference to the given NullableString and assigns it to the CallbackSecret field.
func (o *CreateCustomResponse) SetCallbackSecret(v string) {
	o.CallbackSecret.Set(&v)
}
// SetCallbackSecretNil sets the value for CallbackSecret to be an explicit nil
func (o *CreateCustomResponse) SetCallbackSecretNil() {
	o.CallbackSecret.Set(nil)
}

// UnsetCallbackSecret ensures that no value is present for CallbackSecret, not even an explicit nil
func (o *CreateCustomResponse) UnsetCallbackSecret() {
	o.CallbackSecret.Unset()
}

// GetPartyCode returns the PartyCode field value
func (o *CreateCustomResponse) GetPartyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyCode
}

// GetPartyCodeOk returns a tuple with the PartyCode field value
// and a boolean to check if the value has been set.
func (o *CreateCustomResponse) GetPartyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyCode, true
}

// SetPartyCode sets field value
func (o *CreateCustomResponse) SetPartyCode(v string) {
	o.PartyCode = v
}

// GetPartyId returns the PartyId field value
func (o *CreateCustomResponse) GetPartyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartyId
}

// GetPartyIdOk returns a tuple with the PartyId field value
// and a boolean to check if the value has been set.
func (o *CreateCustomResponse) GetPartyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartyId, true
}

// SetPartyId sets field value
func (o *CreateCustomResponse) SetPartyId(v string) {
	o.PartyId = v
}

func (o CreateCustomResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CallbackSecret.IsSet() {
		toSerialize["callback_secret"] = o.CallbackSecret.Get()
	}
	toSerialize["party_code"] = o.PartyCode
	toSerialize["party_id"] = o.PartyId
	return toSerialize, nil
}

func (o *CreateCustomResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"party_code",
		"party_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomResponse := _CreateCustomResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCustomResponse)

	if err != nil {
		return err
	}

	*o = CreateCustomResponse(varCreateCustomResponse)

	return err
}

type NullableCreateCustomResponse struct {
	value *CreateCustomResponse
	isSet bool
}

func (v NullableCreateCustomResponse) Get() *CreateCustomResponse {
	return v.value
}

func (v *NullableCreateCustomResponse) Set(val *CreateCustomResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomResponse(val *CreateCustomResponse) *NullableCreateCustomResponse {
	return &NullableCreateCustomResponse{value: val, isSet: true}
}

func (v NullableCreateCustomResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


