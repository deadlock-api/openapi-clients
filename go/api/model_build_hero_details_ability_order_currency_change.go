/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BuildHeroDetailsAbilityOrderCurrencyChange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildHeroDetailsAbilityOrderCurrencyChange{}

// BuildHeroDetailsAbilityOrderCurrencyChange struct for BuildHeroDetailsAbilityOrderCurrencyChange
type BuildHeroDetailsAbilityOrderCurrencyChange struct {
	AbilityId int32 `json:"ability_id"`
	Annotation NullableString `json:"annotation,omitempty"`
	CurrencyType int32 `json:"currency_type"`
	Delta int32 `json:"delta"`
}

type _BuildHeroDetailsAbilityOrderCurrencyChange BuildHeroDetailsAbilityOrderCurrencyChange

// NewBuildHeroDetailsAbilityOrderCurrencyChange instantiates a new BuildHeroDetailsAbilityOrderCurrencyChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildHeroDetailsAbilityOrderCurrencyChange(abilityId int32, currencyType int32, delta int32) *BuildHeroDetailsAbilityOrderCurrencyChange {
	this := BuildHeroDetailsAbilityOrderCurrencyChange{}
	this.AbilityId = abilityId
	this.CurrencyType = currencyType
	this.Delta = delta
	return &this
}

// NewBuildHeroDetailsAbilityOrderCurrencyChangeWithDefaults instantiates a new BuildHeroDetailsAbilityOrderCurrencyChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildHeroDetailsAbilityOrderCurrencyChangeWithDefaults() *BuildHeroDetailsAbilityOrderCurrencyChange {
	this := BuildHeroDetailsAbilityOrderCurrencyChange{}
	return &this
}

// GetAbilityId returns the AbilityId field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetAbilityId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AbilityId
}

// GetAbilityIdOk returns a tuple with the AbilityId field value
// and a boolean to check if the value has been set.
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetAbilityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbilityId, true
}

// SetAbilityId sets field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) SetAbilityId(v int32) {
	o.AbilityId = v
}

// GetAnnotation returns the Annotation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetAnnotation() string {
	if o == nil || IsNil(o.Annotation.Get()) {
		var ret string
		return ret
	}
	return *o.Annotation.Get()
}

// GetAnnotationOk returns a tuple with the Annotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetAnnotationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Annotation.Get(), o.Annotation.IsSet()
}

// HasAnnotation returns a boolean if a field has been set.
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) HasAnnotation() bool {
	if o != nil && o.Annotation.IsSet() {
		return true
	}

	return false
}

// SetAnnotation gets a reference to the given NullableString and assigns it to the Annotation field.
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) SetAnnotation(v string) {
	o.Annotation.Set(&v)
}
// SetAnnotationNil sets the value for Annotation to be an explicit nil
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) SetAnnotationNil() {
	o.Annotation.Set(nil)
}

// UnsetAnnotation ensures that no value is present for Annotation, not even an explicit nil
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) UnsetAnnotation() {
	o.Annotation.Unset()
}

// GetCurrencyType returns the CurrencyType field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetCurrencyType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrencyType
}

// GetCurrencyTypeOk returns a tuple with the CurrencyType field value
// and a boolean to check if the value has been set.
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetCurrencyTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyType, true
}

// SetCurrencyType sets field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) SetCurrencyType(v int32) {
	o.CurrencyType = v
}

// GetDelta returns the Delta field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetDelta() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value
// and a boolean to check if the value has been set.
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) GetDeltaOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Delta, true
}

// SetDelta sets field value
func (o *BuildHeroDetailsAbilityOrderCurrencyChange) SetDelta(v int32) {
	o.Delta = v
}

func (o BuildHeroDetailsAbilityOrderCurrencyChange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildHeroDetailsAbilityOrderCurrencyChange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ability_id"] = o.AbilityId
	if o.Annotation.IsSet() {
		toSerialize["annotation"] = o.Annotation.Get()
	}
	toSerialize["currency_type"] = o.CurrencyType
	toSerialize["delta"] = o.Delta
	return toSerialize, nil
}

func (o *BuildHeroDetailsAbilityOrderCurrencyChange) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ability_id",
		"currency_type",
		"delta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBuildHeroDetailsAbilityOrderCurrencyChange := _BuildHeroDetailsAbilityOrderCurrencyChange{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBuildHeroDetailsAbilityOrderCurrencyChange)

	if err != nil {
		return err
	}

	*o = BuildHeroDetailsAbilityOrderCurrencyChange(varBuildHeroDetailsAbilityOrderCurrencyChange)

	return err
}

type NullableBuildHeroDetailsAbilityOrderCurrencyChange struct {
	value *BuildHeroDetailsAbilityOrderCurrencyChange
	isSet bool
}

func (v NullableBuildHeroDetailsAbilityOrderCurrencyChange) Get() *BuildHeroDetailsAbilityOrderCurrencyChange {
	return v.value
}

func (v *NullableBuildHeroDetailsAbilityOrderCurrencyChange) Set(val *BuildHeroDetailsAbilityOrderCurrencyChange) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildHeroDetailsAbilityOrderCurrencyChange) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildHeroDetailsAbilityOrderCurrencyChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildHeroDetailsAbilityOrderCurrencyChange(val *BuildHeroDetailsAbilityOrderCurrencyChange) *NullableBuildHeroDetailsAbilityOrderCurrencyChange {
	return &NullableBuildHeroDetailsAbilityOrderCurrencyChange{value: val, isSet: true}
}

func (v NullableBuildHeroDetailsAbilityOrderCurrencyChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildHeroDetailsAbilityOrderCurrencyChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


