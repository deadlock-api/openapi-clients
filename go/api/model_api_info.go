/*
Deadlock API

 ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deadlock-api-client

import (
	"encoding/json"
)

// checks if the APIInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIInfo{}

// APIInfo struct for APIInfo
type APIInfo struct {
	// The number of matches fetched in the last 24 hours.
	FetchedMatchesPerDay NullableInt64 `json:"fetched_matches_per_day,omitempty"`
	// The number of matches that have not been fetched.
	MissedMatches NullableInt64 `json:"missed_matches,omitempty"`
	// The sizes of all tables in the database.
	TableSizes map[string]TableSize `json:"table_sizes,omitempty"`
}

// NewAPIInfo instantiates a new APIInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIInfo() *APIInfo {
	this := APIInfo{}
	return &this
}

// NewAPIInfoWithDefaults instantiates a new APIInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIInfoWithDefaults() *APIInfo {
	this := APIInfo{}
	return &this
}

// GetFetchedMatchesPerDay returns the FetchedMatchesPerDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *APIInfo) GetFetchedMatchesPerDay() int64 {
	if o == nil || IsNil(o.FetchedMatchesPerDay.Get()) {
		var ret int64
		return ret
	}
	return *o.FetchedMatchesPerDay.Get()
}

// GetFetchedMatchesPerDayOk returns a tuple with the FetchedMatchesPerDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIInfo) GetFetchedMatchesPerDayOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FetchedMatchesPerDay.Get(), o.FetchedMatchesPerDay.IsSet()
}

// HasFetchedMatchesPerDay returns a boolean if a field has been set.
func (o *APIInfo) HasFetchedMatchesPerDay() bool {
	if o != nil && o.FetchedMatchesPerDay.IsSet() {
		return true
	}

	return false
}

// SetFetchedMatchesPerDay gets a reference to the given NullableInt64 and assigns it to the FetchedMatchesPerDay field.
func (o *APIInfo) SetFetchedMatchesPerDay(v int64) {
	o.FetchedMatchesPerDay.Set(&v)
}
// SetFetchedMatchesPerDayNil sets the value for FetchedMatchesPerDay to be an explicit nil
func (o *APIInfo) SetFetchedMatchesPerDayNil() {
	o.FetchedMatchesPerDay.Set(nil)
}

// UnsetFetchedMatchesPerDay ensures that no value is present for FetchedMatchesPerDay, not even an explicit nil
func (o *APIInfo) UnsetFetchedMatchesPerDay() {
	o.FetchedMatchesPerDay.Unset()
}

// GetMissedMatches returns the MissedMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *APIInfo) GetMissedMatches() int64 {
	if o == nil || IsNil(o.MissedMatches.Get()) {
		var ret int64
		return ret
	}
	return *o.MissedMatches.Get()
}

// GetMissedMatchesOk returns a tuple with the MissedMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIInfo) GetMissedMatchesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MissedMatches.Get(), o.MissedMatches.IsSet()
}

// HasMissedMatches returns a boolean if a field has been set.
func (o *APIInfo) HasMissedMatches() bool {
	if o != nil && o.MissedMatches.IsSet() {
		return true
	}

	return false
}

// SetMissedMatches gets a reference to the given NullableInt64 and assigns it to the MissedMatches field.
func (o *APIInfo) SetMissedMatches(v int64) {
	o.MissedMatches.Set(&v)
}
// SetMissedMatchesNil sets the value for MissedMatches to be an explicit nil
func (o *APIInfo) SetMissedMatchesNil() {
	o.MissedMatches.Set(nil)
}

// UnsetMissedMatches ensures that no value is present for MissedMatches, not even an explicit nil
func (o *APIInfo) UnsetMissedMatches() {
	o.MissedMatches.Unset()
}

// GetTableSizes returns the TableSizes field value if set, zero value otherwise.
func (o *APIInfo) GetTableSizes() map[string]TableSize {
	if o == nil || IsNil(o.TableSizes) {
		var ret map[string]TableSize
		return ret
	}
	return o.TableSizes
}

// GetTableSizesOk returns a tuple with the TableSizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIInfo) GetTableSizesOk() (map[string]TableSize, bool) {
	if o == nil || IsNil(o.TableSizes) {
		return map[string]TableSize{}, false
	}
	return o.TableSizes, true
}

// HasTableSizes returns a boolean if a field has been set.
func (o *APIInfo) HasTableSizes() bool {
	if o != nil && !IsNil(o.TableSizes) {
		return true
	}

	return false
}

// SetTableSizes gets a reference to the given map[string]TableSize and assigns it to the TableSizes field.
func (o *APIInfo) SetTableSizes(v map[string]TableSize) {
	o.TableSizes = v
}

func (o APIInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FetchedMatchesPerDay.IsSet() {
		toSerialize["fetched_matches_per_day"] = o.FetchedMatchesPerDay.Get()
	}
	if o.MissedMatches.IsSet() {
		toSerialize["missed_matches"] = o.MissedMatches.Get()
	}
	if !IsNil(o.TableSizes) {
		toSerialize["table_sizes"] = o.TableSizes
	}
	return toSerialize, nil
}

type NullableAPIInfo struct {
	value *APIInfo
	isSet bool
}

func (v NullableAPIInfo) Get() *APIInfo {
	return v.value
}

func (v *NullableAPIInfo) Set(val *APIInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIInfo(val *APIInfo) *NullableAPIInfo {
	return &NullableAPIInfo{value: val, isSet: true}
}

func (v NullableAPIInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


