# coding: utf-8

"""
    Deadlock API

     ## Support the Deadlock API  Whether you're building your own database, developing data science projects, or enhancing your website with game and player analytics, the Deadlock API has the data you need.  Your sponsorship helps keep this resource open, free and future-proof for everyone. By supporting the Deadlock API, you will enable continued development, new features and reliable access for developers, analysts and streamers worldwide.  Help us continue to provide the data you need - sponsor the Deadlock API today!  **-> You can Sponsor the Deadlock API on [Patreon](https://www.patreon.com/c/user?u=68961896) or [GitHub](https://github.com/sponsors/raimannma)**  ## Disclaimer _deadlock-api.com is not endorsed by Valve and does not reflect the views or opinions of Valve or anyone officially involved in producing or managing Valve properties. Valve and all associated properties are trademarks or registered trademarks of Valve Corporation_         

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from deadlock-api-client.api.analytics_api import AnalyticsApi


class TestAnalyticsApi(unittest.TestCase):
    """AnalyticsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AnalyticsApi()

    def tearDown(self) -> None:
        pass

    def test_ability_order_stats(self) -> None:
        """Test case for ability_order_stats

        Ability Order Stats
        """
        pass

    def test_build_item_stats(self) -> None:
        """Test case for build_item_stats

        Build Item Stats
        """
        pass

    def test_hero_comb_stats(self) -> None:
        """Test case for hero_comb_stats

        Hero Comb Stats
        """
        pass

    def test_hero_counters_stats(self) -> None:
        """Test case for hero_counters_stats

        Hero Counter Stats
        """
        pass

    def test_hero_scoreboard(self) -> None:
        """Test case for hero_scoreboard

        Hero Scoreboard
        """
        pass

    def test_hero_stats(self) -> None:
        """Test case for hero_stats

        Hero Stats
        """
        pass

    def test_hero_synergies_stats(self) -> None:
        """Test case for hero_synergies_stats

        Hero Synergy Stats
        """
        pass

    def test_item_permutation_stats(self) -> None:
        """Test case for item_permutation_stats

        Item Permutation Stats
        """
        pass

    def test_item_stats(self) -> None:
        """Test case for item_stats

        Item Stats
        """
        pass

    def test_player_scoreboard(self) -> None:
        """Test case for player_scoreboard

        Player Scoreboard
        """
        pass

    def test_player_stats_metrics(self) -> None:
        """Test case for player_stats_metrics

        Player Stats Metrics
        """
        pass


if __name__ == '__main__':
    unittest.main()
