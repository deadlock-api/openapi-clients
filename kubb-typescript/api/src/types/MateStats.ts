/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/


export type MateStats = {
    /**
     * @type array
    */
    matches: number[];
    /**
     * @minLength 0
     * @type integer, int64
    */
    matches_played: number;
    /**
     * @minLength 0
     * @type integer, int32
    */
    mate_id: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    wins: number;
};

export type MateStatsPathParams = {
    /**
     * @description The players `SteamID3`
     * @minLength 0
     * @type integer, int32
    */
    account_id: number;
};

export type MateStatsQueryParams = {
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    min_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    max_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    min_duration_s?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    max_duration_s?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    min_average_badge?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    max_average_badge?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_match_id?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_match_id?: number | null;
    /**
     * @description Filter based on the number of matches played.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_matches_played?: number | null;
    /**
     * @description Filter based on the number of matches played.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_matches_played?: number | null;
    /**
     * @description Filter based on whether the mates were on the same party.
     * @default true
     * @type boolean | undefined
    */
    same_party?: boolean;
};

/**
 * @description Mate Stats
*/
export type MateStats200 = MateStats[];

/**
 * @description Provided parameters are invalid.
*/
export type MateStats400 = any;

/**
 * @description Failed to fetch mate stats
*/
export type MateStats500 = any;

export type MateStatsQueryResponse = MateStats200;

export type MateStatsQuery = {
    Response: MateStats200;
    PathParams: MateStatsPathParams;
    QueryParams: MateStatsQueryParams;
    Errors: MateStats400 | MateStats500;
};