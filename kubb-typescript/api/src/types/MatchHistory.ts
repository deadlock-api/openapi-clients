/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { PlayerMatchHistoryEntry } from "./PlayerMatchHistoryEntry.ts";

export type MatchHistoryPathParams = {
    /**
     * @description The players `SteamID3`
     * @minLength 0
     * @type integer, int32
    */
    account_id: number;
};

export type MatchHistoryQueryParams = {
    /**
     * @description Refetch the match history from Steam, even if it is already cached in `ClickHouse`.\nOnly use this if you are sure that the data in `ClickHouse` is outdated.\nEnabling this flag results in a strict rate limit.
     * @type boolean | undefined
    */
    force_refetch?: boolean;
    /**
     * @description Return only the already stored match history from `ClickHouse`.\nThere is no rate limit for this option, so if you need a lot of data, you can use this option.\nThis option is not compatible with `force_refetch`.
     * @type boolean | undefined
    */
    only_stored_history?: boolean;
};

export type MatchHistory200 = PlayerMatchHistoryEntry[];

/**
 * @description Provided parameters are invalid.
*/
export type MatchHistory400 = any;

/**
 * @description Rate limit exceeded
*/
export type MatchHistory429 = any;

/**
 * @description Fetching player match history failed
*/
export type MatchHistory500 = any;

export type MatchHistoryQueryResponse = MatchHistory200;

export type MatchHistoryQuery = {
    Response: MatchHistory200;
    PathParams: MatchHistoryPathParams;
    QueryParams: MatchHistoryQueryParams;
    Errors: MatchHistory400 | MatchHistory429 | MatchHistory500;
};