/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { AnalyticsHeroStats } from "./AnalyticsHeroStats.ts";

export type HeroStats = {
    /**
     * @minLength 0
     * @type integer, int32
    */
    account_id: number;
    /**
     * @type number, double
    */
    accuracy: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    assists: number;
    /**
     * @type number, double
    */
    assists_per_min: number;
    /**
     * @type number, double
    */
    creeps_per_min: number;
    /**
     * @type number, double
    */
    crit_shot_rate: number;
    /**
     * @deprecated
     * @type number, double
    */
    damage_mitigated_per_min: number;
    /**
     * @type number, double
    */
    damage_per_min: number;
    /**
     * @type number, double
    */
    damage_per_soul: number;
    /**
     * @type number, double
    */
    damage_taken_per_min: number;
    /**
     * @type number, double
    */
    damage_taken_per_soul: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    deaths: number;
    /**
     * @type number, double
    */
    deaths_per_min: number;
    /**
     * @type number, double
    */
    denies_per_match: number;
    /**
     * @type number, double
    */
    denies_per_min: number;
    /**
     * @type number, double
    */
    ending_level: number;
    /**
     * @description See more: <https://assets.deadlock-api.com/v2/heroes>
     * @minLength 0
     * @type integer, int32
    */
    hero_id: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    kills: number;
    /**
     * @type number, double
    */
    kills_per_min: number;
    /**
     * @type number, double
    */
    last_hits_per_min: number;
    /**
     * @minLength 0
     * @type integer, int32
    */
    last_played: number;
    /**
     * @type array
    */
    matches: number[];
    /**
     * @minLength 0
     * @type integer, int64
    */
    matches_played: number;
    /**
     * @type number, double
    */
    networth_per_min: number;
    /**
     * @type number, double
    */
    obj_damage_per_min: number;
    /**
     * @type number, double
    */
    obj_damage_per_soul: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    time_played: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    wins: number;
};

export const heroStatsQueryParamsBucketEnum = {
    "no_bucket": "no_bucket",
    "start_time_hour": "start_time_hour",
    "start_time_day": "start_time_day",
    "start_time_week": "start_time_week",
    "start_time_month": "start_time_month"
} as const;

export type HeroStatsQueryParamsBucketEnum = (typeof heroStatsQueryParamsBucketEnum)[keyof typeof heroStatsQueryParamsBucketEnum];

export type HeroStatsQueryParams = {
    /**
     * @description Bucket allows you to group the stats by a specific field.
     * @type string | undefined
    */
    bucket?: HeroStatsQueryParamsBucketEnum;
    /**
     * @description Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.
     * @default 1754006400
     * @type integer,null | undefined, int64
    */
    min_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    max_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    min_duration_s?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    max_duration_s?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_networth?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_networth?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    min_average_badge?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    max_average_badge?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_match_id?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_match_id?: number | null;
    /**
     * @description Filter players based on the number of matches they have played with a specific hero.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_hero_matches?: number | null;
    /**
     * @description Filter players based on the number of matches they have played with a specific hero.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_hero_matches?: number | null;
    /**
     * @description Comma separated list of item ids to include (only heroes who have purchased these items). See more: <https://assets.deadlock-api.com/v2/items>
     * @type array,null | undefined
    */
    include_item_ids?: number[] | null;
    /**
     * @description Comma separated list of item ids to exclude (only heroes who have not purchased these items). See more: <https://assets.deadlock-api.com/v2/items>
     * @type array,null | undefined
    */
    exclude_item_ids?: number[] | null;
    /**
     * @description Filter for matches with a specific player account ID.
     * @minLength 0
     * @type integer,null | undefined, int32
    */
    account_id?: number | null;
    /**
     * @description Comma separated list of account ids to include
     * @type array,null | undefined
    */
    account_ids?: number[] | null;
};

/**
 * @description Hero Stats
*/
export type HeroStats200 = AnalyticsHeroStats[];

/**
 * @description Provided parameters are invalid.
*/
export type HeroStats400 = any;

/**
 * @description Failed to fetch hero stats
*/
export type HeroStats500 = any;

export type HeroStatsQueryResponse = HeroStats200;

export type HeroStatsQuery = {
    Response: HeroStats200;
    QueryParams: HeroStatsQueryParams;
    Errors: HeroStats400 | HeroStats500;
};