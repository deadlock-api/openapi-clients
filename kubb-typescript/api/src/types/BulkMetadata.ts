/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/


export const bulkMetadataQueryParamsOrderByEnum = {
    "match_id": "match_id",
    "start_time": "start_time"
} as const;

export type BulkMetadataQueryParamsOrderByEnum = (typeof bulkMetadataQueryParamsOrderByEnum)[keyof typeof bulkMetadataQueryParamsOrderByEnum];

export const bulkMetadataQueryParamsOrderDirectionEnum = {
    "desc": "desc",
    "asc": "asc"
} as const;

export type BulkMetadataQueryParamsOrderDirectionEnum = (typeof bulkMetadataQueryParamsOrderDirectionEnum)[keyof typeof bulkMetadataQueryParamsOrderDirectionEnum];

export type BulkMetadataQueryParams = {
    /**
     * @description Include match info in the response.
     * @default "true"
     * @type boolean | undefined
    */
    include_info?: boolean;
    /**
     * @description Include objectives in the response.
     * @type boolean | undefined
    */
    include_objectives?: boolean;
    /**
     * @description Include midboss in the response.
     * @type boolean | undefined
    */
    include_mid_boss?: boolean;
    /**
     * @description Include player info in the response.
     * @type boolean | undefined
    */
    include_player_info?: boolean;
    /**
     * @description Include player items in the response.
     * @type boolean | undefined
    */
    include_player_items?: boolean;
    /**
     * @description Include player stats in the response.
     * @type boolean | undefined
    */
    include_player_stats?: boolean;
    /**
     * @description Include player death details in the response.
     * @type boolean | undefined
    */
    include_player_death_details?: boolean;
    /**
     * @description Comma separated list of match ids, limited by `limit`
     * @type array,null | undefined
    */
    match_ids?: number[] | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    min_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    max_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    min_duration_s?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    max_duration_s?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    min_average_badge?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    max_average_badge?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_match_id?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_match_id?: number | null;
    /**
     * @description Filter matches based on whether they are in the high skill range.
     * @type boolean,null | undefined
    */
    is_high_skill_range_parties?: boolean | null;
    /**
     * @description Filter matches based on whether they are in the low priority pool.
     * @type boolean,null | undefined
    */
    is_low_pri_pool?: boolean | null;
    /**
     * @description Filter matches based on whether they are in the new player pool.
     * @type boolean,null | undefined
    */
    is_new_player_pool?: boolean | null;
    /**
     * @description Filter matches by account IDs of players that participated in the match.
     * @type array,null | undefined
    */
    account_ids?: number[] | null;
    /**
     * @description The field to order the results by.
     * @type string | undefined
    */
    order_by?: BulkMetadataQueryParamsOrderByEnum;
    /**
     * @description The direction to order the results by.
     * @type string | undefined
    */
    order_direction?: BulkMetadataQueryParamsOrderDirectionEnum;
    /**
     * @description The maximum number of matches to return.
     * @minLength 1
     * @maxLength 10000
     * @default 1000
     * @type integer | undefined, int32
    */
    limit?: number;
};

export type BulkMetadata200 = number[];

/**
 * @description Provided parameters are invalid.
*/
export type BulkMetadata400 = any;

/**
 * @description Rate limit exceeded
*/
export type BulkMetadata429 = any;

export type BulkMetadataQueryResponse = BulkMetadata200;

export type BulkMetadataQuery = {
    Response: BulkMetadata200;
    QueryParams: BulkMetadataQueryParams;
    Errors: BulkMetadata400 | BulkMetadata429;
};