/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/


export type HeroCombStats = {
    /**
     * @description See more: <https://assets.deadlock-api.com/v2/heroes>
     * @type array
    */
    hero_ids: number[];
    /**
     * @minLength 0
     * @type integer, int64
    */
    losses: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    matches: number;
    /**
     * @minLength 0
     * @type integer, int64
    */
    wins: number;
};

export type HeroCombStatsQueryParams = {
    /**
     * @description Filter matches based on their start time (Unix timestamp). **Default:** 30 days ago.
     * @default 1754006400
     * @type integer,null | undefined, int64
    */
    min_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    max_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    min_duration_s?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    max_duration_s?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_networth?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_networth?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    min_average_badge?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    max_average_badge?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_match_id?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_match_id?: number | null;
    /**
     * @description Comma separated list of hero ids to include. See more: <https://assets.deadlock-api.com/v2/heroes>
     * @type array,null | undefined
    */
    include_hero_ids?: number[] | null;
    /**
     * @description Comma separated list of hero ids to exclude. See more: <https://assets.deadlock-api.com/v2/heroes>
     * @type array,null | undefined
    */
    exclude_hero_ids?: number[] | null;
    /**
     * @description The minimum number of matches played for a hero combination to be included in the response.
     * @minLength 1
     * @default 20
     * @type integer,null | undefined, int32
    */
    min_matches?: number | null;
    /**
     * @description The maximum number of matches played for a hero combination to be included in the response.
     * @minLength 1
     * @type integer,null | undefined, int32
    */
    max_matches?: number | null;
    /**
     * @description The combination size to return.
     * @minLength 2
     * @maxLength 6
     * @default 6
     * @type integer,null | undefined, int32
    */
    comb_size?: number | null;
    /**
     * @description Filter for matches with a specific player account ID.
     * @minLength 0
     * @type integer,null | undefined, int32
    */
    account_id?: number | null;
    /**
     * @description Comma separated list of account ids to include
     * @type array,null | undefined
    */
    account_ids?: number[] | null;
};

/**
 * @description Hero Comb Stats
*/
export type HeroCombStats200 = HeroCombStats[];

/**
 * @description Provided parameters are invalid.
*/
export type HeroCombStats400 = any;

/**
 * @description Failed to fetch hero comb stats
*/
export type HeroCombStats500 = any;

export type HeroCombStatsQueryResponse = HeroCombStats200;

export type HeroCombStatsQuery = {
    Response: HeroCombStats200;
    QueryParams: HeroCombStatsQueryParams;
    Errors: HeroCombStats400 | HeroCombStats500;
};