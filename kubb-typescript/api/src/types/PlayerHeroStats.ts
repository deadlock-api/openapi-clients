/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { HeroStats } from "./HeroStats.ts";

export type PlayerHeroStatsQueryParams = {
    /**
     * @description Comma separated list of account ids, Account IDs are in `SteamID3` format.
     * @type array
    */
    account_ids: number[];
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    min_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their start time (Unix timestamp).
     * @type integer,null | undefined, int64
    */
    max_unix_timestamp?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    min_duration_s?: number | null;
    /**
     * @description Filter matches based on their duration in seconds (up to 7000s).
     * @minLength 0
     * @maxLength 7000
     * @type integer,null | undefined, int64
    */
    max_duration_s?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_networth?: number | null;
    /**
     * @description Filter players based on their net worth.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_networth?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    min_average_badge?: number | null;
    /**
     * @description Filter matches based on the average badge level (0-116) of *both* teams involved. See more: <https://assets.deadlock-api.com/v2/ranks>
     * @minLength 0
     * @maxLength 116
     * @type integer,null | undefined, int32
    */
    max_average_badge?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    min_match_id?: number | null;
    /**
     * @description Filter matches based on their ID.
     * @minLength 0
     * @type integer,null | undefined, int64
    */
    max_match_id?: number | null;
};

/**
 * @description Hero Stats
*/
export type PlayerHeroStats200 = HeroStats[];

/**
 * @description Provided parameters are invalid.
*/
export type PlayerHeroStats400 = any;

/**
 * @description Failed to fetch hero stats
*/
export type PlayerHeroStats500 = any;

export type PlayerHeroStatsQueryResponse = PlayerHeroStats200;

export type PlayerHeroStatsQuery = {
    Response: PlayerHeroStats200;
    QueryParams: PlayerHeroStatsQueryParams;
    Errors: PlayerHeroStats400 | PlayerHeroStats500;
};