/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { LeaderboardHeroQueryResponse, LeaderboardHeroPathParams, LeaderboardHero400, LeaderboardHero500 } from '../types/LeaderboardHero.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getLeaderboardHeroUrl(region: LeaderboardHeroPathParams['region'], hero_id: LeaderboardHeroPathParams['hero_id']) {
  const res = { method: 'GET', url: `/v1/leaderboard/${region}/${hero_id}` as const }
  return res
}

/**
 * @description Returns the leaderboard for a specific hero.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Hero Leaderboard
 * {@link /v1/leaderboard/:region/:hero_id}
 */
export async function leaderboardHero(
  region: LeaderboardHeroPathParams['region'],
  hero_id: LeaderboardHeroPathParams['hero_id'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<LeaderboardHeroQueryResponse, ResponseErrorConfig<LeaderboardHero400 | LeaderboardHero500>, unknown>({
    method: 'GET',
    url: getLeaderboardHeroUrl(region, hero_id).url.toString(),
    ...requestConfig,
  })
  return res.data
}