/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { ActiveMatchesRawQueryResponse, ActiveMatchesRaw500 } from '../types/ActiveMatchesRaw.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getActiveMatchesRawUrl() {
  const res = { method: 'GET', url: `/v1/matches/active/raw` as const }
  return res
}

/**
 * @description Returns active matches that are currently being played, serialized as protobuf message.Fetched from the watch tab in game, which is limited to the **top 200 matches**.You have to decode the protobuf message.Protobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)Relevant Protobuf Message:- CMsgClientToGcGetActiveMatchesResponse### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Active as Protobuf
 * {@link /v1/matches/active/raw}
 */
export async function activeMatchesRaw(config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<ActiveMatchesRawQueryResponse, ResponseErrorConfig<ActiveMatchesRaw500>, unknown>({
    method: 'GET',
    url: getActiveMatchesRawUrl().url.toString(),
    ...requestConfig,
  })
  return res.data
}