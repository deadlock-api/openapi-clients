/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { LeaderboardRawQueryResponse, LeaderboardRawPathParams, LeaderboardRaw400, LeaderboardRaw500 } from "../types/LeaderboardRaw.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getLeaderboardRawUrl(region: LeaderboardRawPathParams["region"]) {
  const res = { method: 'GET', url: `/v1/leaderboard/${region}/raw` as const }
return res
}

/**
 * @description Returns the leaderboard, serialized as protobuf message.You have to decode the protobuf message.Protobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)Relevant Protobuf Message:- CMsgClientToGcGetLeaderboardResponse### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Leaderboard as Protobuf
 * {@link /v1/leaderboard/:region/raw}
 */
export async function leaderboardRaw(region: LeaderboardRawPathParams["region"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<LeaderboardRawQueryResponse, ResponseErrorConfig<LeaderboardRaw400 | LeaderboardRaw500>, unknown>({ method : "GET", url : getLeaderboardRawUrl(region).url.toString(), ... requestConfig })
return res.data
}