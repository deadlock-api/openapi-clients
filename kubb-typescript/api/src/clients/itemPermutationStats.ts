/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  ItemPermutationStatsQueryResponse,
  ItemPermutationStatsQueryParams,
  ItemPermutationStats400,
  ItemPermutationStats500,
} from '../types/ItemPermutationStats.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getItemPermutationStatsUrl() {
  const res = { method: 'GET', url: `/v1/analytics/item-permutation-stats` as const }
  return res
}

/**
 * @description Retrieves item permutation statistics based on historical match data.Results are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Item Permutation Stats
 * {@link /v1/analytics/item-permutation-stats}
 */
export async function itemPermutationStats(params?: ItemPermutationStatsQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<ItemPermutationStatsQueryResponse, ResponseErrorConfig<ItemPermutationStats400 | ItemPermutationStats500>, unknown>({
    method: 'GET',
    url: getItemPermutationStatsUrl().url.toString(),
    params,
    ...requestConfig,
  })
  return res.data
}