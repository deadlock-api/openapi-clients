/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { CardQueryResponse, CardPathParams, Card400, Card429, Card500 } from '../types/Card.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getCardUrl(account_id: CardPathParams['account_id']) {
  const res = { method: 'GET', url: `/v1/players/${account_id}/card` as const }
  return res
}

/**
 * @description This endpoint returns the player card for the given `account_id`.You have to be friend with one of the bots to use this endpoint.On first use this endpoint will return an error with a list of invite links to add the bot as friend.From then on you can use this endpoint.Protobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)Relevant Protobuf Messages:- CMsgClientToGcGetProfileCard- CMsgCitadelProfileCard### Rate Limits:| Type | Limit || ---- | ----- || IP | 5req/min || Key | 20req/min & 800req/h || Global | 200req/min |
 * @summary Card
 * {@link /v1/players/:account_id/card}
 */
export async function card(account_id: CardPathParams['account_id'], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<CardQueryResponse, ResponseErrorConfig<Card400 | Card429 | Card500>, unknown>({
    method: 'GET',
    url: getCardUrl(account_id).url.toString(),
    ...requestConfig,
  })
  return res.data
}