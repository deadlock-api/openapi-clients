/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { IngestSaltsMutationRequest, IngestSaltsMutationResponse, IngestSalts400, IngestSalts500 } from '../types/IngestSalts.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getIngestSaltsUrl() {
  const res = { method: 'POST', url: `/v1/matches/salts` as const }
  return res
}

/**
 * @description You can use this endpoint to help us collecting data.The endpoint accepts a list of MatchSalts objects, which contain the following fields:- `match_id`: The match ID- `cluster_id`: The cluster ID- `metadata_salt`: The metadata salt- `replay_salt`: The replay salt- `username`: The username of the person who submitted the match### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Match Salts Ingest
 * {@link /v1/matches/salts}
 */
export async function ingestSalts(
  data?: IngestSaltsMutationRequest,
  config: Partial<RequestConfig<IngestSaltsMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<IngestSaltsMutationResponse, ResponseErrorConfig<IngestSalts400 | IngestSalts500>, IngestSaltsMutationRequest>({
    method: 'POST',
    url: getIngestSaltsUrl().url.toString(),
    data: requestData,
    ...requestConfig,
  })
  return res.data
}