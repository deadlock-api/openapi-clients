/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { SearchBuildsQueryResponse, SearchBuildsQueryParams, SearchBuilds400, SearchBuilds429, SearchBuilds500 } from "../types/SearchBuilds.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getSearchBuildsUrl() {
  const res = { method: 'GET', url: `/v1/builds` as const }
return res
}

/**
 * @description Search for builds based on various criteria.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Search
 * {@link /v1/builds}
 */
export async function searchBuilds(params?: SearchBuildsQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<SearchBuildsQueryResponse, ResponseErrorConfig<SearchBuilds400 | SearchBuilds429 | SearchBuilds500>, unknown>({ method : "GET", url : getSearchBuildsUrl().url.toString(), params, ... requestConfig })
return res.data
}