/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { HeroCountersStatsQueryResponse, HeroCountersStatsQueryParams, HeroCountersStats400, HeroCountersStats500 } from '../types/HeroCountersStats.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getHeroCountersStatsUrl() {
  const res = { method: 'GET', url: `/v1/analytics/hero-counter-stats` as const }
  return res
}

/**
 * @description Retrieves hero-versus-hero matchup statistics based on historical match data.This endpoint analyzes completed matches to calculate how often a specific hero (`hero_id`) wins against an enemy hero (`enemy_hero_id`) and the total number of times they have faced each other under the specified filter conditions.Results are cached for **1 hour** based on the combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Hero Counter Stats
 * {@link /v1/analytics/hero-counter-stats}
 */
export async function heroCountersStats(params?: HeroCountersStatsQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<HeroCountersStatsQueryResponse, ResponseErrorConfig<HeroCountersStats400 | HeroCountersStats500>, unknown>({
    method: 'GET',
    url: getHeroCountersStatsUrl().url.toString(),
    params,
    ...requestConfig,
  })
  return res.data
}