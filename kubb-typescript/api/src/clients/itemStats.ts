/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { ItemStatsQueryResponse, ItemStatsQueryParams, ItemStats400, ItemStats500 } from "../types/ItemStats.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getItemStatsUrl() {
  const res = { method: 'GET', url: `/v1/analytics/item-stats` as const }
return res
}

/**
 * @description Retrieves item statistics based on historical match data.Results are cached for **1 hour** based on the unique combination of query parameters provided. Subsequent identical requests within this timeframe will receive the cached response.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Item Stats
 * {@link /v1/analytics/item-stats}
 */
export async function itemStats(params?: ItemStatsQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<ItemStatsQueryResponse, ResponseErrorConfig<ItemStats400 | ItemStats500>, unknown>({ method : "GET", url : getItemStatsUrl().url.toString(), params, ... requestConfig })
return res.data
}