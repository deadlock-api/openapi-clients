/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { SaltsQueryResponse, SaltsPathParams, Salts400, Salts429, Salts500 } from '../types/Salts.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getSaltsUrl(match_id: SaltsPathParams['match_id']) {
  const res = { method: 'GET', url: `/v1/matches/${match_id}/salts` as const }
  return res
}

/**
 * @description This endpoints returns salts that can be used to fetch metadata and demofile for a match.**Note:** We currently fetch many matches without salts, so for these matches we do not have salts stored.### Rate Limits:| Type | Limit || ---- | ----- || IP | From DB: 100req/s<br>From Steam: 10req/30mins || Key | From DB: -<br>From Steam: 10req/min || Global | From DB: -<br>From Steam: 10req/10s |
 * @summary Salts
 * {@link /v1/matches/:match_id/salts}
 */
export async function salts(match_id: SaltsPathParams['match_id'], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<SaltsQueryResponse, ResponseErrorConfig<Salts400 | Salts429 | Salts500>, unknown>({
    method: 'GET',
    url: getSaltsUrl(match_id).url.toString(),
    ...requestConfig,
  })
  return res.data
}