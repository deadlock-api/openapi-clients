/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { PlayerScoreboardQueryResponse, PlayerScoreboardQueryParams, PlayerScoreboard400, PlayerScoreboard500 } from "../types/PlayerScoreboard.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getPlayerScoreboardUrl() {
  const res = { method: 'GET', url: `/v1/analytics/scoreboards/players` as const }
return res
}

/**
 * @description This endpoint returns the player scoreboard.### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Player Scoreboard
 * {@link /v1/analytics/scoreboards/players}
 */
export async function playerScoreboard(params: PlayerScoreboardQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<PlayerScoreboardQueryResponse, ResponseErrorConfig<PlayerScoreboard400 | PlayerScoreboard500>, unknown>({ method : "GET", url : getPlayerScoreboardUrl().url.toString(), params, ... requestConfig })
return res.data
}