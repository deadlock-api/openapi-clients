/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { VariablesResolveQueryResponse, VariablesResolveQueryParams, VariablesResolve400 } from '../types/VariablesResolve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getVariablesResolveUrl() {
  const res = { method: 'GET', url: `/v1/commands/variables/resolve` as const }
  return res
}

/**
 * @description Resolves variables and returns a map of variable name to resolved value.### Rate Limits:| Type | Limit || ---- | ----- || IP | 60req/min || Key | - || Global | 300req/min |
 * @summary Resolve Variables
 * {@link /v1/commands/variables/resolve}
 */
export async function variablesResolve(params: VariablesResolveQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<VariablesResolveQueryResponse, ResponseErrorConfig<VariablesResolve400>, unknown>({
    method: 'GET',
    url: getVariablesResolveUrl().url.toString(),
    params,
    ...requestConfig,
  })
  return res.data
}