/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { LeaderboardHeroRawQueryResponse, LeaderboardHeroRawPathParams, LeaderboardHeroRaw400, LeaderboardHeroRaw500 } from "../types/LeaderboardHeroRaw.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getLeaderboardHeroRawUrl(region: LeaderboardHeroRawPathParams["region"], hero_id: LeaderboardHeroRawPathParams["hero_id"]) {
  const res = { method: 'GET', url: `/v1/leaderboard/${region}/${hero_id}/raw` as const }
return res
}

/**
 * @description Returns the leaderboard for a specific hero, serialized as protobuf message.You have to decode the protobuf message.Protobuf definitions can be found here: [https://github.com/SteamDatabase/Protobufs](https://github.com/SteamDatabase/Protobufs)Relevant Protobuf Message:- CMsgClientToGcGetLeaderboardResponse### Rate Limits:| Type | Limit || ---- | ----- || IP | 100req/s || Key | - || Global | - |
 * @summary Hero Leaderboard as Protobuf
 * {@link /v1/leaderboard/:region/:hero_id/raw}
 */
export async function leaderboardHeroRaw(region: LeaderboardHeroRawPathParams["region"], hero_id: LeaderboardHeroRawPathParams["hero_id"], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<LeaderboardHeroRawQueryResponse, ResponseErrorConfig<LeaderboardHeroRaw400 | LeaderboardHeroRaw500>, unknown>({ method : "GET", url : getLeaderboardHeroRawUrl(region, hero_id).url.toString(), ... requestConfig })
return res.data
}