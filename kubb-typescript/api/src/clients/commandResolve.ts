/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { CommandResolveQueryResponse, CommandResolveQueryParams, CommandResolve400 } from "../types/CommandResolve.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getCommandResolveUrl() {
  const res = { method: 'GET', url: `/v1/commands/resolve` as const }
return res
}

/**
 * @description     Resolves a command and returns the resolved command.### Rate Limits:| Type | Limit || ---- | ----- || IP | 60req/60s || Key | - || Global | 300req/60s |
 * @summary Resolve Command
 * {@link /v1/commands/resolve}
 */
export async function commandResolve(params: CommandResolveQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<CommandResolveQueryResponse, ResponseErrorConfig<CommandResolve400>, unknown>({ method : "GET", url : getCommandResolveUrl().url.toString(), params, ... requestConfig })
return res.data
}