/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@kubb/plugin-client/clients/axios";
import type { GetItemsByTypeV2ItemsByTypeTypeGetQueryResponse, GetItemsByTypeV2ItemsByTypeTypeGetPathParams, GetItemsByTypeV2ItemsByTypeTypeGetQueryParams, GetItemsByTypeV2ItemsByTypeTypeGet422 } from "../types/GetItemsByTypeV2ItemsByTypeTypeGet.ts";
import type { RequestConfig, ResponseErrorConfig } from "@kubb/plugin-client/clients/axios";

function getGetItemsByTypeV2ItemsByTypeTypeGetUrl(type: GetItemsByTypeV2ItemsByTypeTypeGetPathParams["type"]) {
  const res = { method: 'GET', url: `/v2/items/by-type/${type}` as const }
return res
}

/**
 * @summary Get Items By Type
 * {@link /v2/items/by-type/:type}
 */
export async function getItemsByTypeV2ItemsByTypeTypeGet(type: GetItemsByTypeV2ItemsByTypeTypeGetPathParams["type"], params?: GetItemsByTypeV2ItemsByTypeTypeGetQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client:request = fetch, ...requestConfig } = config


const res = await request<GetItemsByTypeV2ItemsByTypeTypeGetQueryResponse, ResponseErrorConfig<GetItemsByTypeV2ItemsByTypeTypeGet422>, unknown>({ method : "GET", url : getGetItemsByTypeV2ItemsByTypeTypeGetUrl(type).url.toString(), params, ... requestConfig })
return res.data
}